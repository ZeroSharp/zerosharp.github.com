<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ZeroSharp]]></title>
  <link href="http://ZeroSharp.github.com/atom.xml" rel="self"/>
  <link href="http://ZeroSharp.github.com/"/>
  <updated>2018-09-23T09:48:16+01:00</updated>
  <id>http://ZeroSharp.github.com/</id>
  <author>
    <name><![CDATA[Robert Anderson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Smart hiding of the selection boxes in XAF web applications]]></title>
    <link href="http://ZeroSharp.github.com/smart-hiding-of-the-selection-boxes-in-xaf-web-applications/"/>
    <updated>2016-11-06T18:39:00+00:00</updated>
    <id>http://ZeroSharp.github.com/smart-hiding-of-the-selection-boxes-in-xaf-web-applications</id>
    <content type="html"><![CDATA[<p>When an <a href="https://www.devexpress.com/products/net/application_framework/">XAF</a> list view has no selection-based actions available, the selection box still appears in the grid. Users get confused. In this post, we&#8217;ll look at a workaround.</p>

<h2>The problem</h2>

<p>In the XAF MainDemo, lets make Departments read-only for the User role.</p>

<figure class='code'><figcaption><span>Updater.cs</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">userRole</span><span class="p">.</span><span class="n">AddTypePermissionsRecursively</span><span class="p">&lt;</span><span class="n">Department</span><span class="p">&gt;(</span><span class="n">SecurityOperations</span><span class="p">.</span><span class="n">Create</span><span class="p">,</span> <span class="n">SecurityPermissionState</span><span class="p">.</span><span class="n">Deny</span><span class="p">);</span>
</span><span class='line'><span class="n">userRole</span><span class="p">.</span><span class="n">AddTypePermissionsRecursively</span><span class="p">&lt;</span><span class="n">Department</span><span class="p">&gt;(</span><span class="n">SecurityOperations</span><span class="p">.</span><span class="n">Write</span><span class="p">,</span> <span class="n">SecurityPermissionState</span><span class="p">.</span><span class="n">Deny</span><span class="p">);</span>
</span><span class='line'><span class="n">userRole</span><span class="p">.</span><span class="n">AddTypePermissionsRecursively</span><span class="p">&lt;</span><span class="n">Department</span><span class="p">&gt;(</span><span class="n">SecurityOperations</span><span class="p">.</span><span class="n">Delete</span><span class="p">,</span> <span class="n">SecurityPermissionState</span><span class="p">.</span><span class="n">Deny</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then start the web application, login as John and navigate to the Departments list view. There is a column selection box, but it serves no purpose. There are no actions that depend on a grid selection.</p>

<p><span class='caption-wrapper'><img class='caption' src='http://ZeroSharp.github.com/images/blog/selection-visibility-controller-001.png' width='' height='' title='Without the SelectionColumnVisibilityController'><span class='caption-text'>Without the SelectionColumnVisibilityController</span></span></p>

<h2>The fix</h2>

<p>Here is a controller which calculates whether there are any available actions which require one or more rows to be selected. If there are none, the selection box will not appear.</p>

<p>Add the following controller to the MainDemo.Module.Web project. It hides the selection box if there are no actions which depend on a grid selection.</p>

<figure class='code'><figcaption><span>SelectionColumnVisibilityController.cs</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">DevExpress.ExpressApp</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">DevExpress.ExpressApp.Actions</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">DevExpress.ExpressApp.Editors</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">DevExpress.ExpressApp.SystemModule</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">DevExpress.Web</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">namespace</span> <span class="nn">MainDemo.Module.Web.Controllers</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">class</span> <span class="nc">SelectionColumnVisibilityController</span> <span class="p">:</span> <span class="n">ViewController</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">public</span> <span class="nf">SelectionColumnVisibilityController</span><span class="p">()</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">TargetViewType</span> <span class="p">=</span> <span class="n">ViewType</span><span class="p">.</span><span class="n">ListView</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">private</span> <span class="kt">bool</span> <span class="nf">IsSelectionColumnVisible</span><span class="p">()</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">bool</span> <span class="n">isSelectionColumnRequired</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>            <span class="c1">// remove checkbox if there are no available actions</span>
</span><span class='line'>            <span class="k">foreach</span> <span class="p">(</span><span class="n">Controller</span> <span class="n">controller</span> <span class="k">in</span> <span class="n">Frame</span><span class="p">.</span><span class="n">Controllers</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(!</span><span class="n">controller</span><span class="p">.</span><span class="n">Active</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">controller</span><span class="p">.</span><span class="n">Actions</span><span class="p">.</span><span class="n">Count</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="kt">bool</span> <span class="n">allowEdit</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">((</span><span class="n">Frame</span> <span class="k">is</span> <span class="n">NestedFrame</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="p">(((</span><span class="n">NestedFrame</span><span class="p">)</span><span class="n">Frame</span><span class="p">).</span><span class="n">ViewItem</span> <span class="k">is</span> <span class="n">PropertyEditor</span><span class="p">))</span>
</span><span class='line'>                    <span class="n">allowEdit</span> <span class="p">=</span> <span class="p">(</span><span class="kt">bool</span><span class="p">)((</span><span class="n">PropertyEditor</span><span class="p">)((</span><span class="n">NestedFrame</span><span class="p">)</span><span class="n">Frame</span><span class="p">).</span><span class="n">ViewItem</span><span class="p">).</span><span class="n">AllowEdit</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">foreach</span> <span class="p">(</span><span class="n">ActionBase</span> <span class="n">action</span> <span class="k">in</span> <span class="n">controller</span><span class="p">.</span><span class="n">Actions</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="k">if</span> <span class="p">(</span><span class="n">action</span><span class="p">.</span><span class="n">SelectionDependencyType</span> <span class="p">==</span> <span class="n">SelectionDependencyType</span><span class="p">.</span><span class="n">RequireMultipleObjects</span><span class="p">)</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">action</span><span class="p">.</span><span class="n">Active</span> <span class="p">||</span> <span class="n">IsActionInactiveBySelectionContext</span><span class="p">(</span><span class="n">action</span><span class="p">))</span>
</span><span class='line'>                        <span class="p">{</span>
</span><span class='line'>                            <span class="k">if</span> <span class="p">(</span><span class="n">action</span><span class="p">.</span><span class="n">Enabled</span> <span class="p">||</span> <span class="n">IsActionDisabledBySelectionContext</span><span class="p">(</span><span class="n">action</span><span class="p">))</span>
</span><span class='line'>                            <span class="p">{</span>
</span><span class='line'>                                <span class="n">isSelectionColumnRequired</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>                                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                            <span class="p">}</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">isSelectionColumnRequired</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">isSelectionColumnRequired</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">private</span> <span class="kt">bool</span> <span class="nf">IsActionInactiveBySelectionContext</span><span class="p">(</span><span class="n">ActionBase</span> <span class="n">action</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">action</span><span class="p">.</span><span class="n">Active</span><span class="p">)</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">item</span> <span class="k">in</span> <span class="n">action</span><span class="p">.</span><span class="n">Active</span><span class="p">.</span><span class="n">GetKeys</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="k">if</span> <span class="p">(</span><span class="n">item</span> <span class="p">==</span> <span class="n">ActionBase</span><span class="p">.</span><span class="n">RequireMultipleObjectsContext</span> <span class="p">||</span> <span class="n">item</span> <span class="p">==</span> <span class="n">ActionBase</span><span class="p">.</span><span class="n">RequireSingleObjectContext</span><span class="p">)</span>
</span><span class='line'>                        <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">if</span> <span class="p">(!</span><span class="n">action</span><span class="p">.</span><span class="n">Active</span><span class="p">[</span><span class="n">item</span><span class="p">])</span>
</span><span class='line'>                        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">private</span> <span class="kt">bool</span> <span class="nf">IsActionDisabledBySelectionContext</span><span class="p">(</span><span class="n">ActionBase</span> <span class="n">action</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">action</span><span class="p">.</span><span class="n">Enabled</span><span class="p">)</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">item</span> <span class="k">in</span> <span class="n">action</span><span class="p">.</span><span class="n">Enabled</span><span class="p">.</span><span class="n">GetKeys</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="k">if</span> <span class="p">(</span><span class="n">item</span> <span class="p">==</span> <span class="n">ActionBase</span><span class="p">.</span><span class="n">RequireMultipleObjectsContext</span> <span class="p">||</span>
</span><span class='line'>                        <span class="n">item</span> <span class="p">==</span> <span class="n">ActionBase</span><span class="p">.</span><span class="n">RequireSingleObjectContext</span> <span class="p">||</span>
</span><span class='line'>                        <span class="n">item</span> <span class="p">==</span> <span class="n">ActionsCriteriaViewController</span><span class="p">.</span><span class="n">EnabledByCriteriaKey</span><span class="p">)</span>
</span><span class='line'>                        <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">if</span> <span class="p">(!</span><span class="n">action</span><span class="p">.</span><span class="n">Enabled</span><span class="p">[</span><span class="n">item</span><span class="p">])</span>
</span><span class='line'>                        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnViewControlsCreated</span><span class="p">()</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">base</span><span class="p">.</span><span class="n">OnViewControlsCreated</span><span class="p">();</span>
</span><span class='line'>            <span class="n">ASPxGridView</span> <span class="n">grid</span> <span class="p">=</span> <span class="p">((</span><span class="n">ListView</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="n">View</span><span class="p">).</span><span class="n">Editor</span><span class="p">.</span><span class="n">Control</span> <span class="k">as</span> <span class="n">ASPxGridView</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">grid</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">grid</span><span class="p">.</span><span class="n">Load</span> <span class="p">+=</span> <span class="n">grid_Load</span><span class="p">;</span>
</span><span class='line'>                <span class="n">grid</span><span class="p">.</span><span class="n">DataBound</span> <span class="p">+=</span> <span class="n">grid_DataBound</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnDeactivated</span><span class="p">()</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">base</span><span class="p">.</span><span class="n">OnDeactivated</span><span class="p">();</span>
</span><span class='line'>            <span class="n">ASPxGridView</span> <span class="n">grid</span> <span class="p">=</span> <span class="p">((</span><span class="n">ListView</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="n">View</span><span class="p">).</span><span class="n">Editor</span><span class="p">.</span><span class="n">Control</span> <span class="k">as</span> <span class="n">ASPxGridView</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">grid</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">grid</span><span class="p">.</span><span class="n">DataBound</span> <span class="p">-=</span> <span class="n">grid_DataBound</span><span class="p">;</span>
</span><span class='line'>                <span class="n">grid</span><span class="p">.</span><span class="n">Load</span> <span class="p">-=</span> <span class="n">grid_Load</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">void</span> <span class="nf">grid_Load</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">SetSelectionColumnVisibility</span><span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">void</span> <span class="nf">grid_DataBound</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">SetSelectionColumnVisibility</span><span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">private</span> <span class="k">void</span> <span class="nf">SetSelectionColumnVisibility</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">bool</span> <span class="n">isSelectionColumnVisible</span> <span class="p">=</span> <span class="n">IsSelectionColumnVisible</span><span class="p">();</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">isSelectionColumnVisible</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="kt">var</span> <span class="n">grid</span> <span class="p">=</span> <span class="p">(</span><span class="n">ASPxGridView</span><span class="p">)</span><span class="n">sender</span><span class="p">;</span>
</span><span class='line'>                <span class="kt">var</span> <span class="n">selectionBoxColumn</span> <span class="p">=</span>
</span><span class='line'>                    <span class="n">grid</span><span class="p">.</span><span class="n">Columns</span>
</span><span class='line'>                        <span class="p">.</span><span class="n">OfType</span><span class="p">&lt;</span><span class="n">GridViewCommandColumn</span><span class="p">&gt;()</span>
</span><span class='line'>                        <span class="p">.</span><span class="n">Where</span><span class="p">(</span><span class="n">x</span> <span class="p">=&gt;</span> <span class="n">x</span><span class="p">.</span><span class="n">ShowSelectCheckbox</span><span class="p">)</span>
</span><span class='line'>                        <span class="p">.</span><span class="n">FirstOrDefault</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">selectionBoxColumn</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">selectionBoxColumn</span><span class="p">.</span><span class="n">Visible</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run the application again and see the difference. Now the grid looks like this. Notice, there is no longer a selection box on the row.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/selection-visibility-controller-002.png" title="With the SelectionColumnVisibilityController" ></p>

<p>By the way, this is how it looks with old-style XAF web apps.</p>

<p><span class='caption-wrapper'><img class='caption' src='http://ZeroSharp.github.com/images/blog/selection-visibility-controller-003.png' width='' height='' title='Without the SelectionColumnVisibilityController'><span class='caption-text'>Without the SelectionColumnVisibilityController</span></span></p>

<p><span class='caption-wrapper'><img class='caption' src='http://ZeroSharp.github.com/images/blog/selection-visibility-controller-004.png' width='' height='' title='With the SelectionColumnVisibilityController'><span class='caption-text'>With the SelectionColumnVisibilityController</span></span></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An XAF workaround for 'Prevent this page from creating additional dialogs.']]></title>
    <link href="http://ZeroSharp.github.com/an-xaf-workaround-for-prevent-this-page-from-creating-additional-dialogs-dot/"/>
    <updated>2016-05-16T13:51:00+01:00</updated>
    <id>http://ZeroSharp.github.com/an-xaf-workaround-for-prevent-this-page-from-creating-additional-dialogs-dot</id>
    <content type="html"><![CDATA[<p>Both Chrome and Firefox have a &#8216;feature&#8217; which allows a user to ignore future calls to <code>confirm()</code>. Once this has been checked, any subsequent calls to <code>confirm()</code> return false immediately without showing the window.</p>

<p>In XAF, this behaviour prevents the application from working correctly. For instance, it becomes impossible to confirm a deletion.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/prevent-this-page-001.png"></p>

<p>The following controller provides a work around. It injects some javascript into the page wrapping the call to <code>confirm()</code>. The new code detects when the <strong>Prevent this page from creating additional dialogs</strong> checkbox has been checked and returns true instead. The confirmation window still does not appear, but the XAF application works as if the user had pressed confirm instead of cancel.</p>

<figure class='code'><figcaption><span># HandleDisabledConfirmationsController.cs </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">using</span> <span class="n">DevExpress</span><span class="p">.</span><span class="n">ExpressApp</span><span class="p">;</span>
</span><span class='line'><span class="n">using</span> <span class="n">DevExpress</span><span class="p">.</span><span class="n">ExpressApp</span><span class="p">.</span><span class="n">Web</span><span class="p">;</span>
</span><span class='line'><span class="n">using</span> <span class="n">DevExpress</span><span class="p">.</span><span class="n">Web</span><span class="p">.</span><span class="n">Internal</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">namespace</span> <span class="n">NetModule</span><span class="p">.</span><span class="n">Web</span><span class="p">.</span><span class="n">Controllers</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">class</span> <span class="n">HandleDisabledConfirmationsController</span> <span class="o">:</span> <span class="n">Controller</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">public</span> <span class="k">static</span> <span class="n">bool</span> <span class="n">IsChrome</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">get</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">RenderUtils</span><span class="p">.</span><span class="n">Browser</span><span class="p">.</span><span class="n">IsChrome</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">public</span> <span class="k">static</span> <span class="n">bool</span> <span class="n">IsFirefox</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">get</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">RenderUtils</span><span class="p">.</span><span class="n">Browser</span><span class="p">.</span><span class="n">IsFirefox</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">protected</span> <span class="n">override</span> <span class="kt">void</span> <span class="n">OnFrameAssigned</span><span class="p">()</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">base</span><span class="p">.</span><span class="n">OnFrameAssigned</span><span class="p">();</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">IsChrome</span> <span class="o">||</span> <span class="n">IsFirefox</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">WebWindow</span> <span class="n">window</span> <span class="o">=</span> <span class="n">Frame</span> <span class="n">as</span> <span class="n">WebWindow</span><span class="p">;</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">window</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">window</span><span class="p">.</span><span class="n">CustomRegisterTemplateDependentScripts</span> <span class="o">+=</span> <span class="n">window_CustomRegisterTemplateDependentScripts</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">private</span> <span class="kt">void</span> <span class="n">window_CustomRegisterTemplateDependentScripts</span><span class="p">(</span><span class="n">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">CustomRegisterTemplateDependentScriptsEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">// wrapper for &#39;confirm&#39;</span>
</span><span class='line'>            <span class="n">WebWindow</span> <span class="n">window</span> <span class="o">=</span> <span class="p">(</span><span class="n">WebWindow</span><span class="p">)</span><span class="n">sender</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Detect the user has checked the &#39;prevent this page from creating additional dialogs&#39;.</span>
</span><span class='line'>            <span class="c1">// In which case assume all confirmations are accepted, rather than the default rejected</span>
</span><span class='line'>            <span class="n">var</span> <span class="n">confirmWrapper</span> <span class="o">=</span> <span class="err">@</span><span class="s">&quot;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">script</span><span class="o">&gt;</span>
</span><span class='line'><span class="n">window</span><span class="p">.</span><span class="n">nativeConfirm</span> <span class="o">=</span> <span class="n">window</span><span class="p">.</span><span class="n">confirm</span><span class="p">;</span>
</span><span class='line'><span class="n">window</span><span class="p">.</span><span class="n">confirm</span> <span class="o">=</span> <span class="n">function</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">timeBefore</span> <span class="o">=</span> <span class="n">new</span> <span class="n">Date</span><span class="p">();</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">confirmBool</span> <span class="o">=</span> <span class="n">nativeConfirm</span><span class="p">(</span><span class="n">message</span><span class="p">);</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">timeAfter</span> <span class="o">=</span> <span class="n">new</span> <span class="n">Date</span><span class="p">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">((</span><span class="n">timeAfter</span> <span class="o">-</span> <span class="n">timeBefore</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">350</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">confirmBool</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">confirmBool</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">script</span><span class="o">&gt;</span><span class="s">&quot;;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">e</span><span class="p">.</span><span class="n">Page</span><span class="p">.</span><span class="n">ClientScript</span><span class="p">.</span><span class="n">RegisterClientScriptBlock</span><span class="p">(</span><span class="n">GetType</span><span class="p">(),</span> <span class="s">&quot;WrapConfirmations&quot;</span><span class="p">,</span> <span class="n">confirmWrapper</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">protected</span> <span class="n">override</span> <span class="kt">void</span> <span class="n">OnDeactivated</span><span class="p">()</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">IsChrome</span> <span class="o">||</span> <span class="n">IsFirefox</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">WebWindow</span> <span class="n">window</span> <span class="o">=</span> <span class="n">Frame</span> <span class="n">as</span> <span class="n">WebWindow</span><span class="p">;</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">window</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">window</span><span class="p">.</span><span class="n">CustomRegisterTemplateDependentScripts</span> <span class="o">-=</span> <span class="n">window_CustomRegisterTemplateDependentScripts</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="n">base</span><span class="p">.</span><span class="n">OnDeactivated</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The controller works by timing the milliseconds to close the confirmation window. If it is less than 350 milliseconds we can assume the confirmation window never opened owing to the checkbox. In this scenario, it returns true (confirm) rather than false (cancel) in order for XAF to function correctly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DevExpress 2015.2 review part 2]]></title>
    <link href="http://ZeroSharp.github.com/devexpress-15-dot-2-review-part-2/"/>
    <updated>2015-12-10T09:43:00+00:00</updated>
    <id>http://ZeroSharp.github.com/devexpress-15-dot-2-review-part-2</id>
    <content type="html"><![CDATA[<p>This is the second and final dive into some of the new DevExpress XAF 2015.2 features. The <a href="http://ZeroSharp.github.com/devexpress-15-dot-2-review-part-1/">first part</a> covers the Report Designer and the new XML serialisation.</p>

<h2>Batch editing</h2>

<p>Another feature I&#8217;m excited about is the support for batch editing within the web application grids.</p>

<p>Let&#8217;s see what happens when combined with the validation rules. What happens if I edit two rows but only one has a validation problem - does the whole batch get rejected? Or just the row with the problem?</p>

<p>First I modified the edit mode of the Tasks grid to <code>Batch</code> via the model.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-15-2-review-001.png"></p>

<p>Then I added a new <code>RuleRequiredField</code> validation rule via the model.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-15-2-review-002.png"></p>

<p>I started up the MainDemo application and navigated to the Tasks view and tried to delete the subject of multiple rows at the same time.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-15-2-review-003.png"></p>

<p>I never even got to press Save because of another new 15.2 feature: <a href="https://community.devexpress.com/blogs/eaf/archive/2015/11/24/xaf-validation-module-enhancements-for-windows-and-the-web-coming-soon-in-v15-2.aspx">inplace validation</a>! The rules are being validated <em>without</em> a round trip to the server!</p>

<p>So let&#8217;s try another way. <em>Inplace Validation</em> does not work with all rule types, so I deleted my <code>RuleRequiredField</code> from the model and instead added a new <code>RuleFromBoolProperty</code> to the <code>DemoTask</code> object as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="na">[MemberDesignTimeVisibility(false)]</span>
</span><span class='line'><span class="na">[RuleFromBoolProperty(&quot;SubjectIsRequired&quot;, </span>
</span><span class='line'><span class="na">    DefaultContexts.Save, </span>
</span><span class='line'><span class="na">    &quot;Subject is required.&quot;, </span>
</span><span class='line'><span class="na">    UsedProperties = &quot;Subject&quot;, </span>
</span><span class='line'><span class="na">    SkipNullOrEmptyValues = false)]</span>
</span><span class='line'><span class="k">public</span> <span class="kt">bool</span> <span class="n">IsSubjectRequired</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">get</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">!</span><span class="n">String</span><span class="p">.</span><span class="n">IsNullOrWhiteSpace</span><span class="p">(</span><span class="n">Subject</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we go back to the list view for Task and try to set multiple subjects to empty.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-15-2-review-004.png"></p>

<p>Fantastic! This time the broken rules appear for each row and it is quite clear which message belongs to which object.</p>

<p>So the batch editing makes use of inplace validation when it can, but handles more complex validation rules well too. This is an excellent combination because the inpalce validation will help to make the client seem very quick and responsive.</p>

<h2>Conclusion</h2>

<p>This concludes my review of DevExpress 2015.2. We&#8217;ve looked in some detail at two of the most impressive new features - the way reports are serialised and the improvements to client-side validation. These changes help with performance and ease of maintenance and I&#8217;m very happy to see that the DevExpress team has focused on these areas. Looking forward to the 2016 releases!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DevExpress 2015.2 review part 1]]></title>
    <link href="http://ZeroSharp.github.com/devexpress-15-dot-2-review-part-1/"/>
    <updated>2015-12-09T14:43:00+00:00</updated>
    <id>http://ZeroSharp.github.com/devexpress-15-dot-2-review-part-1</id>
    <content type="html"><![CDATA[<p>Last week, DevExpress released 2015.2.3, their second major version of the year.</p>

<p>There are already some good blog posts about the changes:</p>

<ul>
<li><a href="http://www.codeproject.com/Tips/1060260/Whats-New-for-XAF">Michael Bogaerts</a></li>
<li><a href="http://vimarx.com/blog/92/">Gustavo Marzioni</a></li>
<li><a href="https://www.devexpress.com/Subscriptions/New-2015.xml?product=xaf">DevExpress What&#8217;s New</a></li>
</ul>


<p>Rather than repeat general overviews provided in these, this two-part blog post is more of a &#8216;deep dive&#8217;. In particular I&#8217;ll be looking at two of the new features in the expressApp Framework (XAF).
Today I&#8217;ll cover the new XML serialisation in the report designer. Tomorrow&#8217;s post will examine the new batch editing features.</p>

<h2>Reports</h2>

<p><span class='pullquote-right' data-pullquote='I&#8217;m happy to report that v1 reports are still very much present.'>
Reporting is definitely one of the areas where XAF has progressed the most in recent versions. There is now an in-browser report designer (since 14.2) and an alternative implementation of the reports (reports v2, since 13.2).</p>

<p>In this release, I was a little worried that the support for Reports v1 would be deprecated, since our production system has over 100 custom reports and we have not yet looked for an easy way to migrate these to v2. I&#8217;m happy to report that v1 reports are still very much present.
</span></p>

<p>However there are also a number of new features in v2 Reports, not least of which is the ability to store the report&#8217;s layout in XML. There&#8217;s currently not a lot of documentation about the XML serialization, so let&#8217;s dig in and see what we can discover.</p>

<h3>XML serialization deep dive</h3>

<p>First I ran the demo and ran the <em>Copy Predefined Report</em> on the Contacts Report.</p>

<p>Then I ran the report designer and added a dummy <code>OnBeforePrint()</code> script to one of the table&#8217;s cells.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">xrTableCell8_BeforePrint</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">Drawing</span><span class="p">.</span><span class="n">Printing</span><span class="p">.</span><span class="n">PrintEventArgs</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">var</span> <span class="n">x</span> <span class="p">=</span> <span class="m">23</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then, in the MainDemo&#8217;s Updater.cs file, I placed the following code.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="kt">var</span> <span class="n">reportData</span> <span class="p">=</span> <span class="n">ObjectSpace</span><span class="p">.</span><span class="n">FindObject</span><span class="p">&lt;</span><span class="n">ReportDataV2</span><span class="p">&gt;(</span><span class="k">new</span> <span class="n">BinaryOperator</span><span class="p">(</span><span class="s">&quot;DisplayName&quot;</span><span class="p">,</span> <span class="s">&quot;Contacts Report&quot;</span><span class="p">)</span> <span class="p">&amp;</span> <span class="k">new</span> <span class="n">BinaryOperator</span><span class="p">(</span><span class="s">&quot;IsPredefined&quot;</span><span class="p">,</span> <span class="k">new</span> <span class="n">OperandValue</span><span class="p">(</span><span class="k">false</span><span class="p">)));</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">reportData</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">report</span> <span class="p">=</span> <span class="n">ReportDataProvider</span><span class="p">.</span><span class="n">ReportsStorage</span><span class="p">.</span><span class="n">LoadReport</span><span class="p">(</span><span class="n">reportData</span><span class="p">);</span>
</span><span class='line'>    <span class="n">report</span><span class="p">.</span><span class="n">SaveLayoutToXml</span><span class="p">(</span><span class="s">@&quot;C:\Temp\ContactsReport.xml&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">report</span><span class="p">.</span><span class="n">SaveLayout</span><span class="p">(</span><span class="s">@&quot;C:\Temp\ContactsReport.repx&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This creates two output files. One of them contains the familiar <em>.repx</em> format. The other contains the newer <em>.xml</em> serialization.</p>

<p>The contents of the XML file is displayed below and is 77 lines long.</p>

<div><script src='https://gist.github.com/f085bf10dd65ace5d229.js?file=ContactReport.xml'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>By comparison, the <a href="https://gist.github.com/shamp00/f085bf10dd65ace5d229#file-contactsreport-repx">ContactReport.repx</a> is 408 lines long and much harder to read.</p>

<p>As you can see the XML file is <em>much</em> smaller and simpler than the <em>.repx</em> file. At first I didn&#8217;t believe it contained all the necessary information, so I started up the MainDemo WinForms application, created a blank new report and imported the layout and the layout looks correct and the preview loads with data as expected.</p>

<h3>Scripts</h3>

<p>What about scripts? Are they serialized in the xml version? You bet. In the XML export you can see this has been serialised near the top of the file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>ScriptsSource=
</span><span class='line'>   &quot;<span class="ni">&amp;#xD;&amp;#xA;</span>private void xrTableCell8_BeforePrint(object sender, System.Drawing.Printing.PrintEventArgs e)
</span><span class='line'>   {<span class="ni">&amp;#xD;&amp;#xA;</span>  var x = 23;<span class="ni">&amp;#xD;&amp;#xA;</span>}<span class="ni">&amp;#xD;&amp;#xA;</span>&quot;
</span></code></pre></td></tr></table></div></figure>


<h3>Setup</h3>

<p>In order to use this new XML serialization of report layouts, you must set the ReportsV2 module to use it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">reportsModuleV2</span><span class="p">.</span><span class="n">ReportStoreMode</span> <span class="p">=</span> <span class="n">ReportStoreModes</span><span class="p">.</span><span class="n">XML</span>
</span></code></pre></td></tr></table></div></figure>


<p>This will most likely invalidate any reports which have already been serialized to the database. There are some notes on how to fix this <a href="https://www.devexpress.com/Support/Center/Question/Details/T275363">here</a>.</p>

<h3>Default for new projects</h3>

<p>What about new projects? I created a new solution and chose <em>DevExpress 15.2 XAF Solution Wizard</em> as the type of solution and added the reports module. Now when I navigate to the <code>WinApplication.Designer.cs</code> file, I find:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// reportsModuleV2</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="k">this</span><span class="p">.</span><span class="n">reportsModuleV2</span><span class="p">.</span><span class="n">ReportDataType</span> <span class="p">=</span> <span class="k">typeof</span><span class="p">(</span><span class="n">DevExpress</span><span class="p">.</span><span class="n">Persistent</span><span class="p">.</span><span class="n">BaseImpl</span><span class="p">.</span><span class="n">ReportDataV2</span><span class="p">);</span>
</span><span class='line'><span class="k">this</span><span class="p">.</span><span class="n">reportsModuleV2</span><span class="p">.</span><span class="n">ReportStoreMode</span> <span class="p">=</span> <span class="n">DevExpress</span><span class="p">.</span><span class="n">ExpressApp</span><span class="p">.</span><span class="n">ReportsV2</span><span class="p">.</span><span class="n">ReportStoreModes</span><span class="p">.</span><span class="n">XML</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>So the default storage method for new projects is now XML.</p>

<h3>Conclusion</h3>

<p>The XML serialisation looks like a considerable upgrade to the mechanism for storing, loading and saving reports. Now I just need to find a good way of converting my existing v1 reports&#8230; Perhaps a future blog post.</p>

<h2>Coming up</h2>

<p>Tomorrow I&#8217;ll be looking at the new <a href="https://community.devexpress.com/blogs/eaf/archive/2015/11/24/xaf-validation-module-enhancements-for-windows-and-the-web-coming-soon-in-v15-2.aspx">batch editing in grids</a> in more detail.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrating a large web application from XAF 12.1 to 15.1 - Part 3]]></title>
    <link href="http://ZeroSharp.github.com/migrating-a-large-web-application-from-xaf-12-dot-1-to-15-dot-1-part-3/"/>
    <updated>2015-09-16T09:39:00+01:00</updated>
    <id>http://ZeroSharp.github.com/migrating-a-large-web-application-from-xaf-12-dot-1-to-15-dot-1-part-3</id>
    <content type="html"><![CDATA[<p><span class='pullquote-right' data-pullquote='I&#8217;m happy to report there is a considerable improvement under load in version 15.1.'>
This is the third part of a <a href="http://ZeroSharp.github.com/migrating-a-large-web-application-from-xaf-12-dot-1-to-15-dot-1-part-2">series</a> about migrating a large application from XAF 12.1 to XAF 15.1. In this part I will compare the results of a simple stress test between the versions.</p>

<p>I have described in previous posts how to <a href="http://ZeroSharp.github.com/load-testing-xaf-overview/">stress test XAF applications</a>. One of our most basic tests is to simulate 25 users cycling through all the navigation tabs for an hour. I&#8217;m happy to report there is a considerable improvement under load in version 15.1.</p>

<p>(Note that we purposefully stress test against a single web application so that we can compare apples with apples. In production we have multiple instances load-balanced.)</p>

<p>Here is an interactive summary of the 15.1 results:
</span></p>

<p>Here is version 15.1. There were zero errors and 382 completed scripts.</p>

<p>By comparison, the same test against DevExpress 12.1 yielded only 258 completions. So 15.1 shows a 48% performance improvement over 12.1.</p>

<iframe class="cmd" src="https://load.wpm.neustar.biz/load/test/share/e4c5e109f8f04ceebd72cdb5c93eb1c2" width="1024" height="512">

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrating a large web application from XAF 12.1 to 15.1 - Part 2]]></title>
    <link href="http://ZeroSharp.github.com/migrating-a-large-web-application-from-xaf-12-dot-1-to-15-dot-1-part-2/"/>
    <updated>2015-09-15T10:37:00+01:00</updated>
    <id>http://ZeroSharp.github.com/migrating-a-large-web-application-from-xaf-12-dot-1-to-15-dot-1-part-2</id>
    <content type="html"><![CDATA[<p>This is the second part of a <a href="http://ZeroSharp.github.com/migrating-a-large-web-application-from-xaf-12-dot-1-to-15-dot-1-part-1">series</a> about migrating a large application from XAF 12.1 to XAF 15.1.</p>

<p>In the 13.1 release, DevExpress made a change to the way XAF <code>Validator</code> class is used. It now requires an <code>IObjectSpace</code> parameter corresponding to the object. It is needed to correctly evaluate any rules which are descendants of the <code>RuleSearchObjectProperties</code>. These include:</p>

<ul>
<li><code>RuleCombinationOfPropertiesIsUnique</code></li>
<li><code>RuleIsReferenced</code></li>
<li><code>RuleObjectExists</code></li>
<li><code>RuleUniqueValue</code></li>
</ul>


<p>A lot of our code has been around for years now and the older parts rely heavily on <code>Session</code> and <code>UnitOfWork</code> instead of <code>IObjectSpace</code> For the most part our application used <code>IObjectSpace</code> only within <code>ViewControllers</code>.</p>

<p>But there were several situations where we need the validator where we don&#8217;t have an <code>IObjectSpace</code>. For instance we sometimes need to validate from within <a href="https://documentation.devexpress.com/#eXpressAppFramework/clsDevExpressPersistentBaseActionAttributetopic">method actions</a> (decorated with the <code>ActionAttribute</code>). For performance reasons, we pass criteria to our middleware and it uses a <code>UnitOfWork</code> to run the method on each object. So in this case, there was no <code>IObjectSpace</code> to pass to the XAF <code>Validator</code>.</p>

<p><span class='pullquote-right' data-pullquote='When writing code I often find myself having to decide between the &#8216;quick&#8217; fix and the &#8216;right&#8217; fix.'>
Here I had a refactoring dilemma to solve. Either I need to rewrite all of the affected rules so that they no longer make use of the <code>IObjectSpace</code>. For instance, I could use <code>RuleFromBoolProperty</code> instead. In our application, this would mean rewriting about 50 rules. Or alternatively, I could go through the entire code base looking for <code>new UnitOfWork()</code> and <code>new Session()</code> and try to use an <code>IObjectSpace</code> instead. When writing code I often find myself having to decide between the &#8216;quick&#8217; fix and the &#8216;right&#8217; fix. Here, moving to <code>IObjectSpace</code> throughout is clearly the right fix and although it would take more time to implement, the system will be more in-line with best XAF practices throughout.
</span></p>

<p> Eventually, the refactoring was complete and all unit tests are passing. I was eager to run a multi-user load stress test against the 15.1 version to compare performance under load. I have described in previous posts how to <a href="http://ZeroSharp.github.com/load-testing-xaf-overview/">stress test XAF applications</a>. I&#8217;ll be sharing the results in the next post.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrating a large web application from XAF 12.1 to 15.1 - Part 1]]></title>
    <link href="http://ZeroSharp.github.com/migrating-a-large-web-application-from-xaf-12-dot-1-to-15-dot-1-part-1/"/>
    <updated>2015-09-14T10:01:00+01:00</updated>
    <id>http://ZeroSharp.github.com/migrating-a-large-web-application-from-xaf-12-dot-1-to-15-dot-1-part-1</id>
    <content type="html"><![CDATA[<p>I am the principal software architect for a treasury application in use by over 100 large multinational corporates. Upgrades are generally met with reluctance in the enterprise world and so we&#8217;ve been somewhat stuck on an old version of the expressAppFramework.</p>

<p>Recently I&#8217;ve been pushing to move to the newer version and I have spent about three weeks migrating the substantial code base to XAF 15.1 and .NET 4.6.</p>

<p>The steps are:</p>

<ul>
<li>Run the project converter tool.</li>
<li>Try to compile. Identify the errors which are easily fixable (check with the &#8216;breaking changes&#8217; documents from DevExpress.)</li>
<li>When in doubt, compare the libraries with a decompiler like .NET Reflector.</li>
<li>Refactor where necessary (ensure you have unit tests for the behaviour you are changing).</li>
</ul>


<p>On this last point, my whole approach to refactoring has been shaped by Michael C. Feather&#8217;s book <a href="http://amzn.com/0131177052"><em>Working Effectively with Legacy Code</em></a>. Highly recommended for anyone maintaining complex applications regardless of whether the code is legacy or not&#8230;</p>

<p>I was pleasantly surprised that I was very quickly able to get everything to compile and even run. The layout was not correct, but a lot of things worked straight away.</p>

<p>I then had to spend some time restoring the customisations we&#8217;d made to the default ASP.NET layout. In XAF 12.1 these were applied directly to <em>default.aspx.cs</em> and <em>dialog.aspx.cs</em>, but in 15.1 these no longer exist. Instead, you can customise layout by providing your own alternate templates. I was expecting this to be much harder, but by <a href="https://documentation.devexpress.com/#eXpressAppFramework/CustomDocument112696">following the instructions in the documentation</a> I managed to restore our layout quite easily.</p>

<p>I still had a lot of failing unit tests. One seemingly minor change to XAF validation proved to be a lot of work to fix in our code.
Since 13.1, the XAF <code>Validator</code> class now requires an <code>IObjectSpace</code> parameter in the constructor. This was by far the biggest problem to fix and is the subject of the next blog post.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Force a complete garbage collection in an ASP.NET application.]]></title>
    <link href="http://ZeroSharp.github.com/force-a-complete-garbage-collection-in-an-asp-dot-net-application/"/>
    <updated>2015-08-05T09:26:00+01:00</updated>
    <id>http://ZeroSharp.github.com/force-a-complete-garbage-collection-in-an-asp-dot-net-application</id>
    <content type="html"><![CDATA[<p>How can I force a full garbage collection easily within an ASP.NET application? The method here is for XAF web applications but the same approach should work with any ASP.NET app.</p>

<p><span class='pullquote-right' data-pullquote='First up: Never mess with the .NET garbage collector.'>
First up: Never mess with the .NET garbage collector.</p>

<p>I sometimes mess with the garbage collector in .NET when I&#8217;m trying to pin down some memory problem. Also, after <a href="http://ZeroSharp.github.com/load-testing-xaf-part-1-deploying/">a load test</a>, I prefer to force the garbage collector to collect everything it can so that I can check that the memory drops as expected.
</span></p>

<p>Garbage collection in .NET is complex and it is hard to be sure you&#8217;ve done it correctly. <a href="http://ZeroSharp.github.com///%20See%20http://blogs.msdn.com/b/tess/archive/2006/02/02/net-memory-my-object-is-not-rooted-why-wasn-t-it-garbage-collected.aspx">This ancient article by Tess Ferrandez</a> pointed me in the following direction.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">void</span> <span class="nf">ForceGarbageCollection</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">/// This will garbage collect all generations (including large object), </span>
</span><span class='line'>    <span class="n">GC</span><span class="p">.</span><span class="n">Collect</span><span class="p">(</span><span class="m">3</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">/// then execute any finalizers</span>
</span><span class='line'>    <span class="n">GC</span><span class="p">.</span><span class="n">WaitForPendingFinalizers</span><span class="p">();</span>
</span><span class='line'>    <span class="c1">/// and then garbage collect again to take care of all the objects that had finalizers.            </span>
</span><span class='line'>    <span class="n">GC</span><span class="p">.</span><span class="n">Collect</span><span class="p">(</span><span class="m">3</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>How can we easily trigger this routine in an XAF web application? First, add the following to the <em>Global.asax.cs</em> file:</p>

<figure class='code'><figcaption><span>Global.asax.cs</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">protected</span> <span class="k">void</span> <span class="nf">Application_BeginRequest</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">shouldForceGarbageCollection</span> <span class="p">=</span> <span class="n">Request</span><span class="p">.</span><span class="n">QueryString</span><span class="p">[</span><span class="s">&quot;ForceGC&quot;</span><span class="p">]</span> <span class="p">!=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">shouldForceGarbageCollection</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">ForceGarbageCollection</span><span class="p">();</span>
</span><span class='line'>        <span class="n">Response</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;&lt;H1&gt;Forced garbage collection OK!&lt;/H1&gt;&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then whenever you want to trigger a garbage collection, visit the following URL:</p>

<pre><code>http://.../Login.aspx?ForceGC=1
</code></pre>

<p>You should see the text <strong>&#8216;Forced garbage collection OK&#8217;</strong> in the top left of the browser window.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing slow debugging of ASP.NET applications]]></title>
    <link href="http://ZeroSharp.github.com/fixing-slow-debugging-of-asp-dot-net-applications/"/>
    <updated>2015-06-03T21:31:00+01:00</updated>
    <id>http://ZeroSharp.github.com/fixing-slow-debugging-of-asp-dot-net-applications</id>
    <content type="html"><![CDATA[<p>For a while I&#8217;ve noticed an annoying slowness when debugging ASP.NET applications from Visual Studio. Just after every page load it takes about a second before the buttons become clickable. I noticed mostly when debugging XAF applications, perhaps because the pages are quite complex.</p>

<p>Turns out the culprit is something called <a href="http://www.asp.net/visual-studio/overview/2013/using-browser-link">Browser Link</a> which was introduced in Visual Studio 2013. It&#8217;s enabled by default.</p>

<p>To turn it off you can turn it off from the menu:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/browserlink-001.png"></p>

<p>Or you can add the following to your web.config file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;appSettings&gt;</span>
</span><span class='line'>  <span class="nt">&lt;add</span> <span class="na">key=</span><span class="s">&quot;vs:EnableBrowserLink&quot;</span> <span class="na">value=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/appSettings&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DevExpress 14.2 review]]></title>
    <link href="http://ZeroSharp.github.com/devexpress-14-dot-2-review/"/>
    <updated>2015-01-20T08:35:00+00:00</updated>
    <id>http://ZeroSharp.github.com/devexpress-14-dot-2-review</id>
    <content type="html"><![CDATA[<p><span class='pullquote-right' data-pullquote='The truly outstanding new feature is the ASP.NET report writer'>
This post is an overview of the brand new version XAF 14.2. The truly outstanding new feature is the ASP.NET report writer which is now available in all XAF applications.</p>

<p>A few months ago, we lost a potential sale because the customer wanted the ability to create custom reports from within the browser. We told them it was impossible to provide a fully-fledged report designer within our web application - but the DevExpress guys have done it! And how! </span></p>

<h2>The web-based report designer</h2>

<p>Let&#8217;s fire up the MainDemo application and navigate to the reports view. The first thing to notice is that there is a new action <em>Show Report Designer</em>.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-14-2-review-001.png"></p>

<p>The designer action is disabled because the selected report is <em>predefined</em>. Predefined reports are a feature of Reports v2 which were introduced in version 13.2 (<a href="http://ZeroSharp.github.com/devexpress-13-dot-2-review-part-1">see my previous review</a>). So first, we clone the existing predefined report. I renamed the copy (via the edit button) so that we can tell them apart.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-14-2-review-002.png"></p>

<p>Now the <em>Show Report Designer</em> action is enabled. Let&#8217;s click it. <em>Whoa! That&#8217;s one impressive user interface for a web application!</em></p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-14-2-review-003.png"></p>

<p>Let&#8217;s add a chart and a few controls. I thought (incorrectly) that the link to the domain model might be somewhat lacking because the report designer is not designed specifically for XAF (you can also use it with non-XAF ASP.NET or ASP.NET MVC applications) but navigating the available domain objects to select a property seemed very natural and simple.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-14-2-review-005.png"></p>

<p>I had a few little mouse issues while trying to resize or move controls, and there were a couple of places where the interface seemed slightly sluggish, but these were very minor issues. In general the designer is slick and easy to use. I also had a little difficulty finding the <em>Save</em> button, but here it is:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-14-2-review-007.png"></p>

<p>And here&#8217;s the live output after my modifications.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-14-2-review-006.png"></p>

<p>You can also start from scratch with a new blank report.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-14-2-review-004.png"></p>

<p>This report designer is an <strong>extremely impressive achievement</strong>. I played around with it for over an hour and it did not crash once. I managed to implement everything I tried including a chart, a bar code and a new data field.</p>

<p>There are some features missing from the web-based report designer compared to the Windows Forms version. Most significant is the ability to attach events and scripts to controls. Here is a <a href="https://documentation.devexpress.com/#XtraReports/CustomDocument14651">full feature comparison table</a>.</p>

<p>I had a quick look for the tools they used to implement it. It looks like it uses <a href="https://jquery.com">jQuery</a>, <a href="https://jqueryui.com">jQuery.UI</a> and <a href="https://knockoutjs.com">knockout.js</a> and you can automatically bundle the required libraries via a new setting in the web.config. There is <a href="https://documentation.devexpress.com/#XtraReports/CustomDocument17558">some more information here</a>.</p>

<p>On the whole I am utterly impressed. Hats off to the DevExpress team!</p>

<h2>Other new features in XAF 14.2</h2>

<p>The new 14.2 includes several other new features. These include the ability to store user settings in the data store as well as improvements to the speed of the grids. For a full list of the new features and improvements see <a href="https://community.devexpress.com/blogs/eaf/archive/2014/11/18/xaf-brand-new-module-amp-features-for-both-windows-and-the-web-coming-soon-in-v14-2.aspx">here</a> and <a href="https://community.devexpress.com/blogs/eaf/archive/2014/11/20/xaf-enhancements-to-existing-features-amp-performance-tuning-coming-soon-in-v14-2.aspx">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ELMAH with DevExpress XAF]]></title>
    <link href="http://ZeroSharp.github.com/elmah-with-devexpress-xaf/"/>
    <updated>2014-10-08T15:45:00+01:00</updated>
    <id>http://ZeroSharp.github.com/elmah-with-devexpress-xaf</id>
    <content type="html"><![CDATA[<p><a href="https://code.google.com/p/elmah/">ELMAH (Error Logging Modules and Handlers)</a> is an open source library for logging unhandled exceptions. This post explains how to get it running with the <a href="https://www.devexpress.com/Products/NET/Application_Framework/">DevExpress XAF</a> main demo.</p>

<p>A couple of amazing facts about ELMAH.</p>

<ul>
<li>It has been around since 2004!</li>
<li>It was written by <a href="http://www.raboof.com/">Atif Aziz</a> who happens to be an old school-friend from the International School of Geneva.</li>
</ul>


<p>XAF provides <a href="https://documentation.devexpress.com/#xaf/CustomDocument2704">quite extensive error handling options</a> out of the box, but I have found Elmah better suited to production environments because of the ability to remotely view the full error log.</p>

<h2>Setting up</h2>

<p>First, get the ELMAH package via NuGet into the MainDemo.Web project. ELMAH provides dozens of different methods of persisting the error log. For this example we&#8217;ll choose one of the simplest. Make sure you select the <em>ELMAH on XML Log</em> package.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/xaf-with-elmah-001.png"></p>

<p>NuGet makes several automatic modifications to the <em>web.config</em>. Unfortunately, these are not quite accurate enough for XAF. The changes you need to make are detailed below:</p>

<p>Add a <code>&lt;configSection&gt;</code> for ELMAH as alongside the existing devExpress one.</p>

<figure class='code'><figcaption><span>web.config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;configSections&gt;</span>
</span><span class='line'>    <span class="nt">&lt;sectionGroup</span> <span class="na">name=</span><span class="s">&quot;devExpress&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/sectionGroup&gt;</span> <span class="c">&lt;!-- this should already exist--&gt;</span>
</span><span class='line'>    <span class="nt">&lt;sectionGroup</span> <span class="na">name=</span><span class="s">&quot;elmah&quot;</span><span class="nt">&gt;</span> <span class="c">&lt;!-- this is new--&gt;</span>
</span><span class='line'>      <span class="nt">&lt;section</span> <span class="na">name=</span><span class="s">&quot;security&quot;</span> <span class="na">requirePermission=</span><span class="s">&quot;false&quot;</span> <span class="na">type=</span><span class="s">&quot;Elmah.SecuritySectionHandler, Elmah&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;section</span> <span class="na">name=</span><span class="s">&quot;errorLog&quot;</span> <span class="na">requirePermission=</span><span class="s">&quot;false&quot;</span> <span class="na">type=</span><span class="s">&quot;Elmah.ErrorLogSectionHandler, Elmah&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;section</span> <span class="na">name=</span><span class="s">&quot;errorMail&quot;</span> <span class="na">requirePermission=</span><span class="s">&quot;false&quot;</span> <span class="na">type=</span><span class="s">&quot;Elmah.ErrorMailSectionHandler, Elmah&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;section</span> <span class="na">name=</span><span class="s">&quot;errorFilter&quot;</span> <span class="na">requirePermission=</span><span class="s">&quot;false&quot;</span> <span class="na">type=</span><span class="s">&quot;Elmah.ErrorFilterSectionHandler, Elmah&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>     <span class="nt">&lt;/sectionGroup&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/configSections&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Your <code>&lt;system.webServer&gt;</code> section should look like this:</p>

<figure class='code'><figcaption><span>web.config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;system.webServer&gt;</span>
</span><span class='line'>    <span class="nt">&lt;handlers&gt;</span>...<span class="nt">&lt;/handlers&gt;</span> <span class="c">&lt;!-- This is unchanged --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;validation</span> <span class="na">validateIntegratedModeConfiguration=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;modules&gt;</span>
</span><span class='line'>      <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">&quot;ASPxHttpHandlerModule&quot;</span> <span class="na">type=</span><span class="s">&quot;DevExpress.Web.ASPxClasses.ASPxHttpHandlerModule, DevExpress.Web.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">&quot;ErrorLog&quot;</span> <span class="na">type=</span><span class="s">&quot;Elmah.ErrorLogModule, Elmah&quot;</span> <span class="na">preCondition=</span><span class="s">&quot;managedHandler&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">&quot;ErrorMail&quot;</span> <span class="na">type=</span><span class="s">&quot;Elmah.ErrorMailModule, Elmah&quot;</span> <span class="na">preCondition=</span><span class="s">&quot;managedHandler&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">&quot;ErrorFilter&quot;</span> <span class="na">type=</span><span class="s">&quot;Elmah.ErrorFilterModule, Elmah&quot;</span> <span class="na">preCondition=</span><span class="s">&quot;managedHandler&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/modules&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/system.webServer&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add a <code>&lt;location&gt;</code> for the path <em>elmah.axd</em> (alongside the existing <code>&lt;location&gt;</code> tags).</p>

<figure class='code'><figcaption><span>web.config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;location</span> <span class="na">path=</span><span class="s">&quot;elmah.axd&quot;</span> <span class="na">inheritInChildApplications=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;system.web&gt;</span>
</span><span class='line'>      <span class="nt">&lt;httpHandlers&gt;</span>
</span><span class='line'>        <span class="nt">&lt;add</span> <span class="na">verb=</span><span class="s">&quot;POST,GET,HEAD&quot;</span> <span class="na">path=</span><span class="s">&quot;elmah.axd&quot;</span> <span class="na">type=</span><span class="s">&quot;Elmah.ErrorLogPageFactory, Elmah&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/httpHandlers&gt;</span>
</span><span class='line'>      <span class="c">&lt;!-- </span>
</span><span class='line'><span class="c">        See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for </span>
</span><span class='line'><span class="c">        more information on using ASP.NET authorization securing ELMAH.</span>
</span><span class='line'>
</span><span class='line'><span class="c">      &lt;authorization&gt;</span>
</span><span class='line'><span class="c">        &lt;allow roles=&quot;admin&quot; /&gt;</span>
</span><span class='line'><span class="c">        &lt;deny users=&quot;*&quot; /&gt;  </span>
</span><span class='line'><span class="c">      &lt;/authorization&gt;</span>
</span><span class='line'><span class="c">      --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/system.web&gt;</span>
</span><span class='line'>    <span class="nt">&lt;system.webServer&gt;</span>
</span><span class='line'>      <span class="nt">&lt;handlers&gt;</span>
</span><span class='line'>        <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">&quot;ELMAH&quot;</span> <span class="na">verb=</span><span class="s">&quot;POST,GET,HEAD&quot;</span> <span class="na">path=</span><span class="s">&quot;elmah.axd&quot;</span> <span class="na">type=</span><span class="s">&quot;Elmah.ErrorLogPageFactory, Elmah&quot;</span> <span class="na">preCondition=</span><span class="s">&quot;integratedMode&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/handlers&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/system.webServer&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/location&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add a new <code>&lt;elmah&gt;</code> section. I put mine just before the final <code>&lt;/configuration&gt;</code> tag.</p>

<figure class='code'><figcaption><span>web.config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;elmah&gt;</span>
</span><span class='line'>    <span class="nt">&lt;errorLog</span> <span class="na">type=</span><span class="s">&quot;Elmah.XmlFileErrorLog, Elmah&quot;</span> <span class="na">logPath=</span><span class="s">&quot;~/App_Data/Elmah.Errors&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="c">&lt;!--</span>
</span><span class='line'><span class="c">        See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for </span>
</span><span class='line'><span class="c">        more information on remote access and securing ELMAH.</span>
</span><span class='line'><span class="c">    --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;security</span> <span class="na">allowRemoteAccess=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/elmah&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now modify <em>HttpModules.Web.Config</em> to look like this:</p>

<figure class='code'><figcaption><span>HttpModules.Web.Config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;httpModules&gt;</span>
</span><span class='line'>  <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">&quot;ASPxHttpHandlerModule&quot;</span> <span class="na">type=</span><span class="s">&quot;DevExpress.Web.ASPxClasses.ASPxHttpHandlerModule, DevExpress.Web.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">&quot;ErrorLog&quot;</span> <span class="na">type=</span><span class="s">&quot;Elmah.ErrorLogModule, Elmah&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">&quot;ErrorMail&quot;</span> <span class="na">type=</span><span class="s">&quot;Elmah.ErrorMailModule, Elmah&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">&quot;ErrorFilter&quot;</span> <span class="na">type=</span><span class="s">&quot;Elmah.ErrorFilterModule, Elmah&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/httpModules&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we need to extend XAF&#8217;s standard error handling. Create a new class in the web application.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">ElmahErrorHandling</span> <span class="p">:</span> <span class="n">ErrorHandling</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">LogException</span><span class="p">(</span><span class="n">ErrorInfo</span> <span class="n">errorInfo</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">base</span><span class="p">.</span><span class="n">LogException</span><span class="p">(</span><span class="n">errorInfo</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">errorInfo</span><span class="p">.</span><span class="n">Exception</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>            <span class="n">Elmah</span><span class="p">.</span><span class="n">ErrorSignal</span><span class="p">.</span><span class="n">FromCurrentContext</span><span class="p">().</span><span class="n">Raise</span><span class="p">(</span><span class="n">errorInfo</span><span class="p">.</span><span class="n">Exception</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then modify <em>Global.asax.cs</em> to instantiate the new class</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'>    <span class="k">protected</span> <span class="k">void</span> <span class="nf">Application_Start</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">ErrorHandling</span><span class="p">.</span><span class="n">Instance</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ElmahErrorHandling</span><span class="p">();</span> <span class="c1">// &lt;---this line is new</span>
</span><span class='line'>        <span class="n">ASPxWebControl</span><span class="p">.</span><span class="n">CallbackError</span> <span class="p">+=</span> <span class="k">new</span> <span class="n">EventHandler</span><span class="p">(</span><span class="n">Application_Error</span><span class="p">);</span>
</span><span class='line'><span class="cp">#if DEBUG</span>
</span><span class='line'>        <span class="n">TestScriptsManager</span><span class="p">.</span><span class="n">EasyTestEnabled</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The complete files are available with the <a href="https://github.com/ZeroSharp/Xaf_MainDemo_Elmah">source code</a>.</p>

<p>Now run the application and trigger an unhandled exception. Change the URL to something that does not exist. Or open any detail view and modify the URL so that the Guid in the <em>ShortcutObjectKey</em> is invalid (replace a digit with an &#8216;X&#8217;). Then the application error page appears.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/xaf-with-elmah-002.png"></p>

<p>Then return to the application and change the URL to <code>Elmah.axd</code>. You are looking at the log of all unhandled exceptions.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/xaf-with-elmah-003.png"></p>

<p>And for each exception, you can view the full details of any logged exception including coloured stack trace and full server variables.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/xaf-with-elmah-004.png"></p>

<h2>ELMAH options</h2>

<p>By default, ELMAH is configured to disallow remote access to the error logs -  only a local user can get to <em>elmah.axd</em>. If you take care of the security implications it can be very useful to enable remote access and  monitor the logs on your production servers.</p>

<p>We chose to use an XML file for each error but ELMAH is entirely pluggable. There are dozens of alternatives for persisting the error log including Sql Server, an RSS feeds, to Twitter, even to <a href="http://code.google.com/p/elmah/wiki/ProwlingErrors">an iPhone app</a>. There are even third party sites such as <a href="http://elmah.io">elmah.io</a> who will host your error logs for you.</p>

<p>One of the advantages of using XML files is that the files can be copied to another machine. If you look in <em>MainDemo.Web\App_Data\Elmah.Errors</em>, you will find the resulting xml files.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/xaf-with-elmah-005.png"></p>

<p>You can just copy these files to another installation&#8217;s <em>Elmah.Errors</em> folder and the log will show up when you visit <em>Elmah.axd</em>.</p>

<p>One final note. ELMAH was developed for ASP.NET applications and web services, but it is possible to get it to work with other types of applications such as Windows Forms, Windows Service or console applications. Check out <a href="https://stackoverflow.com/questions/841451/using-elmah-in-a-console-application">this StackOverflow question</a>.</p>

<p>The source code for this example is <a href="https://github.com/ZeroSharp/Xaf_MainDemo_Elmah">on GitHub</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A web UI performance tip for XAF web applications]]></title>
    <link href="http://ZeroSharp.github.com/a-web-ui-performance-tip-for-xaf-web-applications/"/>
    <updated>2014-03-31T10:16:00+01:00</updated>
    <id>http://ZeroSharp.github.com/a-web-ui-performance-tip-for-xaf-web-applications</id>
    <content type="html"><![CDATA[<p>The purpose of this post is to raise your awareness of a toggle which exists in the <a href="http://www.devexpress.com/xaf/">DevExpress XAF framework</a> which can significantly improve UI performance in the web application.</p>

<p><span class='pullquote-right' data-pullquote='In fact the general responsiveness of the entire web-application seems much better.'>
The biggest XAF project I work with has one very complex business object. The layout for this screen includes about 100 properties, several nested tabs, some custom editors, several collection properties and a whole lot of <a href="https://documentation.devexpress.com/#Xaf/CustomDocument3286">Conditional Appearance</a> rules. It was very sluggish to navigate - it was taking several seconds to load the detail view and then it was very slow switching between tabs. Switching to edit mode was also slow.</p>

<p>Last week, I almost accidentally changed the value of <code>DelayedViewItemsInitialization</code> to <code>false</code> and noticed that the UI speed was much much better. In fact the general responsiveness of the entire web-application seems much better.</p>

<p>In order to give it a whirl, navigate to the WebApplication.cs file (normally in the ApplicationCode subfolder of your web project) and modify the constructor as follows:</p>

<p></span></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">public</span> <span class="nf">MainDemoWebApplication</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">InitializeComponent</span><span class="p">();</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="n">DelayedViewItemsInitialization</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Certainly this is not without consequences, and I would urge a careful reading of the <a href="https://documentation.devexpress.com/#xaf/DevExpressExpressAppXafApplication_DelayedViewItemsInitializationtopic">relevant documentation</a>. To be honest, I still don&#8217;t really understand why my detail view is so much slower without this change. I have tried to isolate the cause without much success and I will update this post if I find anything new. But if some of your detail views seem overly slow, certainly try it out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Provisioning a new development machine with BoxStarter]]></title>
    <link href="http://ZeroSharp.github.com/provisioning-a-new-development-machine-with-boxstarter/"/>
    <updated>2014-02-25T15:29:00+00:00</updated>
    <id>http://ZeroSharp.github.com/provisioning-a-new-development-machine-with-boxstarter</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been playing around with <a href="http://boxstarter.org/">Boxstarter</a> to configure my entire development environment with hardly any user intervention.</p>

<p><img class="right" src="http://ZeroSharp.github.com/images/blog/boxstarter-001.png" width="300"></p>

<p>Here are the steps:</p>

<ol>
<li>Install Windows 8.1 on a new machine.</li>
<li>Login.</li>
<li>Open a command prompt and enter the following.</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>START http://boxstarter.org/package/nr/url?http://bit.ly/1kapDXI</span></code></pre></td></tr></table></div></figure>


<p>That&#8217;s it!</p>

<p>Boxstarter will self-install via ClickOnce, asking for various confirmations and ultimately it will prompt you for your login password. (This gets saved and encrypted to allow for unattended reboots and re-logins during the installation). Then the real magic begins. Boxstarter downloads and installs all your tools and configures your environment, rebooting as necessary. An hour later your full development setup is installed, including Visual Studio 2013, any VS extensions, any other programs and tools, all the browsers you need, all critical Windows updates, etc. You just saved yourself a couple of days of work and a lot of hassle.</p>

<p>How does Boxstarter know what to install? There&#8217;s a Powershell script located at that bitly address. Let&#8217;s take a look at the script.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class='powershell'><span class='line'><span class="c"># Boxstarter options</span>
</span><span class='line'><span class="nv">$Boxstarter</span><span class="p">.</span><span class="n">RebootOk</span><span class="p">=</span><span class="nv">$true</span> <span class="c"># Allow reboots?</span>
</span><span class='line'><span class="nv">$Boxstarter</span><span class="p">.</span><span class="n">NoPassword</span><span class="p">=</span><span class="nv">$false</span> <span class="c"># Is this a machine with no login password?</span>
</span><span class='line'><span class="nv">$Boxstarter</span><span class="p">.</span><span class="n">AutoLogin</span><span class="p">=</span><span class="nv">$true</span> <span class="c"># Save my password securely and auto-login after a reboot</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Basic setup</span>
</span><span class='line'><span class="nb">Update-ExecutionPolicy</span> <span class="n">Unrestricted</span>
</span><span class='line'><span class="nb">Set-ExplorerOptions</span> <span class="n">-showHidenFilesFoldersDrives</span> <span class="n">-showProtectedOSFiles</span> <span class="n">-showFileExtensions</span>
</span><span class='line'><span class="nb">Enable-RemoteDesktop</span>
</span><span class='line'><span class="nb">Disable-InternetExplorerESC</span>
</span><span class='line'><span class="nb">Disable-UAC</span>
</span><span class='line'><span class="nb">Set-TaskbarSmall</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">Test-PendingReboot</span><span class="p">)</span> <span class="p">{</span> <span class="nb">Invoke-Reboot</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Update Windows and reboot if necessary</span>
</span><span class='line'><span class="n">Install-WindowsUpdate</span> <span class="n">-AcceptEula</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">Test-PendingReboot</span><span class="p">)</span> <span class="p">{</span> <span class="nb">Invoke-Reboot</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Install Visual Studio 2013 Professional </span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">VisualStudio2013Professional</span> <span class="n">-InstallArguments</span> <span class="n">WebTools</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">Test-PendingReboot</span><span class="p">)</span> <span class="p">{</span> <span class="nb">Invoke-Reboot</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Visual Studio SDK required for PoshTools extension</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">VS2013SDK</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">Test-PendingReboot</span><span class="p">)</span> <span class="p">{</span> <span class="nb">Invoke-Reboot</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">cinstm</span> <span class="n">DotNet3</span><span class="p">.</span><span class="n">5</span> <span class="c"># Not automatically installed with VS 2013. Includes .NET 2.0. Uses Windows Features to install.</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">Test-PendingReboot</span><span class="p">)</span> <span class="p">{</span> <span class="nb">Invoke-Reboot</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># VS extensions</span>
</span><span class='line'><span class="n">Install-ChocolateyVsixPackage</span> <span class="n">PowerShellTools</span> <span class="n">http</span><span class="err">:</span><span class="p">//</span><span class="n">visualstudiogallery</span><span class="p">.</span><span class="n">msdn</span><span class="p">.</span><span class="n">microsoft</span><span class="p">.</span><span class="n">com</span><span class="p">/</span><span class="n">c9eb3ba8</span><span class="p">-</span><span class="n">0c59</span><span class="p">-</span><span class="n">4944</span><span class="p">-</span><span class="n">9a62</span><span class="p">-</span><span class="n">6eee37294597</span><span class="p">/</span><span class="n">file</span><span class="p">/</span><span class="n">112013</span><span class="p">/</span><span class="n">6</span><span class="p">/</span><span class="n">PowerShellTools</span><span class="p">.</span><span class="n">vsix</span>
</span><span class='line'><span class="n">Install-ChocolateyVsixPackage</span> <span class="n">WebEssentials2013</span> <span class="n">http</span><span class="err">:</span><span class="p">//</span><span class="n">visualstudiogallery</span><span class="p">.</span><span class="n">msdn</span><span class="p">.</span><span class="n">microsoft</span><span class="p">.</span><span class="n">com</span><span class="p">/</span><span class="n">56633663</span><span class="p">-</span><span class="n">6799</span><span class="p">-</span><span class="n">41d7</span><span class="p">-</span><span class="n">9df7</span><span class="p">-</span><span class="n">0f2a504ca361</span><span class="p">/</span><span class="n">file</span><span class="p">/</span><span class="n">105627</span><span class="p">/</span><span class="n">31</span><span class="p">/</span><span class="n">WebEssentials2013</span><span class="p">.</span><span class="n">vsix</span>
</span><span class='line'><span class="n">Install-ChocolateyVsixPackage</span> <span class="n">T4Toolbox</span> <span class="n">http</span><span class="err">:</span><span class="p">//</span><span class="n">visualstudiogallery</span><span class="p">.</span><span class="n">msdn</span><span class="p">.</span><span class="n">microsoft</span><span class="p">.</span><span class="n">com</span><span class="p">/</span><span class="n">791817a4-eb9a</span><span class="p">-</span><span class="n">4000</span><span class="p">-</span><span class="n">9c85</span><span class="p">-</span><span class="n">972cc60fd5aa</span><span class="p">/</span><span class="n">file</span><span class="p">/</span><span class="n">116854</span><span class="p">/</span><span class="n">1</span><span class="p">/</span><span class="n">T4Toolbox</span><span class="p">.</span><span class="n">12</span><span class="p">.</span><span class="n">vsix</span>
</span><span class='line'><span class="n">Install-ChocolateyVsixPackage</span> <span class="n">StopOnFirstBuildError</span> <span class="n">http</span><span class="err">:</span><span class="p">//</span><span class="n">visualstudiogallery</span><span class="p">.</span><span class="n">msdn</span><span class="p">.</span><span class="n">microsoft</span><span class="p">.</span><span class="n">com</span><span class="p">/</span><span class="n">91aaa139</span><span class="p">-</span><span class="n">5d3c</span><span class="p">-</span><span class="n">43a7-b39f</span><span class="p">-</span><span class="n">369196a84fa5</span><span class="p">/</span><span class="n">file</span><span class="p">/</span><span class="n">44205</span><span class="p">/</span><span class="n">3</span><span class="p">/</span><span class="n">StopOnFirstBuildError</span><span class="p">.</span><span class="n">vsix</span>
</span><span class='line'>
</span><span class='line'><span class="c"># AWS Toolkit is now an MSI available here http://sdk-for-net.amazonwebservices.com/latest/AWSToolsAndSDKForNet.msi (no chocolatey package as of FEB 2014)</span>
</span><span class='line'><span class="c"># Install-ChocolateyVsixPackage AwsToolkit http://visualstudiogallery.msdn.microsoft.com/175787af-a563-4306-957b-686b4ee9b497</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Other dev tools</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">fiddler4</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">beyondcompare</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">ProcExp</span> <span class="c">#cinstm sysinternals</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">NugetPackageExplorer</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">windbg</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">Devbox-Clink</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">TortoiseHg</span>
</span><span class='line'><span class="c">#cinstm VisualHG # Chocolatey package is corrupt as of Feb 2014 </span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">linqpad4</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">TestDriven</span><span class="p">.</span><span class="n">Net</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">ncrunch2</span><span class="p">.</span><span class="n">vs2013</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Browsers</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">googlechrome</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">firefox</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Other essential tools</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">7zip</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">adobereader</span>
</span><span class='line'><span class="n">cinstm</span> <span class="n">javaruntime</span>
</span><span class='line'>
</span><span class='line'><span class="c">#cinst Microsoft-Hyper-V-All -source windowsFeatures</span>
</span><span class='line'><span class="n">cinst</span> <span class="n">IIS-WebServerRole</span> <span class="n">-source</span> <span class="n">windowsfeatures</span>
</span><span class='line'><span class="n">cinst</span> <span class="n">IIS-HttpCompressionDynamic</span> <span class="n">-source</span> <span class="n">windowsfeatures</span>
</span><span class='line'><span class="n">cinst</span> <span class="n">IIS-ManagementScriptingTools</span> <span class="n">-source</span> <span class="n">windowsfeatures</span>
</span><span class='line'><span class="n">cinst</span> <span class="n">IIS-WindowsAuthentication</span> <span class="n">-source</span> <span class="n">windowsfeatures</span>
</span><span class='line'>
</span><span class='line'><span class="n">Install-ChocolateyPinnedTaskBarItem</span> <span class="s2">&quot;</span><span class="si">$(</span><span class="err">$</span><span class="si">Boxstarter.programFiles86)</span><span class="s2">\Google\Chrome\Application\chrome.exe&quot;</span>
</span><span class='line'><span class="n">Install-ChocolateyPinnedTaskBarItem</span> <span class="s2">&quot;</span><span class="si">$(</span><span class="err">$</span><span class="si">Boxstarter.programFiles86)</span><span class="s2">\Microsoft Visual Studio 12.0\Common7\IDE\devenv.exe&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Boxstarter works with <a href="http://chocolatey.org/">Chocolatey</a> and you can install anything with a Chocolatey package very easily. As you can see, most of the lines begin with <code>cinstm</code> which is a shortcut for <em>install with Chocolatey if missing</em>. You will notice there are also commands for configuring Windows and IIS options. There is plenty of additional information on the <a href="http://boxstarter.org/WhyBoxstarter">Boxstarter</a> documentation.</p>

<h2>What about DevExpress?</h2>

<p>Want to install your registered CodeRush and DexExpress components? Easy. Since the installation packages are not available on chocolatey, you will have to put them on a network share accessible from the newly provisioned machine.</p>

<p>Then add the following to your boxstarter script:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='powershell'><span class='line'><span class="c"># Set the following to the network location of the DevExpress installers</span>
</span><span class='line'><span class="nv">$pathToDevExpressComponentsSetup</span> <span class="p">=</span> <span class="s2">&quot;\\somewhere\DevExpressComponents-13.2.7.exe&quot;</span>
</span><span class='line'><span class="nv">$pathToDevExpressComponentsSetup</span> <span class="p">=</span> <span class="s2">&quot;\\somewhere\DevExpressCodeRush-13.2.7.exe&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Command line options for unattended installation</span>
</span><span class='line'><span class="c"># (/EULA is not required for versions earlier than 10.2.10)</span>
</span><span class='line'><span class="nv">$silentArgs</span> <span class="p">=</span> <span class="s2">&quot;/Q /EMAIL:myaddress@company.com /CUSTOMERID:A1111 /PASSWORD:MYPASSWORD /DEBUG /EULA:accept&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Install .NET Components</span>
</span><span class='line'><span class="n">Install-ChocolateyInstallPackage</span> <span class="s2">&quot;DevExpressComponents_13.2&quot;</span> <span class="s2">&quot;EXE&quot;</span> <span class="nv">$silentArgs</span> <span class="nv">$pathToDevExpressComponentsSetup</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Install CodeRush</span>
</span><span class='line'><span class="n">Install-ChocolateyInstallPackage</span> <span class="s2">&quot;DevExpressCodeRush_13.2&quot;</span> <span class="s2">&quot;EXE&quot;</span> <span class="nv">$silentArgs</span> <span class="nv">$pathToDevExpressCodeRushSetup</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Warning! don&#8217;t put your DevExpress passwords on a public website.</strong></p>

<p>There are plenty of other ways of <em>launching</em> Boxstarter. You can <a href="https://chocolatey.org/packages/boxstarter">install Boxstarter via Chocolatey</a>. You can <a href="http://boxstarter.org/InstallingPackages">run Boxstarter remotely</a>. If you are putting passwords in the installation script, you should choose one of the other options.</p>

<h2>Advantages</h2>

<ul>
<li>I save time!</li>
<li>I can now version control the exact development environment along with the source code!</li>
<li>Onboarding new and junior developers is much quicker.</li>
<li>In a pinch, I can use this method to quickly provision a development machine with Azure or Amazon Web Services</li>
</ul>


<h2>One Last Hiccup</h2>

<p>While I was testing my BoxStarter script I used the Windows 8.1 image from <a href="http://www.modern.ie/">http://www.modern.ie/</a>. Much later in the process I realised that Modern.IE only supplies 32-bit images and the chocolatey installer for Visual Studio extensions currently works only with 64-bit Windows.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Glimpse with DevExpress XAF]]></title>
    <link href="http://ZeroSharp.github.com/glimpse-with-devexpress-xaf/"/>
    <updated>2013-12-17T12:41:00+00:00</updated>
    <id>http://ZeroSharp.github.com/glimpse-with-devexpress-xaf</id>
    <content type="html"><![CDATA[<p>I have finally got around to getting Glimpse working with XAF. Glimpse is an amazing extensible ASP.NET plug-in which gives you valuable information about what is going on within your server in production. It&#8217;s also very pretty.</p>

<p>Let&#8217;s jump right in and have a look at what XAF looks like with Glimpse running.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-016.png"></p>

<p>That banner along the bottom of the screen is the Glimpse heads up display (HUD). Hovering over various sections of it pops up more information:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-019.png"></p>

<p><img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-018.png"></p>

<p><img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-017.png"></p>

<p>If you click on the Glimpse icon in the bottom right, you get even more goodies. Here&#8217;s the <em>Timeline</em> view.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-011.png"></p>

<p>And there are many other tabs available. The <em>Configuration</em> tab shows the contents of the <em>web.config</em> file.
<img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-009.png">
Here&#8217;s the <em>Control Tree</em> tab:
<img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-010.png">
The <em>Page Life Cycle</em> tab:
<img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-005.png">
The <em>Request</em> tab:
<img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-004.png">
The <em>Session</em> tab:
<img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-003.png">
And the <em>Trace</em> tab including the DevExpress log items that were added to the trace during this page load:
<img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-002.png">
As you can see, this is a very valuable glimpse into the server which can be turned on as needed in production.</p>

<h2>Adding Glimpse to an XAF application</h2>

<p>First install the Glimpse Nuget package into the project.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-001.png"></p>

<p>The Nuget installation will make various incorrect changes to the web.config. The corrected sections are below:</p>

<p>First, add Glimpse to the <code>&lt;configSections&gt;</code>.</p>

<figure class='code'><figcaption><span>web.config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'>  &lt;configSections&gt;
</span><span class='line'>    &lt;sectionGroup name=&quot;devExpress&quot;&gt;
</span><span class='line'>      &lt;section name=&quot;compression&quot; requirePermission=&quot;false&quot; type=&quot;DevExpress.Web.ASPxClasses.CompressionConfigurationSection, DevExpress.Web.v13.2, Version=13.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; /&gt;
</span><span class='line'>      &lt;section name=&quot;themes&quot; type=&quot;DevExpress.Web.ASPxClasses.ThemesConfigurationSection, DevExpress.Web.v13.2, Version=13.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; /&gt;
</span><span class='line'>      &lt;section name=&quot;settings&quot; type=&quot;DevExpress.Web.ASPxClasses.SettingsConfigurationSection, DevExpress.Web.v13.2, Version=13.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; /&gt;
</span><span class='line'>    &lt;/sectionGroup&gt;
</span><span class='line'><span class="gi">+   &lt;section name=&quot;glimpse&quot; type=&quot;Glimpse.Core.Configuration.Section, Glimpse.Core&quot; /&gt;</span>
</span><span class='line'>  &lt;/configSections&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Next, <code>&lt;system.webserver&gt;</code> should look like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'>  &lt;system.webServer&gt;
</span><span class='line'>    &lt;handlers&gt;
</span><span class='line'>      &lt;add name=&quot;TestControls.axd_*&quot; path=&quot;TestControls.axd&quot; verb=&quot;*&quot; type=&quot;DevExpress.ExpressApp.Web.TestScripts.TestScriptsManager, DevExpress.ExpressApp.Web.v13.2, Version=13.2.5.0, culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; preCondition=&quot;integratedMode&quot; /&gt;
</span><span class='line'>      &lt;add name=&quot;ImageResource.axd_*&quot; path=&quot;ImageResource.axd&quot; verb=&quot;*&quot; type=&quot;DevExpress.ExpressApp.Web.ImageResourceHttpHandler, DevExpress.ExpressApp.Web.v13.2, Version=13.2.5.0, culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; preCondition=&quot;integratedMode&quot; /&gt;
</span><span class='line'>      &lt;add name=&quot;SessionKeepAliveReconnectHttpHandler&quot; verb=&quot;*&quot; path=&quot;SessionKeepAliveReconnect.aspx*&quot; type=&quot;DevExpress.ExpressApp.Web.SessionKeepAliveReconnectHttpHandler, DevExpress.ExpressApp.Web.v13.2, Version=13.2.5.0, culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; preCondition=&quot;integratedMode&quot; /&gt;
</span><span class='line'>      &lt;add name=&quot;WebWindowTemplateHttpHandler&quot; verb=&quot;*&quot; path=&quot;*.aspx&quot; type=&quot;DevExpress.ExpressApp.Web.WebWindowTemplateHttpHandler, DevExpress.ExpressApp.Web.v13.2, Version=13.2.5.0, culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; preCondition=&quot;integratedMode&quot; /&gt;
</span><span class='line'>      &lt;add name=&quot;ASPxUploadProgressHandler&quot; verb=&quot;GET,POST&quot; path=&quot;ASPxUploadProgressHandlerPage.ashx&quot; type=&quot;DevExpress.Web.ASPxUploadControl.ASPxUploadProgressHttpHandler, DevExpress.Web.v13.2, Version=13.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; preCondition=&quot;integratedMode&quot; /&gt;
</span><span class='line'>      &lt;add name=&quot;ReportExportResource.axd_*&quot; preCondition=&quot;integratedMode&quot; verb=&quot;*&quot; path=&quot;ReportExportResource.axd&quot; type=&quot;DevExpress.ExpressApp.Reports.Web.ReportExportHttpHandler, DevExpress.ExpressApp.Reports.Web.v13.2, Version=13.2.5.0, culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; /&gt;
</span><span class='line'> +    &lt;add name=&quot;Glimpse&quot; path=&quot;glimpse.axd&quot; verb=&quot;GET&quot; type=&quot;Glimpse.AspNet.HttpHandler, Glimpse.AspNet&quot; preCondition=&quot;integratedMode&quot; /&gt;
</span><span class='line'>    &lt;/handlers&gt;
</span><span class='line'>    &lt;validation validateIntegratedModeConfiguration=&quot;false&quot; /&gt;
</span><span class='line'>    &lt;modules&gt;
</span><span class='line'>      &lt;add name=&quot;ASPxHttpHandlerModule&quot; type=&quot;DevExpress.Web.ASPxClasses.ASPxHttpHandlerModule, DevExpress.Web.v13.2, Version=13.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; /&gt;
</span><span class='line'> +    &lt;add name=&quot;Glimpse&quot; type=&quot;Glimpse.AspNet.HttpModule, Glimpse.AspNet&quot; preCondition=&quot;integratedMode&quot; /&gt;
</span><span class='line'>    &lt;/modules&gt;
</span><span class='line'>  &lt;/system.webServer&gt;
</span></code></pre></td></tr></table></div></figure>


<p>NuGet added some incorrect definitions to <code>system.web</code>. Make sure to restore this section to the DevExpress default:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;system.web&gt;</span>
</span><span class='line'>    <span class="nt">&lt;httpRuntime</span> <span class="na">requestValidationMode=</span><span class="s">&quot;2.0&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;sessionState</span> <span class="na">mode=</span><span class="s">&quot;InProc&quot;</span> <span class="na">timeout=</span><span class="s">&quot;2&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;httpHandlers</span> <span class="na">configSource=</span><span class="s">&quot;HttpHandlers.Web.Config&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;httpModules</span> <span class="na">configSource=</span><span class="s">&quot;HttpModules.Web.Config&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And now we&#8217;ll add the corrected changes to <code>HttpHandlers.Web.Config</code> and <code>HttpModule.Web.Config</code></p>

<figure class='code'><figcaption><span>HttpHandlers.Web.Config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
</span><span class='line'>&lt;httpHandlers&gt;
</span><span class='line'><span class="gi">+ &lt;add verb=&quot;GET&quot; path=&quot;glimpse.axd&quot; type=&quot;Glimpse.AspNet.HttpHandler, Glimpse.AspNet&quot; /&gt;</span>
</span><span class='line'>  &lt;add verb=&quot;*&quot; path=&quot;TestControls.axd&quot; type=&quot;DevExpress.ExpressApp.Web.TestScripts.TestScriptsManager, DevExpress.ExpressApp.Web.v13.2, Version=13.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; /&gt;
</span><span class='line'>  &lt;add verb=&quot;*&quot; path=&quot;ImageResource.axd&quot; type=&quot;DevExpress.ExpressApp.Web.ImageResourceHttpHandler, DevExpress.ExpressApp.Web.v13.2, Version=13.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; /&gt;
</span><span class='line'>  &lt;add verb=&quot;*&quot; path=&quot;SessionKeepAliveReconnect.aspx*&quot; type=&quot;DevExpress.ExpressApp.Web.SessionKeepAliveReconnectHttpHandler, DevExpress.ExpressApp.Web.v13.2, Version=13.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; /&gt;
</span><span class='line'>  &lt;add verb=&quot;*&quot; path=&quot;*.aspx&quot; type=&quot;DevExpress.ExpressApp.Web.WebWindowTemplateHttpHandler, DevExpress.ExpressApp.Web.v13.2, Version=13.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; /&gt;
</span><span class='line'>  &lt;add verb=&quot;GET,POST&quot; path=&quot;ASPxUploadProgressHandlerPage.ashx&quot; validate=&quot;false&quot; type=&quot;DevExpress.Web.ASPxUploadControl.ASPxUploadProgressHttpHandler, DevExpress.Web.v13.2, Version=13.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; /&gt;
</span><span class='line'>  &lt;add verb=&quot;*&quot; path=&quot;ReportExportResource.axd&quot; type=&quot;DevExpress.ExpressApp.Reports.Web.ReportExportHttpHandler, DevExpress.ExpressApp.Reports.Web.v13.2, Version=13.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot; /&gt;
</span><span class='line'>&lt;/httpHandlers&gt;
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>HttpModules.Web.Config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;httpModules&gt;</span>
</span><span class='line'>+ <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">&quot;Glimpse&quot;</span> <span class="na">type=</span><span class="s">&quot;Glimpse.AspNet.HttpModule, Glimpse.AspNet&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">&quot;ASPxHttpHandlerModule&quot;</span> <span class="na">type=</span><span class="s">&quot;DevExpress.Web.ASPxClasses.ASPxHttpHandlerModule, DevExpress.Web.v13.2, Version=13.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/httpModules&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, there is <a href="https://github.com/Glimpse/Glimpse/issues/632">an outstanding problem</a> with the current release version of the Glimpse ASP.NET NuGet package (1.6.0) which prevents it from working with the development webserver. (Apparently it&#8217;s fixed in 1.7.0 which should be released soon). If you try to run MainDemo.Web you will get the following error:</p>

<pre><code>Type 'System.Web.HttpContextWrapper' in assembly 'System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' is not marked as serializable.
</code></pre>

<p>However it works fine against IIS Express (or full IIS). Go to the MainDemo.Web and change the debug properties as follows:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-015.png"></p>

<p>Then run the web application. Glimpse is off by default. In order to turn it on, you need to set a cookie, which you can do by navigating to <code>Glimpse.axd</code>. This is the Glimpse configuration screen.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/xaf-with-glimpse-014.png"></p>

<h2>Additional Glimpse extensions</h2>

<p>Glimpse is extensible and there are <a href="http://getglimpse.com/Packages">many additional plugins</a> available. Many of these take the form of additional tabs with details about a particular aspect of your application: SQL Queries, Elmah errors, ASP.NET caching, logging, dependency injection, <em>etc.</em></p>

<h2>MainDemo Sample Project</h2>

<p>I have uploaded a modified XAF MainDemo to this <a href="https://github.com/ZeroSharp/Xaf_MainDemo_Glimpse">GitHub repository</a> with all the above changes. (Don&#8217;t forget to debug against IIS Express).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DevExpress 13.2 Review - Part 2]]></title>
    <link href="http://ZeroSharp.github.com/devexpress-13-dot-2-review-part-2/"/>
    <updated>2013-12-10T16:10:00+00:00</updated>
    <id>http://ZeroSharp.github.com/devexpress-13-dot-2-review-part-2</id>
    <content type="html"><![CDATA[<p>This is the second part of a review of the new DevExpress 13.2. In <a href="http://ZeroSharp.github.com/devexpress-13-dot-2-review-part-1">the last part</a> we looked in-depth at the new <a href="https://community.devexpress.com/blogs/eaf/archive/2013/11/08/easy-large-reports-in-13-2-ctp-of-reportsv2-module.aspx">Reports V2</a>. In this part I&#8217;ll go over some of the other new features including the support for warnings and confirmations in the validation module.</p>

<h2>Soft Validation Rules</h2>

<p>With 13.2, DevExpress adds support for warning/confirmation messages to the validation engine. Warnings can be used to handle an unusual but valid data entry. An example would be:</p>

<blockquote><p>The date of birth results in an age of over 100. Are you sure?</p></blockquote>


<p>Here the age of the contact is unusual but not impossible, so instead of prohibiting it entirely, we ask the user for confirmation before saving.</p>

<p>Let&#8217;s add this rule to the MainDemo. Open the model and navigate to the Validation node. Add a <code>RuleValueComparison</code> and configure it as follows</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-13-2-review-010.png"></p>

<p>Of course you could instead also define the same rule with an attribute on the <code>Birthday</code> property. Something like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="na">[RuleValueComparison(&quot;IsOlderThan100_Warning&quot;, </span>
</span><span class='line'><span class="na">    DefaultContexts.Save,</span>
</span><span class='line'><span class="na">    ValueComparisonType.GreaterThan, &quot;AddYears(Now(), -100)&quot;,</span>
</span><span class='line'><span class="na">    &quot;Birthday makes this Contact older than 100. Are you sure?&quot;,</span>
</span><span class='line'><span class="na">    ParametersMode.Expression,</span>
</span><span class='line'><span class="na">    ResultType = ValidationResultType.Warning)]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Notice the new <code>ResultType</code> parameter is set to <code>ValidationResultType.Warning</code>.</p>

<p>Another typical use is to provide better handling of duplicates. Consider the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="na">[RuleCombinationOfPropertiesIsUnique(&quot;DuplicateName_Warning&quot;, </span>
</span><span class='line'><span class="na">    DefaultContexts.Save, </span>
</span><span class='line'><span class="na">    &quot;LastName;FirstName&quot;, </span>
</span><span class='line'><span class="na">    &quot;There is already a Contact with the name {FullName}. Are you sure?&quot;, </span>
</span><span class='line'><span class="na">    ResultType = ValidationResultType.Warning)]</span>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">Contact</span> <span class="p">:</span> <span class="n">Person</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//etc ...</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then this is what happens if I try to add another John Nilsen.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-13-2-review-011.png"></p>

<p>Another scenario would be to warn the user of something which needs attention. Such as &#8220;Warning! You are running out of funds in your current account.&#8221; Or &#8220;Warning! Deleting this record will format your hard drive.&#8221;</p>

<h3>List Views</h3>

<p>Soft validation also works in the list views, even with multiple selection, but there are a couple of things that don&#8217;t work very smoothly yet and I would expect the web implementation to evolve over the coming releases.</p>

<p>In order to demonstrate this I need to use a context which allows multiple selection such as deletion. So let&#8217;s decorate our class with the following simple rule.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="na">[RuleCriteria(&quot;Deletion_Warning&quot;, DefaultContexts.Delete, &quot;1=0&quot;, &quot;Warning! Are you sure?&quot;, ResultType = ValidationResultType.Warning)]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then I select all the contacts and press <code>Delete</code>, after the confirmation window, I get this:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-13-2-review-014.png"></p>

<h3>Web Application</h3>

<p>Soft validation is also available in the web application. This is what a warning looks like.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-13-2-review-015.png"></p>

<p>I would prefer to see a <em>Confirm</em> button rather than the current <em>Ignore</em> checkbox since a button requires a single click to validate.</p>

<p>When there are several warnings and errors at the same time, the current implementation displays them all. I think it would be preferable if warnings were not displayed unless there are no errors. Unless DevExpress provide this as an option soon, I will attempt to extend the controller in this regard in a future post.</p>

<h2>Other new features</h2>

<p>In the 13.2 release, there is now support for runtime extension of the model. DevExpress is calling this feature <em>custom fields</em> and (again) it is marked as beta. This is not a feature I&#8217;ve looked at, but there are a few other non-XAF DevExpress novelties which I&#8217;d like to see working within XAF. These include <a href="https://www.devexpress.com/Subscriptions/New-2013-v2-Beta.xml?product=aspnet#ctl00_ctl00_Content_Content_ctl659">new themes</a> and <a href="https://www.devexpress.com/Subscriptions/New-2013-v2-Beta.xml?product=aspnet#ctl00_ctl00_Content_Content_ctl660">support for grid batch editing</a>.</p>

<h2>One warning</h2>

<p><img class="left" src="http://ZeroSharp.github.com/images/blog/devexpress-13-2-review-001.png">
<img class="right" src="http://ZeroSharp.github.com/images/blog/devexpress-13-2-review-002.png">
The default directories for the installation have changed again. I&#8217;m sure DevExpress has some good reason for this, but if, like me, you have several different versions installed you end up with a confusing directory tree. Whenever this happens I always end up having to modify build scripts and config files so that all my tools work as expected. For those of you who use Red Gate&#8217;s <em>.NET Reflector</em>, you can find my config file <a href="https://gist.github.com/shamp00/7748150">in this gist</a>.</p>

<h2>Conclusions</h2>

<p>For the 13.2 release, DevExpress have focused on making the existing functionality work better rather than developing new modules.</p>

<p>Better reports. Better validation. A better framework all round.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DevExpress 13.2 Review - Part 1]]></title>
    <link href="http://ZeroSharp.github.com/devexpress-13-dot-2-review-part-1/"/>
    <updated>2013-12-02T16:23:00+00:00</updated>
    <id>http://ZeroSharp.github.com/devexpress-13-dot-2-review-part-1</id>
    <content type="html"><![CDATA[<p>The first version of XAF I ever installed was called <em>eXpressApp-1.0.CTP2.exe</em> in July 2006! It has certainly come a long way since then.</p>

<p>This post is the first part of an overview of the brand new version XAF 13.2 which will be released any day now. This part is an in-depth review of the new report writer features (still in beta).</p>

<h2>Reports V2</h2>

<p>Prior to this version, XAF reports were not source code. They were objects serialized to a file and then loaded into the database during initialisation. This has a lot of shortcomings some of which I have addressed in previous <a href="http://ZeroSharp.github.com/making-xaf-reports-even-better-part-1/">blog posts</a>.</p>

<p>But now finally it is now possible to build XAF reports directly from Visual Studio. DevExpress is calling this <a href="https://community.devexpress.com/blogs/eaf/archive/2013/11/08/easy-large-reports-in-13-2-ctp-of-reportsv2-module.aspx">Reports V2</a> and it largely supersedes my previous workarounds. The immediate advantages of Reports V2 are:</p>

<ul>
<li>Build time syntax checking</li>
<li>Easily merge/compare report versions</li>
<li>Painless version control of reports</li>
<li>Better unit testing possibilities</li>
</ul>


<p>Let&#8217;s have a look at the details. DevExpress have provided us with a new sample project called <em>ReportsV2Demo</em>. The interesting part of the project solution is here:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-13-2-review-003.png"></p>

<p>Notice that there are two folders containing reports. <em>PredefinedEditableReports</em> contains V1 reports. That is, the report is serialised as a string and loaded into the database during initialisation. If we look at the source for one of these, here is what it looks like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">namespace</span> <span class="nn">ReportV2Demo.Module.PredefinedEditableReports</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">class</span> <span class="nc">OrdinalReportResource</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">public</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">ReportLayout</span> <span class="p">=</span> <span class="s">@&quot;</span>
</span><span class='line'><span class="s">/// &lt;XRTypeInfo&gt;</span>
</span><span class='line'><span class="s">///   &lt;AssemblyFullName&gt;DevExpress.XtraReportsVSuffix, Version=dllVersion, Culture=neutral, PublicKeyToken=dllPublicKeyToken&lt;/AssemblyFullName&gt;</span>
</span><span class='line'><span class="s">///   &lt;AssemblyLocation&gt;C:\Windows\Microsoft.Net\assembly\GAC_MSIL\DevExpress.XtraReportsVSuffix\v4.0_dllVersion__dllPublicKeyToken\DevExpress.XtraReportsVSuffix.dll&lt;/AssemblyLocation&gt;</span>
</span><span class='line'><span class="s">///   &lt;TypeName&gt;DevExpress.XtraReports.UI.XtraReport&lt;/TypeName&gt;</span>
</span><span class='line'><span class="s">///   &lt;Localization&gt;en-US&lt;/Localization&gt;</span>
</span><span class='line'><span class="s">///   &lt;Version&gt;VersionShort&lt;/Version&gt;</span>
</span><span class='line'><span class="s">///   &lt;References&gt;</span>
</span><span class='line'><span class="s">///     &lt;Reference Path=&quot;&quot;C:\Windows\Microsoft.Net\assembly\GAC_MSIL\DevExpress.Persistent.BaseVSuffix\v4.0_dllVersion__dllPublicKeyToken\DevExpress.Persistent.BaseVSuffix.dll&quot;&quot; /&gt;</span>
</span><span class='line'><span class="s">///     &lt;Reference Path=&quot;&quot;C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System\v4.0_4.0.0.0__b77a5c561934e089\System.dll&quot;&quot; /&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">/// etc.</span>
</span></code></pre></td></tr></table></div></figure>


<p>The second folder, <em>PredefinedReadonlyReports</em> contains the V2 reports. With these reports, we can right-click and <strong>View Designer</strong> and up pops the XtraReport designer.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-13-2-review-004.png"></p>

<p>Now I can make changes to my report within Visual Studio. In theory I can preview the report and view the HTML output. However, in the beta (13.2.4) the Preview view prints the report correctly but fails to fetch any data so all the fields are empty (maybe this is by design).</p>

<p>(Actually, I think the names of these folders could be improved. Maybe XafReports vs. XtraReports. Or RuntimeReports vs. DesigntimeReports.)</p>

<p>With respect to event scripts which in the past were particularly arduous to maintain, we now have two options.</p>

<h3>Scripts option 1 - Use serialized scripts</h3>

<p> Firstly, you can continue to use the scripts as before. You can use Visual Studio&#8217;s <em>Properties</em> window to navigate to the script you need and then add the necessary code in the custom editor.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-13-2-review-005.png"></p>

<p>Unfortunately, this is not the best from a maintenance perspective. The Scripts code editor view is not at all comparable to Visual Studio. No Intellisense. No CodeRush. In addition, the script itself gets serialized to a string.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">this</span><span class="p">.</span><span class="n">ScriptsSource</span> <span class="p">=</span> <span class="s">&quot;\r\nprivate void xrLabel2_BeforePrint(object sender,System.Drawing.Printing.PrintE&quot;</span> <span class="p">+</span>
</span><span class='line'>    <span class="s">&quot;ventArgs e) {\r\n    string something = \&quot;something\&quot;;\r\n}\r\n&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>So unfortunately this approach does not improve things much with regard to compile-time syntax checking or code merging/version control.</p>

<h3>Scripts option 2 - Move the scripts to the C# file</h3>

<p>Now that the report is more like an <code>XtraReport</code>, we can attach an event in code. To test it I&#8217;ll replace the output of the <em>First name</em> with the current time.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">XtraReportOrdinary</span> <span class="p">:</span> <span class="n">DevExpress</span><span class="p">.</span><span class="n">XtraReports</span><span class="p">.</span><span class="n">UI</span><span class="p">.</span><span class="n">XtraReport</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="nf">XtraReportOrdinary</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">InitializeComponent</span><span class="p">();</span>
</span><span class='line'>        <span class="n">xrLabel2</span><span class="p">.</span><span class="n">BeforePrint</span> <span class="p">+=</span> <span class="n">xrLabel2_BeforePrint</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="k">void</span> <span class="nf">xrLabel2_BeforePrint</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">Drawing</span><span class="p">.</span><span class="n">Printing</span><span class="p">.</span><span class="n">PrintEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Today&#39;s date and time</span>
</span><span class='line'>        <span class="n">xrLabel2</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="s">&quot;G&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now let&#8217;s see if it works. We start up the web application and run the report.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-13-2-review-006.png"></p>

<p>Excellent! You can see the report has successfully run the event and is displaying the current time instead of the first name. Here are the advantages of handling events this way.</p>

<ul>
<li>If there&#8217;s a mistake in an event, the project will not compile until it&#8217;s fixed.</li>
<li>The code is more readable.</li>
<li>The source code of the events can easily be compared with older versions.</li>
<li>The source code can be merged much more easily when handling version control conflicts.</li>
<li>Unit testing of the events becomes feasible.</li>
</ul>


<h3>Runtime tailoring</h3>

<p>Can an end-user still make a copy and tailor the report as they could with the older versions? Yes they can! Let&#8217;s start up the WinForms client and have a look.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-13-2-review-007.png"></p>

<p>Each of the <em>PredefinedReadonlyReports</em> has a new option <em>Copy predefined report</em>. Also, notice that the <em>Show Report Designer</em> is greyed out. Now compare with the copy.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-13-2-review-008.png"></p>

<p>This time it is the <em>Copy predefined report</em> is greyed out and the familiar <em>Show Report Designer</em> has become available. (A little suggestion to the DevExpress crew. It would be better if the new copy got renamed to <em>Copy of Inplace Report</em> like Windows does when copying a file). Now we can open the Report Designer and customise the report further. Fantastic!</p>

<p>Let&#8217;s check what happened to our events?</p>

<p><img src="http://ZeroSharp.github.com/images/blog/devexpress-13-2-review-009.png"></p>

<p>Well, the serialized event was copied correctly, but the script that we put in the C# file has not been copied. A bit unfortunate - that event would have to be re-written or copied manually from the C# source file, but in most cases, additional tailoring of reports is a one-off occasional activity. For me at least, the benefits of having more maintainable code outweigh the inconvenience of losing the events when cloning a report.</p>

<h2>Conclusions</h2>

<p>Reports V2 is certainly the most significant improvement to the XAF reporting engine yet. I&#8217;m sure there are a few beta issues to iron out and a few further improvements down the line. In this post, I haven&#8217;t looked at features such as views, sub-reports and custom reporting components, all of which deserve further investigation.</p>

<p>In my <a href="http://www.coprocess.com/">main development project</a>, there are currently 110 different reports and maintaining them takes some effort. Reports V2 will help considerably. Hats off to the DevExpress team.</p>

<h2>Next up</h2>

<p>In my next post I&#8217;ll be taking a look at the new soft validation along with some other 13.2 improvements.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to improve XAF grid layout for Chrome]]></title>
    <link href="http://ZeroSharp.github.com/how-to-improve-xaf-grid-layout-for-chrome/"/>
    <updated>2013-11-08T09:55:00+00:00</updated>
    <id>http://ZeroSharp.github.com/how-to-improve-xaf-grid-layout-for-chrome</id>
    <content type="html"><![CDATA[<p>This post proposes a workaround for a specific XAF rendering problem related to recent versions of Google Chrome.</p>

<p>Here is an XAF list view as it looks with IE 10 and DevExpress 13.1.8.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/chrome-grid-layout-001.png"></p>

<p>This is how the same view looks with Chrome 30. Notice how the column widths are rendered poorly. The minimum space is given to the string field and the date and bool fields are too wide.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/chrome-grid-layout-002.png"></p>

<p>What&#8217;s going on? An update to the Chrome browser occurred in which has caused problems with the rendering of grid views in certain situations. The problem exists in all versions of Chrome great than 25 and also affects the <a href="http://www.google.com/chromeframe">Google Chrome Frame</a> plugin for IE.</p>

<p>DevExpress were able to fix some scenarios in 13.1.4 and 12.2.11 (such as column sorting), but there are other situations which still pose problems (<em>e.g.</em> the fix does not resolve the problem if the <em>Auto Filter Row</em> is enabled, which is the case above.)</p>

<p>Hopefully the Chrome devs will one day fix the root problem. You can keep an eye on <a href="https://code.google.com/p/chromium/issues/detail?id=178369">the issue here</a></p>

<h2>The fix</h2>

<p>Not so much a fix as a workaround. We use a <code>ViewController&lt;ListView&gt;</code> to set the grid layout to <code>UseFixedTableLayout</code>, but only for Chrome browsers. Something like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'><span class="c1">/// Switches to fixed table layout for the main list view when using Chrome or ChromeFrame.</span>
</span><span class='line'><span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">ChromeSpecificListViewController</span> <span class="p">:</span> <span class="n">ViewController</span><span class="p">&lt;</span><span class="n">ListView</span><span class="p">&gt;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnViewChanging</span><span class="p">(</span><span class="n">View</span> <span class="n">view</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">base</span><span class="p">.</span><span class="n">OnViewChanging</span><span class="p">(</span><span class="n">view</span><span class="p">);</span>
</span><span class='line'>        <span class="n">Active</span><span class="p">[</span><span class="s">&quot;IsChrome&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="n">IsChrome</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="kt">bool</span> <span class="n">IsChrome</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">HttpContext</span> <span class="n">context</span> <span class="p">=</span> <span class="n">HttpContext</span><span class="p">.</span><span class="n">Current</span><span class="p">;</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">context</span> <span class="p">!=</span> <span class="k">null</span> <span class="p">&amp;&amp;</span> <span class="n">context</span><span class="p">.</span><span class="n">Request</span><span class="p">.</span><span class="n">Browser</span><span class="p">.</span><span class="n">Browser</span> <span class="p">==</span> <span class="s">&quot;Chrome&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnViewControlsCreated</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">base</span><span class="p">.</span><span class="n">OnViewControlsCreated</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ASPxGridListEditor</span> <span class="n">listEditor</span> <span class="p">=</span> <span class="n">View</span><span class="p">.</span><span class="n">Editor</span> <span class="k">as</span> <span class="n">ASPxGridListEditor</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">listEditor</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ASPxGridView</span> <span class="n">gridView</span> <span class="p">=</span> <span class="n">listEditor</span><span class="p">.</span><span class="n">Grid</span> <span class="k">as</span> <span class="n">ASPxGridView</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">gridView</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">gridView</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">UseFixedTableLayout</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>The resulting view in Chrome:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/chrome-grid-layout-003.png"></p>

<p>That looks better. You may notice the columns will allways be the same width now, which is not quite as good as the IE rendering. As such, it may not be appropriate for all views. But since it&#8217;s a <code>ViewController</code> it&#8217;s easy to deactivate it by adding an <code>Active[]</code> criteria.</p>

<h4>References</h4>

<ul>
<li><a href="https://code.google.com/p/chromium/issues/detail?id=178369">Chrome issue</a></li>
<li><a href="http://www.devexpress.com/Support/Center/Question/Details/Q477066">Support Center Q477066</a></li>
<li><a href="https://www.devexpress.com/Support/Center/Question/Details/B235945">Support Center B235945</a></li>
<li><a href="https://www.devexpress.com/Support/Center/Question/Details/Q510468">Support Center Q510468</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Three ways to store a list of currency codes in XAF]]></title>
    <link href="http://ZeroSharp.github.com/three-ways-to-store-a-list-of-currency-codes-in-xaf/"/>
    <updated>2013-10-22T18:15:00+01:00</updated>
    <id>http://ZeroSharp.github.com/three-ways-to-store-a-list-of-currency-codes-in-xaf</id>
    <content type="html"><![CDATA[<p>In the <a href="http://ZeroSharp.github.com/the-ugly-the-heavy-and-the-good">last post</a> we looked at three solutions to a relatively simple XAF requirement. In this post I&#8217;ll discuss another XAF challenge, explain the options and provide a versatile and maintainable solution.</p>

<p>In my DevExpress XAF application, I have an object which has several properties like this:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/currency-list-editor-002.png"></p>

<p>In each case, the field is a comma-separated list of currency codes. These fields are not very important to the model - they are used mainly for reporting.</p>

<p>Let&#8217;s look at 3 different ways of handling these fields.</p>

<h2>Option 1 - Use a string field</h2>

<p>The <em>lightest</em> option would be just to declare them as a normal XPO string field:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="kt">string</span> <span class="n">_List1Currencies</span><span class="p">;</span>
</span><span class='line'><span class="k">public</span> <span class="kt">string</span> <span class="n">List1Currencies</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">get</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">_List1Currencies</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">set</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">SetPropertyValue</span><span class="p">(</span><span class="s">&quot;List1Currencies&quot;</span><span class="p">,</span> <span class="k">ref</span> <span class="n">_List1Currencies</span><span class="p">,</span> <span class="k">value</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>It&#8217;s certainly simple and maintainable, but it&#8217;s not very user-friendly. There is no fancy interface to help with the input.  We can perhaps improve things slightly by providing edit masks and/or validation rules to check the input, but careful typing is the only way to change the values.</p>

<h2>Option 2 - Declare an association property</h2>

<p>The <em>heaviest</em> option is to declare each such property as a many-to-many relationship.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">Container</span><span class="p">:</span> <span class="n">XPObject</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="nf">Container</span><span class="p">(</span><span class="n">Session</span> <span class="n">session</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">session</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="kt">string</span> <span class="n">Name</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">    [Association(&quot;List1Currencies&quot;)]</span>
</span><span class='line'>    <span class="k">public</span> <span class="n">XPCollection</span><span class="p">&lt;</span><span class="n">Currency</span><span class="p">&gt;</span> <span class="n">List1</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">GetCollection</span><span class="p">&lt;</span><span class="n">Currency</span><span class="p">&gt;(</span><span class="s">&quot;List1&quot;</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">Currency</span><span class="p">:</span> <span class="n">XPObject</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="nf">Currency</span><span class="p">(</span><span class="n">Session</span> <span class="n">session</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">session</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="na">    [Size(3)]</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">Code</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="kt">string</span> <span class="n">Name</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">    [Association(&quot;List1Currencies&quot;)]</span>
</span><span class='line'>    <span class="k">public</span> <span class="n">XPCollection</span><span class="p">&lt;</span><span class="n">Container</span><span class="p">&gt;</span> <span class="n">List1Container</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">GetCollection</span><span class="p">&lt;</span><span class="n">Container</span><span class="p">&gt;(</span><span class="s">&quot;List1Container&quot;</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This works great - we get a nice interface for selecting the currencies and the end result looks like this:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/currency-list-editor-003.png"></p>

<p>However, it&#8217;s quite a heavy solution for something quite simple. For each such relationship XPO will generate a new intermediate table. If we look at the database schema, we see the following:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/currency-list-editor-004.png"></p>

<p>And in the model there are two new views.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/currency-list-editor-005.png"></p>

<p>If we have 5 such properties, we end up with 5 intermediary tables and 10 new views.</p>

<p>Now, depending on your requirements that may be acceptable. If those relationships are important to your model, then the overhead may be justified. In my situation, these are minor fields and I do not want to burden the model or the database with extra complexity if I can avoid it.</p>

<h2>Option 3 - Create a custom property editor</h2>

<p>With the help of <a href="http://documentation.devexpress.com/xaf/CustomDocument3097.aspx">the documentation</a> and old Support Center issues, I was able to quite quickly put together a custom editor which gives the end user a nice interface while keeping it simple. The bulk of the logic is in the <code>SerializedListPropertyEditor</code> base class (see the end of the article for the link to the code), but the principle is as follows:</p>

<p>Create a new subclass:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="na">[PropertyEditor(typeof(String), false)]</span>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">CurrencyListPropertyEditor</span> <span class="p">:</span> <span class="n">SerializedListPropertyEditor</span><span class="p">&lt;</span><span class="n">Currency</span><span class="p">&gt;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="nf">CurrencyListPropertyEditor</span><span class="p">(</span><span class="n">Type</span> <span class="n">objectType</span><span class="p">,</span> <span class="n">IModelMemberViewItem</span> <span class="n">info</span><span class="p">)</span>
</span><span class='line'>        <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">objectType</span><span class="p">,</span> <span class="n">info</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">protected</span> <span class="k">override</span> <span class="kt">string</span> <span class="nf">GetDisplayText</span><span class="p">(</span><span class="n">Currency</span> <span class="n">currency</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{0}\t{1}&quot;</span><span class="p">,</span> <span class="n">currency</span><span class="p">.</span><span class="n">Code</span><span class="p">,</span> <span class="n">currency</span><span class="p">.</span><span class="n">Name</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">protected</span> <span class="k">override</span> <span class="kt">string</span> <span class="nf">GetValue</span><span class="p">(</span><span class="n">Currency</span> <span class="n">currency</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">currency</span><span class="p">.</span><span class="n">Code</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then decorate each property with a <code>ModelDefault</code> attribute to set the <code>PropertyEditorType</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="kt">string</span> <span class="n">_List1Currencies</span><span class="p">;</span>
</span><span class='line'><span class="na">[ModelDefault(&quot;PropertyEditorType&quot;, &quot;Solution1.Module.Web.CurrencyListPropertyEditor&quot;)]</span>
</span><span class='line'><span class="k">public</span> <span class="kt">string</span> <span class="n">List1Currencies</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">get</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">_List1Currencies</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">set</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">SetPropertyValue</span><span class="p">(</span><span class="s">&quot;List1Currencies&quot;</span><span class="p">,</span> <span class="k">ref</span> <span class="n">_List1Currencies</span><span class="p">,</span> <span class="k">value</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now the user gets a pretty editor to select the currencies, but the field is just a string field.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/currency-list-editor-001.png"></p>

<p>The editor supports use of the <code>[DataSourceProperty]</code> and <code>[DataSourceCriteria]</code> properties too, so you can easily filter the collection.</p>

<p>It is easy to provide a similar editor for any object type - just create a new subclass of <code>SerializedListPropertyEditor&lt;T&gt;</code> where <code>T</code> is your persistent type.</p>

<p>You can download <a href="https://github.com/ZeroSharp/Xaf_CurrencyListPropertyEditor">a working sample project on GitHub</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Ugly, the Heavy and the Good: 3 solutions to an XAF layout problem]]></title>
    <link href="http://ZeroSharp.github.com/the-ugly-the-heavy-and-the-good/"/>
    <updated>2013-10-14T09:51:00+01:00</updated>
    <id>http://ZeroSharp.github.com/the-ugly-the-heavy-and-the-good</id>
    <content type="html"><![CDATA[<p>This post aims to look at various solutions to a seemingly simple layout change.</p>

<p>With <a href="https://www.devexpress.com/Products/NET/Application_Framework/">DevExpress XAF</a>, a lot of the difficult things are easy: authentication, authorisation, ORM, reporting, complex form layouts, themes, etc., are all made easy by XAF. On the other hand, some of the easy things are hard. It can be frustratingly difficult to make a small modification to the basic layout. We will look at an example of such a change and evaluate the recommended DevExpress approaches.</p>

<h2>The problem</h2>

<p>Whenever my XAF web application asks me to change my password, I get a screen like this:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/narrow-dialog-001.png"></p>

<p>Well that&#8217;s a bit annoying - those edit boxes are far too wide. Wouldn&#8217;t it look much better if it were narrower and centered? If we weren&#8217;t using XAF, we&#8217;d probably have a separate <em>aspx</em> file for this view and we could just modify the html. With XAF there are several different recommended ways of modifying the output.</p>

<h2>Option 1: Use the model</h2>

<p>Well, one approach would be to use the layout designer to add some <em>EmptySpaceItems</em> to the default layout for the <code>ChangePasswordOnLogon</code>. Add something like this to <em>MainDemo.Web/Model.xafml</em>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;Views&gt;</span>
</span><span class='line'>    <span class="nt">&lt;DetailView</span> <span class="na">Id=</span><span class="s">&quot;ChangePasswordOnLogonParameters_DetailView&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;Layout&gt;</span>
</span><span class='line'>        <span class="nt">&lt;LayoutGroup</span> <span class="na">Id=</span><span class="s">&quot;Main&quot;</span> <span class="na">Removed=</span><span class="s">&quot;True&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;LayoutGroup</span> <span class="na">Id=</span><span class="s">&quot;Narrow&quot;</span> <span class="na">RelativeSize=</span><span class="s">&quot;50&quot;</span> <span class="na">HorizontalAlign=</span><span class="s">&quot;Center&quot;</span> <span class="na">Direction=</span><span class="s">&quot;Horizontal&quot;</span> <span class="na">IsNewNode=</span><span class="s">&quot;True&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;LayoutItem</span> <span class="na">Id=</span><span class="s">&quot;EmptySpaceItem1&quot;</span> <span class="na">Index=</span><span class="s">&quot;0&quot;</span> <span class="na">ViewItem=</span><span class="s">&quot;&quot;</span> <span class="na">RelativeSize=</span><span class="s">&quot;25&quot;</span> <span class="na">IsNewNode=</span><span class="s">&quot;True&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;LayoutGroup</span> <span class="na">Id=</span><span class="s">&quot;Main&quot;</span> <span class="na">ShowCaption=</span><span class="s">&quot;False&quot;</span> <span class="na">Index=</span><span class="s">&quot;1&quot;</span> <span class="na">IsNewNode=</span><span class="s">&quot;True&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;LayoutGroup</span> <span class="na">Id=</span><span class="s">&quot;Static&quot;</span> <span class="na">Index=</span><span class="s">&quot;0&quot;</span> <span class="na">Direction=</span><span class="s">&quot;Horizontal&quot;</span> <span class="na">ShowCaption=</span><span class="s">&quot;False&quot;</span> <span class="na">IsNewNode=</span><span class="s">&quot;True&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;LayoutItem</span> <span class="na">Id=</span><span class="s">&quot;ChangePasswordImage&quot;</span> <span class="na">Index=</span><span class="s">&quot;0&quot;</span> <span class="na">ShowCaption=</span><span class="s">&quot;False&quot;</span> <span class="na">RelativeSize=</span><span class="s">&quot;1&quot;</span> <span class="na">ViewItem=</span><span class="s">&quot;ChangePasswordImage&quot;</span> <span class="na">IsNewNode=</span><span class="s">&quot;True&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;LayoutItem</span> <span class="na">Id=</span><span class="s">&quot;ChangePasswordText&quot;</span> <span class="na">Index=</span><span class="s">&quot;1&quot;</span> <span class="na">ShowCaption=</span><span class="s">&quot;False&quot;</span> <span class="na">RelativeSize=</span><span class="s">&quot;99&quot;</span> <span class="na">ViewItem=</span><span class="s">&quot;ChangePasswordText&quot;</span> <span class="na">IsNewNode=</span><span class="s">&quot;True&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/LayoutGroup&gt;</span>
</span><span class='line'>            <span class="nt">&lt;LayoutGroup</span> <span class="na">Id=</span><span class="s">&quot;SimpleEditors&quot;</span> <span class="na">Index=</span><span class="s">&quot;1&quot;</span> <span class="na">ShowCaption=</span><span class="s">&quot;False&quot;</span> <span class="na">IsNewNode=</span><span class="s">&quot;True&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;LayoutGroup</span> <span class="na">Id=</span><span class="s">&quot;ChangePasswordOnLogonParameters&quot;</span> <span class="na">ShowCaption=</span><span class="s">&quot;False&quot;</span> <span class="na">Index=</span><span class="s">&quot;0&quot;</span> <span class="na">IsNewNode=</span><span class="s">&quot;True&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;LayoutItem</span> <span class="na">Id=</span><span class="s">&quot;NewPassword&quot;</span> <span class="na">ViewItem=</span><span class="s">&quot;NewPassword&quot;</span> <span class="na">Index=</span><span class="s">&quot;0&quot;</span> <span class="na">IsNewNode=</span><span class="s">&quot;True&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                <span class="nt">&lt;LayoutItem</span> <span class="na">Id=</span><span class="s">&quot;ConfirmPassword&quot;</span> <span class="na">ViewItem=</span><span class="s">&quot;ConfirmPassword&quot;</span> <span class="na">Index=</span><span class="s">&quot;1&quot;</span> <span class="na">IsNewNode=</span><span class="s">&quot;True&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/LayoutGroup&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/LayoutGroup&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/LayoutGroup&gt;</span>
</span><span class='line'>          <span class="nt">&lt;LayoutItem</span> <span class="na">Id=</span><span class="s">&quot;EmptySpaceItem2&quot;</span> <span class="na">Index=</span><span class="s">&quot;2&quot;</span> <span class="na">ViewItem=</span><span class="s">&quot;&quot;</span> <span class="na">RelativeSize=</span><span class="s">&quot;25&quot;</span> <span class="na">IsNewNode=</span><span class="s">&quot;True&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/LayoutGroup&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/Layout&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/DetailView&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/Views&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ugh. What a lot of work for such a small change. Another approach would be to make an equivalent model modification in code by subclassing <code>ModelNodesGeneratorUpdater&lt;ModelViewsNodesGenerator&gt;</code> but it would be even more effort.</p>

<p>Is it easy to maintain? Not especially. If we make any changes to the parameters object, we would have to update the layout again. It is quite likely we&#8217;d have to make revisions when upgrading the framework.</p>

<p>And does it work?</p>

<p><img src="http://ZeroSharp.github.com/images/blog/narrow-dialog-003.png"></p>

<p>No!. It&#8217;s a little better but it still looks ugly because the OK and Cancel buttons are still out wide.</p>

<blockquote><p>Verdict: too ugly</p></blockquote>


<p><em>When</em> <strong>should</strong> <em>you use this approach?</em>:</p>

<ul>
<li>When the layout changes are within the main view area.</li>
</ul>


<p>Let&#8217;s look at another option.</p>

<h2>Option 2: Customise the ASP.NET template</h2>

<p>If we were to <a href="http://documentation.devexpress.com/#Xaf/CustomDocument3460">follow the instructions here</a> we can modify the HTML exactly as we want. Unfortunately, this is even more work. We would need to:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/narrow-dialog-004.jpg"></p>

<ul>
<li>Create a new MyNarrowTemplateDialogContent.ascx</li>
<li>Modify the HTML within it to add a width to <code>Form1</code></li>
<li>Find some way of applying this template to only the detail view for <em>Change Password</em>. This is <a href="http://www.devexpress.com/Support/Center/Question/Details/Q207853">currently not easy</a> but there is an example project at the end of <a href="http://www.devexpress.com/Support/Center/Question/Details/Q204692">this issue</a>.</li>
</ul>


<p>We&#8217;d end up with quite a few new files to maintain for just one little layout fix&#8230;</p>

<p>Also, another problem with this approach is that it needs reviewing whenever a new version of the framework is released, because the default templates may have changed. Too much maintenance work for such a little change.</p>

<blockquote><p>Verdict: too heavy</p></blockquote>


<p><em>When</em> <strong>should</strong> <em>you use this approach?</em>:</p>

<ul>
<li>When the same layout changes are to be applied to the views of all or many different object types.</li>
<li>When the changes you are making are significant enough that they are hard to achieve by the solution below.</li>
</ul>


<h2>Option 3: Use a ViewController</h2>

<p>The <code>ViewController</code> and <code>WindowController</code> are well-suited to this sort of task.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">NarrowDialogViewController</span> <span class="p">:</span> <span class="n">ViewController</span><span class="p">&lt;</span><span class="n">DetailView</span><span class="p">&gt;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnActivated</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">base</span><span class="p">.</span><span class="n">OnActivated</span><span class="p">();</span>
</span><span class='line'>        <span class="n">Active</span><span class="p">[</span><span class="s">&quot;ShouldUseNarrowForm&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="n">View</span><span class="p">.</span><span class="n">ObjectTypeInfo</span><span class="p">.</span><span class="n">Type</span> <span class="p">==</span> <span class="k">typeof</span><span class="p">(</span><span class="n">ChangePasswordOnLogonParameters</span><span class="p">);</span> <span class="c1">// see side-note below</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnViewControlsCreated</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">base</span><span class="p">.</span><span class="n">OnViewControlsCreated</span><span class="p">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">WebWindow</span><span class="p">.</span><span class="n">CurrentRequestPage</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">var</span> <span class="n">htmlForm</span> <span class="p">=</span> <span class="n">WebWindow</span><span class="p">.</span><span class="n">CurrentRequestPage</span><span class="p">.</span><span class="n">FindControl</span><span class="p">(</span><span class="s">&quot;Form2&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">HtmlForm</span><span class="p">;</span> <span class="c1">// see note below</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">htmlForm</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="c1">// make the form narrow</span>
</span><span class='line'>                <span class="n">htmlForm</span><span class="p">.</span><span class="n">Attributes</span><span class="p">.</span><span class="n">CssStyle</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="s">&quot;width&quot;</span><span class="p">,</span> <span class="n">Unit</span><span class="p">.</span><span class="n">Percentage</span><span class="p">(</span><span class="m">40</span><span class="p">).</span><span class="n">ToString</span><span class="p">());</span>
</span><span class='line'>                <span class="c1">// center the form</span>
</span><span class='line'>                <span class="n">htmlForm</span><span class="p">.</span><span class="n">Attributes</span><span class="p">.</span><span class="n">CssStyle</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="s">&quot;margin-left&quot;</span><span class="p">,</span> <span class="s">&quot;auto&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="n">htmlForm</span><span class="p">.</span><span class="n">Attributes</span><span class="p">.</span><span class="n">CssStyle</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="s">&quot;margin-right&quot;</span><span class="p">,</span> <span class="s">&quot;auto&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>A side note: do not use <code>TargetObjectType == typeof(ChangePasswordOnLogonParameters)</code> instead of the <code>OnActivated()</code> override. This is because <code>ChangePasswordParameters</code> which is used when the user clicks on <code>Change My Password</code> is a subclass of <code>ChangePasswordOnLogonParameters</code> and we do <em>not</em> want that view to be narrowed because it appears in a popup window instead of the main window.</p>

<p>This solution is quite maintainable. We can delimit the views for which the modification applies making the controller is active. And the modification itself is relatively simple. It is also reasonably robust with regard to DevExpress upgrades. (They did just change the name of the main dialog Form <code>Form1</code> in 12.1 to <code>Form2</code> in 12.2, but it was the first time in years and it was simple to fix. Alternatively, you could use <code>FindControl</code> instead of using the hard-wired name).</p>

<p>Here&#8217;s the resulting output, horizontally centered in the browser window:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/narrow-dialog-002.png"></p>

<blockquote><p>Verdict: good</p></blockquote>


<p><em>When</em> <strong>should</strong> <em>you use this approach?</em>:</p>

<ul>
<li>When a layout change is easy to apply by modifying styles. When a change pertains only to one or few specific object types.</li>
</ul>


<h2>Conclusions</h2>

<p>In this case, using a <code>ViewController</code> leads to relatively simple code and ease of maintenance. Other situations may well be better served by the other approaches.</p>

<p>DevExpress XAF is a powerful mature product. As such, it can be daunting to new users because of all the different approaches for applying changes. It is always possible to find an elegant maintainable solution, but sometimes it is not obvious, even when the required change is small.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A review of NDepend 5]]></title>
    <link href="http://ZeroSharp.github.com/a-review-of-ndepend-5/"/>
    <updated>2013-10-02T17:54:00+01:00</updated>
    <id>http://ZeroSharp.github.com/a-review-of-ndepend-5</id>
    <content type="html"><![CDATA[<p>NDepend is a commercial static analysis tool for .NET managed code. It&#8217;s been around a long time (since 2004!). Version 5 was just released and in this post I&#8217;m going to try it out on the DevExpress MainDemo.</p>

<p><span class='pullquote-right' data-pullquote='In version 5, a lot of work has been done to improve the learning curve.'>
In the past I have always thought of NDepend as a complex tool. I was never sure where to start. In version 5, a lot of work has been done to improve the learning curve. The installation process is easy and a wizard very quickly points you in the right direction.</p>

<p>After <a href="http://ndepend.com/NDependDownload.aspx">downloading the v5 trial</a> and running the installation you get to the following screen.
</span></p>

<p><img src="http://ZeroSharp.github.com/images/blog/ndepend/ndepend-001.png"></p>

<p>You cannot miss that big red arrow. In fact, it&#8217;s even animated in the actual product. Click on it and choose a Visual Studio solution to analyse. I&#8217;m going to navigate to the DevExpress MainDemo 13.1.</p>

<p>So long as the project has been built at some point, NDepend works out what to analyse (otherwise you&#8217;ll get helpful warnings).</p>

<p><img src="http://ZeroSharp.github.com/images/blog/ndepend/ndepend-003.png"></p>

<p>It is very fast and we get to this help screen.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/ndepend/ndepend-004.png"></p>

<p>Choose the dashboard.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/ndepend/ndepend-005.png"></p>

<p>Now that&#8217;s a lot of information, but it&#8217;s all well presented and easy to navigate. Let&#8217;s focus on the worst: I can see <em>2 Critical Rules Violated</em>. Drill down to find out more:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/ndepend/ndepend-009.png"></p>

<p>It&#8217;s complaining that we have classes with duplicate names in our projects. In the pane on the left we can see what they are: 3 types named <code>MainDemoWinApplication</code>, 3 named <code>Program</code>, <em>etc.</em> And sure enough there are: <em>MainDemo.Win</em>, <em>MainDemo.Win.Mdi</em> and <em>MainDemo.Win.Ribbon</em> all duplicate those class names.</p>

<p>We can also see 2 <code>TaskAnalysis1LayoutUpdater</code> types and a quick search reveals that there&#8217;s one in the web module and another in the win module.</p>

<p>So NDepend has correctly discovered some potential issues. As we XAF fans know, this one is not really a problem, because those modules are never loaded into the same AppDomain, but nevertheless the information is accurate and relevant.</p>

<p>Lets have a brief look at the other screens. The dependency graph:</p>

<p><img src="http://ZeroSharp.github.com/images/blog/ndepend/ndepend-006.png"></p>

<p>With a million options.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/ndepend/ndepend-010.png"></p>

<p>A dependency matrix.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/ndepend/ndepend-007.png"></p>

<p>A metrics view showing class and assembly sizes.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/ndepend/ndepend-008.png"></p>

<p>All with reams of helpful documentation.</p>

<p><img src="http://ZeroSharp.github.com/images/blog/ndepend/ndepend-011.png"></p>

<p>Overall, the tool felt fast, responsive and stable. I&#8217;ve focused on the user interface aspects, but there is so much more. Some things you can do:</p>

<ul>
<li>Create your own analysis rules</li>
<li><a href="http://www.ndepend.com/Doc_CQLinq_Syntax.aspx#Edition">Query your own code with LINQ</a></li>
<li>Run analysis from <a href="http://www.ndepend.com/NDependConsole.aspx">the command line</a></li>
<li>Run from within Visual Studio</li>
<li>Add output to continuous integration (<a href="http://www.ndepend.com/Doc_CI_TeamCity.aspx">TeamCity</a>, <a href="http://www.ndepend.com/Doc_CI_CCNet.aspx">CruiseControl.NET</a>, etc.)</li>
<li>Track <a href="http://www.ndepend.com/Doc_Trend.aspx">trends and progress over time</a></li>
</ul>


<p>NDepend shines at providing a high-level overview of code quality and as such it is a very useful addition to any developer&#8217;s toolkit. There are some scenarios where NDepend would be particularly useful:</p>

<ul>
<li>For a developer joining a mature project.</li>
<li>For a senior developer looking to track progress on a refactoring drive.</li>
<li>For helping evaluate the quality of an open source third party library.</li>
</ul>


<p>In this quick review, I&#8217;m not going deep enough to say anything about whether the DevExpress MainDemo is good code or not - it&#8217;s just a sample project I happen to be quite familiar with. It might be interesting to unleash NDepend on the full DevExpress source code and maybe one day I&#8217;ll get around to writing a future post about that.</p>

<p>With regard to my own projects, I feel I&#8217;m so familiar with them that I ought to be aware of most of the recommendations NDepend is likely to make, but I&#8217;ll give it a spin and see what comes out&#8230;</p>
]]></content>
  </entry>
  
</feed>
