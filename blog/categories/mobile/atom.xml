<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mobile | ZeroSharp]]></title>
  <link href="http://ZeroSharp.github.com/blog/categories/mobile/atom.xml" rel="self"/>
  <link href="http://ZeroSharp.github.com/"/>
  <updated>2014-09-15T09:45:35+01:00</updated>
  <id>http://ZeroSharp.github.com/</id>
  <author>
    <name><![CDATA[Robert Anderson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A C# Developer's Adventures in iOS - Integrating Git and MonoDevelop]]></title>
    <link href="http://ZeroSharp.github.com/a-c-number-developers-adventures-in-ios-integrating-git-and-monodevelop/"/>
    <updated>2013-02-08T14:52:00+00:00</updated>
    <id>http://ZeroSharp.github.com/a-c-number-developers-adventures-in-ios-integrating-git-and-monodevelop</id>
    <content type="html"><![CDATA[<p>This is the second post in a series about iOS development from the perspective of a C# developer.</p>

<p>In the <a href="/a-c-number-developers-adventures-in-ios-getting-started/">previous post in the series</a> we got started with MonoTouch and installed MonoDevelop and XCode. In this post, we'll look at how to set up version control for an existing MonoTouch solution.</p>

<h2>Version Control</h2>

<p>I didn't have enough time <a href="/how-i-went-from-c-number-developer-to-iphone-developer-in-a-weekend/">at the hackathon</a> to learn how to set up version control for MonoDevelop on a Mac. So let's fix that straight away.</p>

<h3>Git</h3>

<p>I'm much more familiar with Mercurial, and while it's possible to get TortoiseHg to run on a Mac, it seems that the Mac world prefers Git. MonoDevelop has Git integrated which I like very much so I'll go with Git for now. I can always switch later.</p>

<h3>Ignore files</h3>

<p>Open a terminal and navigate to the root of your existing source code folder.</p>

<pre><code>$ cd Projects/Babingo # replace with /path/to/your/repo
</code></pre>

<p>You need a .gitignore file to avoid version controlling compiled sources and user settings unnecessarily.</p>

<p>Create a new file .gitignore as follows. You can type <code>nano .gitignore</code> if you don't have a favourite text editor.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>.gitignore </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>OSX specific&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>.DS_Store
</span><span class='line'>&lt;em>.lock
</span><span class='line'>&lt;/em>.swp
</span><span class='line'>*.lock&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>Build folders&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>[Bb]in/
</span><span class='line'>[Oo]bj/&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>User specific&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;em>.userprefs
</span><span class='line'>&lt;/em>.usertasks&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>Mono project files&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;em>~
</span><span class='line'>&lt;/em>.pidb
</span><span class='line'>*.resources
</span><span class='line'>test-results/</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Initial commit</h3>

<p>Now initialise a repository for your existing source code and commit it.</p>

<pre><code>$ git init
$ git add .
$ git commit -m "Initial commit."
</code></pre>

<h3>BitBucket</h3>

<p>Next create a private repository on BitBucket.</p>

<p><img src="/images/blog/adventures-in-ios-bitbucket-001.png"></p>

<p>You will need the address for your repository from the BitBucket page circled in red below.</p>

<p><img src="/images/blog/adventures-in-ios-bitbucket-003.png"></p>

<p>Then, from the terminal, push the code to BitBucket. Replace the Url below with the address of your your own repository.</p>

<pre><code>$ git remote add origin https://shamp00@bitbucket.org/shamp00/babingo.git     
$ git push -u origin --all
</code></pre>

<h3>Integration with MonoDevelop</h3>

<p>Open your solution in MonoDevelop and select the <code>Checkout...</code> option from the <code>Version Control</code> menu.</p>

<p><img src="/images/blog/adventures-in-ios-bitbucket-002.png"></p>

<p>Select <code>Git</code> as the type of repository and put the address to your git repository in the <code>Url</code> field. The rest of the fields are populated automatically. You need to set the <code>Target Directory</code> to the location of your local repository including the trailing slash.</p>

<p>When you click Ok, you will be prompted for your BitBucket credentials.</p>

<p><img class="right" src="/images/blog/adventures-in-ios-bitbucket-004.png" width="379" height="92"></p>

<p>That's it. Now Git is integrated into your MonoDevelop environment. For instance, you can right-click in the editor to view the diff or the log of the current file, push changes, commit messages locally, etc.</p>

<p>Note that instead of BitBucket, it would have been just as straightforward to host the repository on GitHub instead.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A C# Developer's Adventures in iOS - Getting Started]]></title>
    <link href="http://ZeroSharp.github.com/a-c-number-developers-adventures-in-ios-getting-started/"/>
    <updated>2013-01-30T11:18:00+00:00</updated>
    <id>http://ZeroSharp.github.com/a-c-number-developers-adventures-in-ios-getting-started</id>
    <content type="html"><![CDATA[<h2>First steps in iPhone development</h2>

<p>This is the first in a series of posts about developing an iOS application from the perspective of a Windows C# developer.</p>

<h3>Startup Weekend</h3>

<p>On a recent month-long trip to South America, I took part in the <a href="http://buenosaires.startupweekend.org/">Buenos Aires Startup Weekend</a> hackathon and my team came second!](/how-i-went-from-c-number-developer-to-iphone-developer-in-a-weekend). The application we built is a treasure hunt game for tourists which helps them discover Buenos Aires. At the beginning of the weekend I knew nothing about mobile development. It was the first time I developed software using a Mac.</p>

<p>First, let's look at the basic requirements for the environment.</p>

<p><img class="right" src="/images/blog/adventures-in-ios-getting-started-001.png" width="450"></p>

<h3>Xamarin MonoTouch</h3>

<p><a href="http://xamarin.com/monotouch">MonoTouch</a> is the easiest approach for C# developers. It allowed me to write a basic native iPhone app in a weekend with no prior mobile development experience. I'd never used MonoDevelop or XCode either.</p>

<p>MonoTouch is a software development kit for MacOS that cleverly enables you to use C# and the common .NET libraries (via Mono) along with bindings for the <a href="https://developer.apple.com/technologies/ios/cocoa-touch.html">Apple Cocoa Touch</a> framework to create native applications for iPhone, iPad and iPod. A lot of the tools are the same as for Objective-C developers: you use the iPhone Simulator and the XCode Interface Builder.</p>

<p>If you are a C# developer still wondering whether to learn Objective-C, there is <a href="http://stackoverflow.com/a/1634592/1077279">a magnificent StackOverflow answer</a> comparing MonoTouch and Objective-C.</p>

<h3>Costs</h3>

<p>There are some costs associated with becoming a MonoTouch iOS developer.</p>

<p>You need a Mac. I'm using a 15" MacBook Pro. I have it configured for dual boot, but I'm using the MacOS side for this project.</p>

<p>You will need to sign up as an iOS developer with Apple. This costs <strong>$99</strong> per year. More information about <a href="https://developer.apple.com/programs/">Apple developer programs on their site</a>.</p>

<p>You will need Xamarin MonoTouch which currently costs <strong>$399</strong> for a one year single seat license for a single developer. More information on pricing at the <a href="https://store.xamarin.com/">Xamarin store</a>.</p>

<h3>Setting up the environment</h3>

<p>Xamarin have an <a href="http://docs.xamarin.com/ios/Guides/Getting_Started/Installation">excellent installation guide</a> which guides you through installing both XCode and MonoTouch.</p>

<h3>Hello World</h3>

<p>The next step is to create your first iOS application running in the iPhone simulator. Go through the samples in the <a href="http://docs.xamarin.com/ios/guides/getting_started">MonoTouch getting started guide</a>.</p>

<h3>Next up</h3>

<p>Over the next few weeks I'm aiming to finish the app I built for Startup Weekend and I'll be sharing what I learn along the way.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I went from C# Developer to iPhone Developer in a Weekend]]></title>
    <link href="http://ZeroSharp.github.com/how-i-went-from-c-number-developer-to-iphone-developer-in-a-weekend/"/>
    <updated>2013-01-04T10:35:00+00:00</updated>
    <id>http://ZeroSharp.github.com/how-i-went-from-c-number-developer-to-iphone-developer-in-a-weekend</id>
    <content type="html"><![CDATA[<p>Recently I took part in <a href="http://buenosaires.startupweekend.org/">Startup Weekend Buenos Aires</a>. It works just like most hackathons:</p>

<p><a href="http://buenosaires.startupweekend.org/2012/11/12/ganadores-swba2012/"><span class='caption-wrapper right'><img class='caption' src='/images/blog/basw/BABingo-2puesto-SWBA2012.jpg' width='' height='' title='New friends: Caro, Eze, Gus and me'><span class='caption-text'>New friends: Caro, Eze, Gus and me</span></span></a></p>

<ul>
<li>You give a one minute pitch on Friday evening.</li>
<li>Winners put together a team.</li>
<li>You work with your team on Saturday and Sunday to launch a product.</li>
<li>Demo for the judges.</li>
<li>Prizes. Beer. Sleep.</li>
</ul>


<p>On the Friday I spoke no Spanish and had no idea how to write an iPhone app. By Sunday I still spoke no Spanish, but <strong>I'd built my first app and it won second prize!</strong></p>

<p>How did I learn Objective-C in a weekend? I didn't. I wrote it in C#.</p>

<p><span class='pullquote-right' data-pullquote='Monotouch makes mobile development really easy for C# programmers.'>
I downloaded <a href="http://xamarin.com/monotouch">Xamarin MonoTouch</a> onto my <a href="/the-best-pc-laptop-is-a-mac/">MacBook Pro</a> and was following the 'Hello World' tutorial within an hour. The MonoTouch <a href="http://docs.xamarin.com/iOS/Guides">documentation</a> is very clear and the <a href="http://docs2.xamarin.com/ios/samples">samples</a> are very useful. Very soon I had a multiple screen application built, including capturing an image from the camera.</p>

<p>Monotouch makes mobile development really easy for C# programmers. It's also cross-platform so you can re-use big chunks of your code when you write the Android version.</p>

<p>Check out <a href="http://blog.xamarin.com/eight-reasons-c-sharp-is-the-best-language-for-mobile-development/">this recent blog post from the guys at Xamarin</a>.
</span></p>
]]></content>
  </entry>
  
</feed>
