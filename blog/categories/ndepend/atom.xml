<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ndepend | ZeroSharp]]></title>
  <link href="http://ZeroSharp.github.com/blog/categories/ndepend/atom.xml" rel="self"/>
  <link href="http://ZeroSharp.github.com/"/>
  <updated>2014-09-17T10:39:41+01:00</updated>
  <id>http://ZeroSharp.github.com/</id>
  <author>
    <name><![CDATA[Robert Anderson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A review of NDepend 5]]></title>
    <link href="http://ZeroSharp.github.com/a-review-of-ndepend-5/"/>
    <updated>2013-10-02T17:54:00+01:00</updated>
    <id>http://ZeroSharp.github.com/a-review-of-ndepend-5</id>
    <content type="html"><![CDATA[<p>NDepend is a commercial static analysis tool for .NET managed code. It's been around a long time (since 2004!). Version 5 was just released and in this post I'm going to try it out on the DevExpress MainDemo.</p>

<p><span class='pullquote-right' data-pullquote='In version 5, a lot of work has been done to improve the learning curve.'>
In the past I have always thought of NDepend as a complex tool. I was never sure where to start. In version 5, a lot of work has been done to improve the learning curve. The installation process is easy and a wizard very quickly points you in the right direction.</p>

<p>After <a href="http://ndepend.com/NDependDownload.aspx">downloading the v5 trial</a> and running the installation you get to the following screen.
</span></p>

<p><img src="/images/blog/ndepend/ndepend-001.png"></p>

<p>You cannot miss that big red arrow. In fact, it's even animated in the actual product. Click on it and choose a Visual Studio solution to analyse. I'm going to navigate to the DevExpress MainDemo 13.1.</p>

<p>So long as the project has been built at some point, NDepend works out what to analyse (otherwise you'll get helpful warnings).</p>

<p><img src="/images/blog/ndepend/ndepend-003.png"></p>

<p>It is very fast and we get to this help screen.</p>

<p><img src="/images/blog/ndepend/ndepend-004.png"></p>

<p>Choose the dashboard.</p>

<p><img src="/images/blog/ndepend/ndepend-005.png"></p>

<p>Now that's a lot of information, but it's all well presented and easy to navigate. Let's focus on the worst: I can see <em>2 Critical Rules Violated</em>. Drill down to find out more:</p>

<p><img src="/images/blog/ndepend/ndepend-009.png"></p>

<p>It's complaining that we have classes with duplicate names in our projects. In the pane on the left we can see what they are: 3 types named <code>MainDemoWinApplication</code>, 3 named <code>Program</code>, <em>etc.</em> And sure enough there are: <em>MainDemo.Win</em>, <em>MainDemo.Win.Mdi</em> and <em>MainDemo.Win.Ribbon</em> all duplicate those class names.</p>

<p>We can also see 2 <code>TaskAnalysis1LayoutUpdater</code> types and a quick search reveals that there's one in the web module and another in the win module.</p>

<p>So NDepend has correctly discovered some potential issues. As we XAF fans know, this one is not really a problem, because those modules are never loaded into the same AppDomain, but nevertheless the information is accurate and relevant.</p>

<p>Lets have a brief look at the other screens. The dependency graph:</p>

<p><img src="/images/blog/ndepend/ndepend-006.png"></p>

<p>With a million options.</p>

<p><img src="/images/blog/ndepend/ndepend-010.png"></p>

<p>A dependency matrix.</p>

<p><img src="/images/blog/ndepend/ndepend-007.png"></p>

<p>A metrics view showing class and assembly sizes.</p>

<p><img src="/images/blog/ndepend/ndepend-008.png"></p>

<p>All with reams of helpful documentation.</p>

<p><img src="/images/blog/ndepend/ndepend-011.png"></p>

<p>Overall, the tool felt fast, responsive and stable. I've focused on the user interface aspects, but there is so much more. Some things you can do:</p>

<ul>
<li>Create your own analysis rules</li>
<li><a href="http://www.ndepend.com/Doc_CQLinq_Syntax.aspx#Edition">Query your own code with LINQ</a></li>
<li>Run analysis from <a href="http://www.ndepend.com/NDependConsole.aspx">the command line</a></li>
<li>Run from within Visual Studio</li>
<li>Add output to continuous integration (<a href="http://www.ndepend.com/Doc_CI_TeamCity.aspx">TeamCity</a>, <a href="http://www.ndepend.com/Doc_CI_CCNet.aspx">CruiseControl.NET</a>, etc.)</li>
<li>Track <a href="http://www.ndepend.com/Doc_Trend.aspx">trends and progress over time</a></li>
</ul>


<p>NDepend shines at providing a high-level overview of code quality and as such it is a very useful addition to any developer's toolkit. There are some scenarios where NDepend would be particularly useful:</p>

<ul>
<li>For a developer joining a mature project.</li>
<li>For a senior developer looking to track progress on a refactoring drive.</li>
<li>For helping evaluate the quality of an open source third party library.</li>
</ul>


<p>In this quick review, I'm not going deep enough to say anything about whether the DevExpress MainDemo is good code or not - it's just a sample project I happen to be quite familiar with. It might be interesting to unleash NDepend on the full DevExpress source code and maybe one day I'll get around to writing a future post about that.</p>

<p>With regard to my own projects, I feel I'm so familiar with them that I ought to be aware of most of the recommendations NDepend is likely to make, but I'll give it a spin and see what comes out...</p>
]]></content>
  </entry>
  
</feed>
