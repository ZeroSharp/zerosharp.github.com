<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ZeroSharp]]></title>
  <link href="http://blog.zerosharp.com/atom.xml" rel="self"/>
  <link href="http://blog.zerosharp.com/"/>
  <updated>2013-01-09T18:52:34+00:00</updated>
  <id>http://blog.zerosharp.com/</id>
  <author>
    <name><![CDATA[Robert Anderson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to remove the trailing zeros of precision from a C# Decimal]]></title>
    <link href="http://blog.zerosharp.com/how-to-remove-the-trailing-zeros-of-precision-from-a-c-number-decimal/"/>
    <updated>2013-01-09T17:45:00+00:00</updated>
    <id>http://blog.zerosharp.com/how-to-remove-the-trailing-zeros-of-precision-from-a-c-number-decimal</id>
    <content type="html"><![CDATA[<p>You may know that the C# <code>Decimal</code> type remembers any trailing zeros. So for instance:</p>

<pre><code>Console.WriteLine(123.45m);
Console.WriteLine(123.45000m);
Console.WriteLine(123.4500000m);
</code></pre>

<p>results in</p>

<pre><code>123.45
123.45000
123.4500000
</code></pre>

<p>This is because the <code>Decimal</code> type is designed for representing a number including its accuracy.</p>

<p>However, it is quite tricky to find a good way of controlling this accuracy. For instance if I have <code>x = 123.45000</code>, how can I easily remove the trailing zeros so that <code>x.ToString()</code> outputs <code>123.45</code>. For a while it looked like I&#8217;d have to borrow some <a href="http://stackoverflow.com/a/4298787/1077279">Jon Skeet wizardry</a>.</p>

<p>It turns out you can use the following extension method.</p>

<pre><code>public static class DecimalExtensions
{
    public static Decimal Normalize(this Decimal value)
    {
        return value / 1.000000000000000000000000000000000m;
    }
}
</code></pre>

<p>And if you need an exact number of trailing zeros, you can first <code>Normalize()</code> and then multiply.</p>

<pre><code>Console.WriteLine(123.45m.Normalize() * 1.000m); 
</code></pre>

<p>will output the following.</p>

<pre><code>123.45000
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I went from C# Developer to iPhone Developer in a Weekend]]></title>
    <link href="http://blog.zerosharp.com/how-i-went-from-c-number-developer-to-iphone-developer-in-a-weekend/"/>
    <updated>2013-01-04T10:35:00+00:00</updated>
    <id>http://blog.zerosharp.com/how-i-went-from-c-number-developer-to-iphone-developer-in-a-weekend</id>
    <content type="html"><![CDATA[<p>Recently I took part in <a href="http://buenosaires.startupweekend.org/">Startup Weekend Buenos Aires</a>. It works just like most hackathons:</p>

<p><a href="http://buenosaires.startupweekend.org/2012/11/12/ganadores-swba2012/"><span class='caption-wrapper right'><img class='caption' src='http://blog.zerosharp.com/images/blog/basw/BABingo-2puesto-SWBA2012.jpg' width='' height='' alt='New friends: Caro, Eze, Gus and me' title='New friends: Caro, Eze, Gus and me'><span class='caption-text'>New friends: Caro, Eze, Gus and me</span></span></a></p>

<ul>
<li>You give a one minute pitch on Friday evening.</li>
<li>Winners put together a team.</li>
<li>You work with your team on Saturday and Sunday to launch a product.</li>
<li>Demo for the judges.</li>
<li>Prizes. Beer. Sleep.</li>
</ul>


<p>On the Friday I spoke no Spanish and had no idea how to write an iPhone app. By Sunday I still spoke no Spanish, but <strong>I&#8217;d built my first app and it won second prize!</strong></p>

<p>How did I learn Objective-C in a weekend? I didn&#8217;t. I wrote it in C#.</p>

<p><span class='pullquote-right' data-pullquote='Monotouch makes mobile development really easy for C# programmers.'>
I downloaded <a href="http://xamarin.com/monotouch">Xamarin MonoTouch</a> onto my <a href="the-best-pc-laptop-is-a-mac">MacBook Pro</a> and was following the &#8216;Hello World&#8217; tutorial within an hour. The MonoTouch <a href="http://docs.xamarin.com/iOS/Guides">documentation</a> is very clear and the <a href="http://docs2.xamarin.com/ios/samples">samples</a> are very useful. Very soon I had a multiple screen application built, including capturing an image from the camera.</p>

<p>Monotouch makes mobile development really easy for C# programmers. It&#8217;s also cross-platform so you can re-use big chunks of your code when you write the Android version.</p>

<p>Check out <a href="http://blog.xamarin.com/eight-reasons-c-sharp-is-the-best-language-for-mobile-development/">this recent blog post from the guys at Xamarin</a>.
</span></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploy XAF ASP.NET Applications to Amazon Web Services: Part 5]]></title>
    <link href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-5-load-balancing/"/>
    <updated>2012-12-05T11:03:00+00:00</updated>
    <id>http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-5-load-balancing</id>
    <content type="html"><![CDATA[<h2>Part 5: Load balancing</h2>

<p>This is the final post in this 5 part series about deploying XAF to the Amazon cloud. The other parts are:</p>

<ul>
<li><a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-1-putting-the-database-in-the-cloud/">Part 1 - Creating a database in RDS</a></li>
<li><a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-2-publishing-maindemo/">Part 2 - Deploying to ElasticBeanstalk</a></li>
<li><a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-3-troubleshooting-via-remote-desktop/">Part 3 - Troubleshooting</a></li>
<li><a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-4-incremental-deployment/">Part 4 - Incremental Deployment</a></li>
</ul>


<p>This part covers load balancing and autoscaling.</p>

<h3>Load balancing</h3>

<p>In order to enable load balancing with DevExpress XAF applications, you must activate client affinity (sticky sessions) which you can do in the <strong>Load Balancer tab</strong>.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/aws-autoscaling-2.jpg" title="'figure 19'" ></p>

<p>This is because XAF relies http session variables (notably the <code>WebApplication</code>). With sticky sessions enabled, when a user first hits the Elastic Load Balancer, they are assigned a random server but all subsequent requests are routed to the same server instance.</p>

<h2>Autoscaling</h2>

<h3>Adding Capacity (Works)</h3>

<p>Switch to the <strong>Auto Scaling</strong> tab of the Elastic Beanstalk instance.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/aws-autoscaling-1.jpg" title="'figure 19'" ></p>

<p>The options for autoscaling are extensive and there is plenty information on the <a href="http://aws.amazon.com/autoscaling">Amazon website</a>. In the above screenshot we have the Elastic Load Balancer configured so that it will initially deploy 1 server (the Minimum Instance Count), but whenever the NetworkOut measurement of 600,000 bytes over a 5 minute interval, a new server launch is triggered up to a maximum of 4 servers. Adding capacity works fine with XAF applications.</p>

<h3>Removing Capacity (Fails)</h3>

<p>The configuration above also shows that if the NetworkOut drops to below 200,000 bytes over a period of 5 minutes then the number of servers should decrease. <strong>This will NOT work</strong>.</p>

<p>The problem is that the Elastic Load Balancer will terminate the surplus server immediately (the equivalent of a <code>shutdown -s</code>). Any users connected to that server will immediately lose their session and will probably receive an ugly error.</p>

<p>One workaround is to allow scaling out but to disable scaling in. To do this, set the &#8216;Lower Threshold&#8217; to zero.</p>

<h3>Possible Improvements</h3>

<p>There are a couple of potential longer term solutions to the problem of dropped sessions when scaling in.</p>

<p>DevExpress could make the classes they use in the session variables serializable (e.g., <code>WebApplication</code>). When this is the case, the application can be configured to store the session variables to a persistent data store (SQL Server for instance) instead of in the session and then we could configure autoscaling to work correctly. There is <a href="http://www.devexpress.com/Support/Center/Question/Details/Q426045">an item in the Support Center in this regard</a> and <a href="http://www.devexpress.com/Support/Center/p/S36497.aspx">another one here</a>.</p>

<p>Another solution would be if Amazon provided a new option to handle a server termination in a less brutal fashion. That is, stop routing new users to the surplus server but continue to server existing users until their sessions have all terminated. This approach is discussed in <a href="https://forums.aws.amazon.com/thread.jspa?threadID=61278">this AWS forum thread</a>.</p>

<h2>Conclusions</h2>

<p>The load balancing features of AWS work fine with XAF applications, but the benefits of autoscaling are lost because there is currently no effective method of removing capacity without knocking out existing sessions.</p>

<h2>What next</h2>

<p>In a future series, I will demonstrate how to load test XAF applications cheaply and effectively by making use of Amazon Web Services. Stay tuned.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploy XAF ASP.NET Applications to Amazon Web Services: Part 4]]></title>
    <link href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-4-incremental-deployment/"/>
    <updated>2012-11-05T14:16:00+00:00</updated>
    <id>http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-4-incremental-deployment</id>
    <content type="html"><![CDATA[<h2>Part 4: Incremental Deployment</h2>

<p>This is the fourth post in a series about deploying ASP.NET applications to the Amazon cloud. In the first three posts covered deploying the XAF ASP.NET MainDemo to the Amazon cloud (<a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-1-putting-the-database-in-the-cloud/">Part 1</a>, <a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-2-publishing-maindemo/">Part 2</a>, <a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-3-troubleshooting-via-remote-desktop/">Part 3</a>).</p>

<p>When we deployed to the Elastic Beanstalk in <a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-2-publishing-maindemo/">Part 2</a>, we chose <em>not</em> to enable incremental deployment.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-beanstalk-2.jpg" title="'figure 11'" ></p>

<p>I want to explain this decision further.</p>

<p>If you choose not to deploy incrementally your deployment will take longer because the entire web deployment package needs to be uploaded every time you re-publish which takes about 4-5 minutes on my connection. The incremental deployment option creates a git repository in the target environment so that only the modified files are re-deployed. If you are frequently making changes and redploying, you can save considerable time. A re-deployment takes only a few seconds.</p>

<p>However, if you try to deploy from the default MainDemo location with incremental deployment enabled, you will probably get the following error</p>

<pre><code>Commencing deployment for project MainDemo.Web
...building deployment package obj\Release\Package\Archive...
...deployment package created at C:\Users\Public\Documents\DXperience 12.1 Demos\eXpressApp Framework\MainDemo\CS\MainDemo.Web\obj\Release\Package\Archive
...build of project archive completed succesfully
...starting deployment to AWS Elastic Beanstalk environment 'zerosharp-maindemo'
...starting incremental deployment to environment 'zerosharp-maindemo'
Deployment to AWS Elastic Beanstalk failed with exception: Exception caught during execution of add command,
Inner Exception Message: The specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.
...
Deployment to AWS Elastic Beanstalk environment 'zerosharp-maindemo' did not complete successfully
</code></pre>

<p>The problem is with the NGit libraries that the AWS Toolkit uses. Presumably a fix will emerge, but the simplest workaround is to move the application to a shorter path. Then you can enable incremental deployment when you publish:</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-beanstalk-incremental-2.jpg" title="'figure 21'" ></p>

<p>Note that you can toggle incremental deployment whenever you publish, so you&#8217;re not locked in either way.</p>

<h2>Next up</h2>

<p>In the <a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-5-load-balancing/">next post</a> we will enable load balancing (which is easy) and discuss the problems with autoscaling XAF applications (which is not).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploy XAF ASP.NET Applications to Amazon Web Services: Part 3]]></title>
    <link href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-3-troubleshooting-via-remote-desktop/"/>
    <updated>2012-11-02T17:54:00+00:00</updated>
    <id>http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-3-troubleshooting-via-remote-desktop</id>
    <content type="html"><![CDATA[<h1>Part 3: Troubleshooting</h1>

<p>This is the third post in a series about deploying ASP.NET applications to the Amazon cloud.</p>

<p>In <a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-1-putting-the-database-in-the-cloud/">Part 1</a> we created an Amazon RDS instance of SQL Server to act as the database for the deployment.</p>

<p>In <a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-2-publishing-maindemo/">Part 2</a> we published the DevExpress MainDemo.Web to the Amazon Elastic Beanstalk.</p>

<p>In this part we will look at troubleshooting methods and in particular how to connect to an EC2 instance in order to troubleshoot installations.</p>

<h2>The Beanstalk Events tab</h2>

<p>When there is a problem with the deployment, the first place to look is in the Elastic Beanstalk events tab. You will find warnings and error messages which frequently point to the source of any problem.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/aws-events-1.jpg" title="'figure 18'" ></p>

<p>Sometimes, the events window point to a log file which is automatically generated in an S3 bucket. By opening S3 in the AWS Explorer, you can find and download the log file which usually has excellent error information in it, for instance:</p>

<figure class='code'><figcaption><span>An example log file </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2012-11-02T12:37:13.000Z Warning 3:Web Event ASP.NET 4.0.30319.0 - Event code: 3008
</span><span class='line'>    Event message: A configuration error has occurred.
</span><span class='line'>    [...]
</span><span class='line'>
</span><span class='line'>    Application information:
</span><span class='line'>    Application domain: /LM/W3SVC/1/ROOT/MainDemo.Web_deploy-2-129963334311133960
</span><span class='line'>    Trust level: Full
</span><span class='line'>    Application Virtual Path: /MainDemo.Web_deploy
</span><span class='line'>    Application Path: C:\inetpub\wwwroot\MainDemo.Web_deploy\
</span><span class='line'>    Machine name: AMAZONA-C6H7CEI
</span><span class='line'>
</span><span class='line'>    Process information:
</span><span class='line'>    Process ID: 2436
</span><span class='line'>    Process name: w3wp.exe
</span><span class='line'>    Account name: IIS APPPOOL\DefaultAppPool
</span><span class='line'>
</span><span class='line'>    Exception information:
</span><span class='line'>    Exception type: ConfigurationErrorsException
</span><span class='line'>    Exception message: Could not load file or assembly 'DevExpress.ExpressApp.AuditTrail.v12.1, Version=12.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a' or one of its dependencies. The system cannot find the file specified. (C:\inetpub\wwwroot\MainDemo.Web_deploy\web.config line 94)
</span><span class='line'>      at System.Web.Configuration.CompilationSection.LoadAssemblyHelper(String assemblyName, Boolean starDirective)
</span><span class='line'>      at System.Web.Configuration.AssemblyInfo.get_AssemblyInternal()
</span><span class='line'>      at System.Web.Compilation.BuildManager.GetReferencedAssemblies(CompilationSection compConfig)
</span><span class='line'>      at System.Web.Compilation.BuildManager.CallPreStartInitMethods(String preStartInitListPath)
</span><span class='line'>      at System.Web.Compilation.BuildManager.ExecutePreAppStart()
</span><span class='line'>      at System.Web.Hosting.HostingEnvironment.Initialize(ApplicationManager appManager, IApplicationHost appHost, IConfigMapPathFactory configMapPathFactory, HostingEnvironmentParameters hostingParameters, PolicyLevel policyLevel, Exception appDomainCreationException)
</span><span class='line'>    [...]</span></code></pre></td></tr></table></div></figure>


<h2>Connecting via Remote Desktop</h2>

<p>If you&#8217;re still in the dark, you can use Windows Remote Desktop to connect to the EC2 machine to troubleshoot.</p>

<p>In the AWS Explorer, go to <strong>Amazon EC2/Instances</strong>.</p>

<p>There are two ways of connecting. You can <strong>Get Windows Passwords</strong>, but this takes about an hour for the password to be decrypted.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/aws-troubleshooting-1.jpg" title="'figure 19'" ></p>

<p>Alternatively, you can <strong>Open Remote Desktop</strong> and then <strong>Use EC2 keypair to logon</strong>. You should have the <em>.pem</em> private key file associated with the EC2 key pair that was used to launch the instance (it was created when you created your AWS account or when you launched your first EC2 instance). Whenever an EC2 instance is provisioned, it is launched with an EC2 key pair (you selected a keypair to use in the wizard above). You can open the .pem file and cut and paste the key into the remote desktop window.</p>

<p>You will then be logged in as an Administrator on the EC2 Instance running Windows 2008 R2. You can perform whatever operations you see fit - install software, change Control Panel options, restart IIS, <em>etc.</em> The changes will last until you terminate the instance (by deleting the Elastic Beanstalk stack for example).</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/aws-troubleshooting-2.jpg" title="'figure 20'" ></p>

<p>Note that it is easy to create new key pairs if you can&#8217;t find the .pem file, but you cannot change the key pair of a running instance. (You should terminate and launch again with the new key pair). One nice feature of the AWS Toolkit, is that if you create a new key pair within Visual Studio, you can choose to store the private key in the Toolkit.</p>

<h2>Next up</h2>

<p>The <a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-4-incremental-deployment/">next post</a> will cover incremental deployment options.</p>

<ul>
<li><a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-4-incremental-deployment/">Part 4 - Incremental Deployment</a></li>
<li><a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-5-load-balancing/">Part 5 - Load balancing</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploy XAF ASP.NET Applications to Amazon Web Services: Part 2]]></title>
    <link href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-2-publishing-maindemo/"/>
    <updated>2012-10-31T12:52:00+00:00</updated>
    <id>http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-2-publishing-maindemo</id>
    <content type="html"><![CDATA[<h1>Part 2: Publishing MainDemo</h1>

<p>This is the second post in a series about deploying ASP.NET applications to the <a href="http://aws.amazon.com/">Amazon cloud</a>.</p>

<p>In <a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-1-putting-the-database-in-the-cloud/">Part 1</a> we created an Amazon RDS instance of SQL Server to act as the database for the deployment. Make sure this is up and running before continuing.</p>

<p>This part guides you through publishing the <a href="http://www.devexpress.com/Products/NET/Application_Framework/">DevExpress XAF</a> MainDemo application to the Amazon Elastic Beanstalk.</p>

<h2>Amazon Elastic Beanstalk</h2>

<p><span class='pullquote-right' data-pullquote='Amazon Elastic Beanstalk provides automatic capacity provisioning, load balancing, auto-scaling, and application health monitoring.'>
Amazon Elastic Beanstalk provides automatic capacity provisioning, load balancing, auto-scaling, and application health monitoring. <strong>That sounds like a lot of features we don&#8217;t really need</strong> for the MainDemo, so let me explain.</p>

<p>With Amazon Web Services, the choices are endless. An Amazon EC2 instance is a virtual machine running an actual Windows (or other) operating system that you can connect to with Remote Desktop and configure however you want. It might seem that the simplest would be to put everything on a &#8216;single machine&#8217; instance. However, the default &#8216;single machine&#8217; does not have SQL Server Express installed. We could connect to it and install it, but it ends up being a lot of extra steps. There are other Amazon Machine Images (AMIs) that include SQL Server Express, but these don&#8217;t support automatic deployment from Visual Studio.
</span></p>

<p>In fact (and Amazon should advertise this better), the Elastic Beanstalk is designed to make it very simple to deploy applications quickly <strong>even if you have no intention of ever needing more than a single little instance</strong>. It is the recommended starting point for all new deployments regardless of size. Ignore the long list of amazing additional features for now, (but one day you might need them.)</p>

<h2>Prepare the MainDemo for deployment</h2>

<p>First we need to fix a few problems with the MainDemo. (These will cause deployment in problems any environment, not just Amazon Web Services.)</p>

<ul>
<li>remove the reference to <em>stdole</em> in the web.config <em>&lt;assemblies&gt;</em> section</li>
<li>add a reference to the project <em>DevExpress.XtraPrinting.v12.1</em></li>
<li>add a reference to the project <em>DevExpress.XtraNavBar.v12.1</em></li>
<li>add a reference to the project <em>DevExpress.Utils.v12.1.UI</em></li>
<li>set the <em>CopyLocal</em> flag to true for all DevExpress assemblies</li>
</ul>


<p>(Some of these might have been fixed if you are using a newer release of XAF than 12.1.7.)</p>

<p>Also, if there are any errors, we don&#8217;t get much useful feedback unless we turn custom errors off. Go to the web.config and add a tag just before the end of the <em>&lt;system.web&gt;</em> section.</p>

<pre><code>    ...
      &lt;customErrors mode="Off"/&gt;
    &lt;/system.web&gt;
</code></pre>

<p>Make sure you can build without errors.</p>

<h2>Deploy to Elastic Beanstalk</h2>

<p>You might like to switch to <strong>Release</strong> mode since we will be publishing. Right click on the MainDemo.Web project in the Solution Explorer and select <strong>Publish to AWS&#8230;</strong></p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/aws-solution-explorer-1.jpg" title="'figure 9'" ></p>

<p>This opens the AWS publishing wizard. Select the <strong>AWS Elastic Beanstalk</strong> template.  I have also selected to deploy in the <strong>EU West (Ireland)</strong> region. Click <strong>Next</strong>.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-beanstalk-1.jpg" title="'figure 10'" ></p>

<p>Make sure you uncheck the <strong>Deploy application incrementally</strong> checkbox (see the upcoming Part 4 for more information on this option).</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-beanstalk-2.jpg" title="'figure 11'" ></p>

<p>The next few screens are self-explanatory.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-beanstalk-3.jpg" title="'figure 12'" ></p>

<p>(Note the keypair property is referred to in <a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-3-troubleshooting-via-remote-desktop/">Part 3</a> in the section about connecting via Remote Desktop.)</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-beanstalk-4.jpg" title="'figure 13'" ></p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-beanstalk-6.jpg" title="'figure 14'" ></p>

<p>The following screen appears only if we have active RDS instances running (whcih you should if you followed <a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-1-putting-the-database-in-the-cloud/">Part 1</a>). It allows us to add a permission for the application to access the database. This can also be done manually via the <em>Security Groups</em> section in the AWS Explorer.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-beanstalk-7.jpg" title="'figure 15'" ></p>

<p>The last screen summarizes all the choices so far.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-beanstalk-8.jpg" title="'figure 16'" ></p>

<p>After you click <strong>Launch</strong>, you can follow the progress in the Amazon Web Services output window. It will upload the MainDemo web deployment package to a temporary S3 bucket. It will then provision an EC2 instance and install the application to it. It will also provision an Elastic Load Balancer and connect up all the pieces. This will all take a few minutes.</p>

<h2>Navigate to the Deployed MainDemo</h2>

<p>Launch your browser and navigate to the instance web address which will look something like <strong>http://zerosharp-maindemo.elasticbeanstalk.com/</strong>. It should forward you to the login page. Login as Sam. Depending on whether the database needs to be created, this may take a couple of minutes and may even time out. I had to wait a minute and then click Login again before I was in.</p>

<p>When you have finished <strong>don&#8217;t forget to terminate both the Elastic Beanstalk application and the DB Instance</strong> (right click and &#8216;Delete&#8217; from the AWS Explorer) otherwise you will be charged for the time the machines are provisioned. You can always check that everything has terminated properly in the <a href="https://console.aws.amazon.com/">AWS Console</a>.</p>

<h2>Next up</h2>

<p>In the next posts we will look some additional details:</p>

<ul>
<li><a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-3-troubleshooting-via-remote-desktop/">Part 3 - Troubleshooting</a></li>
<li><a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-4-incremental-deployment/">Part 4 - Incremental Deployment</a></li>
<li><a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-5-load-balancing/">Part 5 - Load balancing</a></li>
</ul>


<h4>References</h4>

<ul>
<li>The <a href="https://www.youtube.com/watch?v=z-N0z5K_WFI">Amazon tutorial for the AWS Visual Studio Toolkit</a></li>
<li>Nathanial Woolls has written an excellent similar article on hosting <a href="http://nwoolls.wordpress.com/2012/09/20/hosting-xaf-asp-net-projects-using-azure-web-sites/">XAF ASP.NET applications on Azure</a>.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploy XAF ASP.NET Applications to Amazon Web Services: Part 1]]></title>
    <link href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-1-putting-the-database-in-the-cloud/"/>
    <updated>2012-10-23T12:52:00+01:00</updated>
    <id>http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-1-putting-the-database-in-the-cloud</id>
    <content type="html"><![CDATA[<h1>Part 1: Putting the Database in the Cloud</h1>

<p>This is the first part of a tutorial for installing the DevExpress MainDemo.Web to Amazon Web Services, but the same principles apply to any ASP.NET web application.</p>

<p>This part covers creating an Amazon RDS instance running SQL Server Express and connecting a (locally running) MainDemo to it.</p>

<p>At the time of writing the DevExpress version is 12.1.7.</p>

<h2>Amazon Web Services</h2>

<p>If you have not already done so, you will need to sign up with <a href="http://aws.amazon.com/">Amazon Web Services</a>. There are costs associated with AWS, but the tutorial only uses very small cheap instances which cost as little as 2 cents per hour to run. Also, new customers get a load of hours for free as part of the <a href="http://aws.amazon.com/free/">AWS Free Usage Tier</a>. See the <a href="http://aws.amazon.com/ec2/pricing/">AWS pricing</a> for more information. Don&#8217;t forget to terminate your instances when you have finished.</p>

<h2>AWS Toolkit</h2>

<p>Amazon have made it all easy by providing a Visual Studio add-in.</p>

<p>Install the <a href="http://aws.amazon.com/visualstudio/">AWS Toolkit for Microsoft Visual Studio</a>. If you haven&#8217;t used it before, then when you start a wizard it will ask you for your AWS fcredentials.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/publish-to-aws-1.jpg" title="'figure 1'" ></p>

<p>The <strong>Display Name</strong> is the a name you give to the AWS account you are using. I set mine to <em>zerosharp</em>. This is helpful when you have multiple AWS accounts. The <strong>Access Key</strong> and the <strong>Secret Key</strong> are both available on the <a href="https://aws.amazon.com/security-credentials">security credentials page</a> - you will have to click <strong>Show</strong> in order to display the secret key.
You can leave the account number blank.</p>

<h2>The database</h2>

<p>Now let&#8217;s provision a new SQL Server Express database.</p>

<p>In Visual Studio, open the AWS Explorer (<code>Ctrl+K,A</code> or in the <em>View</em> menu). You probably want to select a region near your physical location. I chose <em>EU West (Ireland)</em>. Right-click on &#8216;Amazon RDS&#8217; and select &#8216;Launch Instance&#8217;.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/aws-explorer-1.jpg" title="&#34;figure 2&#34;" alt="&#34;figure 2&#34;"></p>

<p>At the following screen, select <strong>SQL Server Express</strong>. Note that we could just as easily provision the Standard or Enterprise editions as well as a host of other database options.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-rds-1.jpg" title="&#34;figure 3&#34;" alt="&#34;figure 3&#34;"></p>

<p>Configure the settings for the connection. Choose an instance class of <strong>Micro</strong> which is fine for our needs. Note the <em>Master User Name</em> and the <em>Master User Password</em> will be needed when we modify the MainDemo&#8217;s connection string.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-rds-2.jpg" title="&#34;figure 4&#34;" alt="&#34;figure 4&#34;"></p>

<p>In this screen we configure settings for the port and security. In order to connect from our local MainDemo, you need to add the permission for the your CIDR route which will let you connect to the database from your local machine. It&#8217;s easy to add it to the default group later (via DB Security Groups).</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-rds-3.jpg" title="&#34;figure 5&#34;" alt="&#34;figure 5&#34;"></p>

<p>Set the backup options to &#8216;No backups&#8217;. Nice to have the option though.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-rds-4.jpg" title="&#34;figure 6&#34;" alt="&#34;figure 6&#34;"></p>

<p>Review the options and click &#8216;Launch&#8217;.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/launch-aws-rds-5.jpg" title="&#34;figure 7&#34;" alt="&#34;figure 7&#34;"></p>

<p>The database instance will be available after a few minutes. You have to be patient here - there is not much feedback, just the yellow <em>creating</em> status. You can press &#8216;Refresh&#8217; once in a while, but it&#8217;s likely to take up to 15 minutes. Eventually you should see a green <em>created</em> status.</p>

<h2>Modify the MainDemo connection string</h2>

<p>Open the MainDemo in Visual Studio.  Open the web.config file and set the connection string to point to your Amazon RDS instance.</p>

<p>The &#8216;User ID&#8217; and &#8216;Password&#8217; should be the same as the ones you entered above. The address is available from the Visual Studio Properties window as &#8216;Endpoint&#8217; when you select the DB Instance in the AWS Explorer.</p>

<p><img src="http://blog.zerosharp.com/images/blog/aws/aws-properties-1.jpg" title="&#34;figure 8&#34;" alt="&#34;figure 8&#34;"></p>

<p>My connection string looks like this:</p>

<pre><code>&lt;add name="ConnectionString" connectionString="User ID=zerosharp;Password=password;Pooling=false;Data Source=maindemo.c5uchpz3rigs.eu-west-1.rds.amazonaws.com;Initial Catalog=MainDemo_v12.1"/&gt;    
</code></pre>

<h2>Run the MainDemo locally</h2>

<p>Now run the MainDemo locally. When you get to the login page, login as Sam (no password).  At this point, the MainDemo will connect to the Amazon RDS instance using the connection string we specified above and create the database (which takes at least 30 seconds on my machine). Afterwards the MainDemo will function as normal.</p>

<h2>Next up</h2>

<p>In the <a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-2-publishing-maindemo/">next post</a> I explain how to publish the MainDemo application itself to an EC2 instance in the Amazon cloud.</p>

<ul>
<li><a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-2-publishing-maindemo/">Part 2 - Deploying to ElasticBeanstalk</a></li>
<li><a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-3-troubleshooting-via-remote-desktop/">Part 3 - Troubleshooting</a></li>
<li><a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-4-incremental-deployment/">Part 4 - Incremental Deployment</a></li>
<li><a href="http://blog.zerosharp.com/deploy-xaf-asp-dot-net-applications-to-amazon-web-services-part-5-load-balancing/">Part 5 - Load balancing</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Incompatible character encodings when generating Octopress]]></title>
    <link href="http://blog.zerosharp.com/incompatible-character-encodings-when-generating-octopress/"/>
    <updated>2012-10-15T16:26:00+01:00</updated>
    <id>http://blog.zerosharp.com/incompatible-character-encodings-when-generating-octopress</id>
    <content type="html"><![CDATA[<p>I started getting an encoding error whenever I tried to generate my Octopress blog with <code>rake generate</code>. The error message was:</p>

<pre><code>Liquid error: incompatible character encodings: UTF-8 and IBM437
</code></pre>

<p>I tried to save all my recently modified files with UTF-8 encoding, but I couldn&#8217;t get the error to go away until
I found a solution on <a href="http://chxt6896.github.com/blog/2012/02/13/blog-jekyll-native.html#comment-678936946">this blog in Chinese</a>.</p>

<p>Set two environment variables (via Control Panel/System/Advanced System Settings/Environment Variables) as follows:</p>

<pre><code>LC_ALL = en_US.UTF-8
LANG = en_US.UTF-8
</code></pre>

<p>Now my blog generates without error.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The best PC laptop is a Mac]]></title>
    <link href="http://blog.zerosharp.com/the-best-pc-laptop-is-a-mac/"/>
    <updated>2012-10-09T17:09:00+01:00</updated>
    <id>http://blog.zerosharp.com/the-best-pc-laptop-is-a-mac</id>
    <content type="html"><![CDATA[<h3>A month ago</h3>

<p>I&#8217;ve never liked laptops. The screen seems so small. A powerful laptop is too heavy; a light one doesn&#8217;t cut the mustard.
I can&#8217;t even find the on/off switch.</p>

<p>Then there are those fancy new <strong>Macbook Pro</strong>s with retina displays. They seem light and powerful and the screen looks great. I don&#8217;t know much about Macs, but I&#8217;d like to learn.</p>

<blockquote><p>But I need Microsoft Windows and Visual Studio. I know theoretically I can run a virtual machine or setup a dual boot, but I&#8217;ll bet it&#8217;s all a bit of a hassle and rather clunky&#8230;</p></blockquote>


<h3>Three hours after my Macbook Pro arrived</h3>

<p>Windows 8 is installed and looks absolutely beautiful! The font is small, but the screen is so sharp that it is quite readable. Visual Studio looks great with the font size in the editor Window set to 14 or 15.</p>

<p>The installation was much simpler than most other Windows installations I&#8217;ve done. I followed <a href="http://www.iclarified.com/entry/index.php?enid=20961">this tutorial on iClarified</a> to set up a dual boot. You use a tool called the Bootcamp Advisor which is already installed on your Mac to create an bootable USB for installing Windows. Since all Macs are the same, the Bootcamp Advisor sets up all the drivers correctly for you.</p>

<h3>Three weeks later</h3>

<blockquote><p>This is by far the most pleasant laptop I&#8217;ve ever used for development.</p></blockquote>


<p>The screen is wonderful - the machine seems very fast and it is no weight to carry around.</p>

<h3>A tiny little gripe</h3>

<p>There is a little annoyance with the Bootcamp Control Panel which won&#8217;t start properly, but Thomas Jespersen found a <a href="http://apple.stackexchange.com/a/59132/30710">workaround</a>, <a href="https://gist.github.com/3859956">which I&#8217;ve put in a batch file</a>. You need this to make the F1-12 keys work as they would in Windows.</p>

<h3>Some help with the Mac keyboard and trackpad</h3>

<p>I&#8217;m very picky about keyboards and I need to be able to find all my Visual Studio shortcuts in the same places. All in all I find the keyboard fine to work with.</p>

<p>The <code>delete</code> key works like a PC <code>backspace</code> so you have to do <code>fn+delete</code> to delete forwards. Here&#8217;s a list of other shortcuts:</p>

<table>
<thead>
<tr>
<th align="left">PC (running Windows)       </th>
<th align="left"> &nbsp;Macbook (running Windows)</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left"><code>Windows</code> key              </td>
<td align="left"> &nbsp;<code>command</code></td>
</tr>
<tr>
<td align="left"><code>Del</code>                      </td>
<td align="left"> &nbsp;<code>fn+delete</code> </td>
</tr>
<tr>
<td align="left"><code>Ins</code>                      </td>
<td align="left"> &nbsp;<code>fn+return</code></td>
</tr>
<tr>
<td align="left"><code>Home</code>                     </td>
<td align="left"> &nbsp;<code>fn+left</code></td>
</tr>
<tr>
<td align="left"><code>End</code>                      </td>
<td align="left"> &nbsp;<code>fn+right</code></td>
</tr>
<tr>
<td align="left"><code>PgUp</code>                     </td>
<td align="left"> &nbsp;<code>fn+up</code></td>
</tr>
<tr>
<td align="left"><code>PgDn</code>                     </td>
<td align="left"> &nbsp;<code>fn+down</code></td>
</tr>
<tr>
<td align="left"><code>Ctrl+Home</code>                </td>
<td align="left"> &nbsp;<code>fn+control+left</code></td>
</tr>
<tr>
<td align="left"><code>Ctrl+End</code>                 </td>
<td align="left"> &nbsp;<code>fn+control+right</code></td>
</tr>
</tbody>
</table>


<p>There are some keys which you will still not find, for instance, <code>NumLock</code>, <code>PrtScn</code>, <code>Break</code>.</p>

<p>If I need these, I use the On-Screen keyboard (type &#8216;osk&#8217; into the search bar). If you cannot see the <code>NumLock</code>, the options allow you to show the numeric keypad. Alternatively, you could always plug in a USB keyboard.</p>

<p>The trackpad works great including the two-finger click for right-click and two-finger swipe for scroll.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A look at the DevExpress MainDemo with Google Page Speed]]></title>
    <link href="http://blog.zerosharp.com/a-look-at-the-devexpress-maindemo-with-google-page-speed/"/>
    <updated>2012-09-12T17:22:00+01:00</updated>
    <id>http://blog.zerosharp.com/a-look-at-the-devexpress-maindemo-with-google-page-speed</id>
    <content type="html"><![CDATA[<p>In this post I&#8217;ll demonstrate how to use the <a href="https://developers.google.com/speed/pagespeed/">Google Page Speed</a> tools to analyse the performance of the DevExpress XAF MainDemo.</p>

<p>The easiest way to run Google Page Speed is as a Chrome or Firefox plugin. Both are available <a href="https://developers.google.com/speed/pagespeed/insights_extensions">here</a>. I use Chrome.</p>

<p>Now open the DevExpress MainDemo from Visual Studio. By default it is installed to:</p>

<pre><code>C:\Users\Public\Documents\DXperience 12.1 Demos\eXpressApp Framework\MainDemo\CS\MainDemo.sln
</code></pre>

<p>Set the MainDemo.Web as the startup project and change the connection string in web.config if necessary. Launch the application with Chrome and login as &#8216;Sam&#8217; (password is blank). Then press <code>F12</code> to bring up the developer tools. The last tab is the Page Speed Analysis and your browser should look like this:</p>

<p><img src="http://blog.zerosharp.com/images/blog/google-page-speed-001.png"></p>

<p>Now click <code>Start Analysis</code> button. After a few seconds you should get something like the following results.</p>

<h4>Results against the debug webserver</h4>

<p><img src="http://blog.zerosharp.com/images/blog/google-page-speed-002.png"></p>

<p>It&#8217;s as easy as that. We now have a list of suggested improvements. The same report can be generated for any page you visit with your browser.</p>

<p>I get an overall score of 72 out of 100. First thing to note is that the only &#8216;high priority&#8217; recommendation is to &#8216;enable keep-alive&#8217; which I suspect will not be necessary when running in IIS instead of the debug webserver.</p>

<h4>Switch to use IIS</h4>

<p>Actually to get the main demo to run in IIS is not altogether simple because of the security permissions required for logging in and creating or updating the schema. If you get an error message after login:</p>

<pre><code>Login failed for user 'IIS APPPOOL\DefaultAppPool
</code></pre>

<p>you will need to add the IIS application pool identity to the SQL Server security.</p>

<ul>
<li>Launch SQL Server management studio and connect to the database.</li>
<li>In the <code>Security\Logins</code> right click and select <code>New Login...</code>.</li>
<li>Type in <code>IIS APPPOOL\DefaultAppPool</code> (you won&#8217;t find it by searching) or <code>IIS APPPOOL\ASP.NET v4.0</code> depending on the security context of the application pool you are using.</li>
<li>Select <code>Server Roles</code> and check <code>public</code> and <code>sysadmin</code> to allow the MainDemo to create the database.</li>
</ul>


<p>(All of this is assuming you are using a non-public instance of SQL Server for development.)</p>

<h4>Results against IIS</h4>

<p>The results are much better: an overall score of 93.</p>

<p><img src="http://blog.zerosharp.com/images/blog/google-page-speed-003.png"></p>

<h4>Other points of interest</h4>

<p>Let&#8217;s experiment by turning off compression in the webconfig.</p>

<pre><code>&lt;compression 
  enableHtmlCompression="false" 
  enableCallbackCompression="false" 
  enableResourceCompression="false" 
  enableResourceMerging="false" /&gt;
</code></pre>

<p>The overall score drops to 62.</p>

<p><img class="right" src="http://blog.zerosharp.com/images/blog/google-page-speed-004.png"></p>

<p>You can alternatively use IIS&#8217;s dynamic compression by setting <code>enableResourceMerging="true"</code> and the others false and adding a <code>urlCompression</code> setting as follows.</p>

<pre><code>&lt;system.webServer&gt;
  &lt;urlCompression doDynamicCompression="true" /&gt;
  ...
&lt;/system.webServer&gt; 
</code></pre>

<p>(Note that you may need to install the dynamic compression module via <strong>Control Panel/Programs/Turn Windows Features On or Off</strong>.)</p>

<p>Then the analysis is back up to 93. The advantage of IIS dynamic compression in IIS 7 is that it turns itself off automatically when the CPU load is high. See <a href="http://www.codeproject.com/Articles/242133/Making-the-most-out-of-IIS-compression-Part-1-conf">Matt Perdeck&#8217;s series of articles about IIS Compression</a> for more information.</p>

<p>One mysterious point: if you navigate to the <a href="http://demos.devexpress.com/XAF/MainDemo/default.aspx">online version of the MainDemo</a> and run the analysis there you will notice that compression resource merging must be turned off for some reason and the overall score is only 75. Perhaps someone from DevExpress can explain&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XpoBatch source code available]]></title>
    <link href="http://blog.zerosharp.com/xpobatch-source-code-available/"/>
    <updated>2012-07-25T16:24:00+01:00</updated>
    <id>http://blog.zerosharp.com/xpobatch-source-code-available</id>
    <content type="html"><![CDATA[<p>The source code for the fast batch operations with DevExpress XPO <a href="https://github.com/ZeroSharp/XpoBatch">is now available on on GitHub</a>.</p>

<p>It includes unit tests that can be run against SQL Server or in memory. It runs against DevExpress 12.1.7, but it will work against 11.2 (and possibly earlier versions) with a couple of minor modifications which are documented in the code.</p>

<h4>References</h4>

<ul>
<li><a href="http://blog.zerosharp.com/fast-batch-deletions-with-devexpress-xpo/">Fast batch deletions</a></li>
<li><a href="http://blog.zerosharp.com/fast-batch-modifications-with-devexpress-xpo/">Fast batch modifications</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fast batch modifications with DevExpress XPO]]></title>
    <link href="http://blog.zerosharp.com/fast-batch-modifications-with-devexpress-xpo/"/>
    <updated>2012-07-24T14:02:00+01:00</updated>
    <id>http://blog.zerosharp.com/fast-batch-modifications-with-devexpress-xpo</id>
    <content type="html"><![CDATA[<p>Last week I wrote about <a href="http://blog.zerosharp.com/fast-batch-deletions-with-devexpress-xpo/">fast batch deletions</a>. In this post I&#8217;ll show how to do the same for modifications.</p>

<p>Let&#8217;s assume we want to replace the &#8216;State&#8217; property with &#8216;CA&#8217; and CostCenter with 123 for all records where the &#8216;City&#8217; is &#8216;San Francisco&#8217;.  The recommended DevExpress approach would be something like the following:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">using</span> <span class="p">(</span><span class="n">UnitOfWork</span> <span class="n">uow</span> <span class="p">=</span> <span class="k">new</span> <span class="n">UnitOfWork</span><span class="p">())</span>
</span><span class='line'><span class="p">{</span>  
</span><span class='line'>  <span class="kt">var</span> <span class="n">xpCollection</span> <span class="p">=</span> <span class="k">new</span> <span class="n">XPCollection</span><span class="p">&lt;</span><span class="n">MyObject</span><span class="p">&gt;(</span><span class="n">uow</span><span class="p">,</span> <span class="n">CriteriaOperator</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="s">&quot;City == &#39;San Francisco&#39;&quot;</span><span class="p">));</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="n">MyObject</span> <span class="n">myObject</span> <span class="k">in</span> <span class="n">xpCollection</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">myObject</span><span class="p">.</span><span class="n">State</span> <span class="p">=</span> <span class="s">&quot;CA&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="n">myObject</span><span class="p">.</span><span class="n">CostCenter</span> <span class="p">=</span> <span class="m">123</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">uow</span><span class="p">.</span><span class="n">CommitChanges</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The problem with the above code is that every record must be loaded and then an individual <code>UPDATE</code> command is generated for each modification.  This is necessary for the business logic to be applied correctly (such as the code in methods such as <code>OnSaving()</code>). It is also necessary to handle record locking.</p>

<p>If you know that your objects do not require any of this processing, you can use use direct SQL <a href="http://documentation.devexpress.com/#XPO/CustomDocument8914">as described in the XPO documentation</a>. This however requires knowledge of the underlying database table and is not very versatile, (although the <code>DevExpress.Data.Filtering.CriteriaToWhereClauseHelper()</code> can help if you choose this route).</p>

<p>However, there is a method similar to the one described in the previous post which is equivalent to the direct SQL approach, but is much easier to use. The approach makes use of an extension method on the <code>Session</code> class.</p>

<h4>Example</h4>

<p>Since the extension method is somewhat more complicated than for the <code>Delete</code> case, I will start by showing an example of use before drilling into the supporting code.</p>

<p>The above example would now look like this:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">using</span> <span class="p">(</span><span class="n">UnitOfWork</span> <span class="n">uow</span> <span class="p">=</span> <span class="k">new</span> <span class="n">UnitOfWork</span><span class="p">())</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">uow</span><span class="p">.</span><span class="n">Update</span><span class="p">&lt;</span><span class="n">MyObject</span><span class="p">&gt;(</span>
</span><span class='line'>        <span class="p">()</span> <span class="p">=&gt;</span> <span class="k">new</span> <span class="n">MyObject</span><span class="p">(</span><span class="n">uow</span><span class="p">)</span>
</span><span class='line'>                  <span class="p">{</span>
</span><span class='line'>                     <span class="n">State</span> <span class="p">=</span> <span class="s">&quot;CA&quot;</span><span class="p">,</span>
</span><span class='line'>                     <span class="n">CostCenter</span> <span class="p">=</span> <span class="m">123</span>
</span><span class='line'>                  <span class="p">},</span>
</span><span class='line'>        <span class="n">CriteriaOperator</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="s">&quot;City == &#39;San Francisco&#39;&quot;</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The Update<T> method takes an <code>Expression&lt;Func&lt;T&gt;&gt;</code> as the first parameter which allows us to pass in an anonymous type which serves as a template for the modification. This way we get strong typing for the property values.</p>

<h4>The extensions method</h4>

<p>Now for the guts of it:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">PropertyValueStore</span> <span class="p">:</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">KeyValuePair</span><span class="p">&lt;</span><span class="n">XPMemberInfo</span><span class="p">,</span> <span class="n">Object</span><span class="p">&gt;&gt;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">static</span> <span class="k">class</span> <span class="nc">SessionExtensions</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="n">PropertyValueStore</span> <span class="nf">CreatePropertyValueStore</span><span class="p">(</span><span class="n">XPClassInfo</span> <span class="n">classInfo</span><span class="p">,</span> <span class="n">MemberInitExpression</span> <span class="n">memberInitExpression</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">PropertyValueStore</span> <span class="n">propertyValueStore</span> <span class="p">=</span> <span class="k">new</span> <span class="n">PropertyValueStore</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">/// Parse each expression binding within the anonymous class.  </span>
</span><span class='line'>        <span class="c1">/// Each binding represents a property assignment within the IXPObject.</span>
</span><span class='line'>        <span class="c1">/// Add a KeyValuePair for the corresponding MemberInfo and (invoked) value.</span>
</span><span class='line'>        <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">binding</span> <span class="k">in</span> <span class="n">memberInitExpression</span><span class="p">.</span><span class="n">Bindings</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">var</span> <span class="n">assignment</span> <span class="p">=</span> <span class="n">binding</span> <span class="k">as</span> <span class="n">MemberAssignment</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">binding</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nf">NotImplementedException</span><span class="p">(</span><span class="s">&quot;All bindings inside the MemberInitExpression are expected to be of type MemberAssignment.&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Get the memberInfo corresponding to the property name.</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">memberName</span> <span class="p">=</span> <span class="n">binding</span><span class="p">.</span><span class="n">Member</span><span class="p">.</span><span class="n">Name</span><span class="p">;</span>
</span><span class='line'>            <span class="n">XPMemberInfo</span> <span class="n">memberInfo</span> <span class="p">=</span> <span class="n">classInfo</span><span class="p">.</span><span class="n">GetMember</span><span class="p">(</span><span class="n">memberName</span><span class="p">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">memberInfo</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentOutOfRangeException</span><span class="p">(</span><span class="n">memberName</span><span class="p">,</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;The member {0} of the {1} class could not be found.&quot;</span><span class="p">,</span> <span class="n">memberName</span><span class="p">,</span> <span class="n">classInfo</span><span class="p">.</span><span class="n">FullName</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">memberInfo</span><span class="p">.</span><span class="n">IsPersistent</span><span class="p">)</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentException</span><span class="p">(</span><span class="n">memberName</span><span class="p">,</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;The member {0} of the {1} class is not persistent.&quot;</span><span class="p">,</span> <span class="n">memberName</span><span class="p">,</span> <span class="n">classInfo</span><span class="p">.</span><span class="n">FullName</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Compile and invoke the assignment expression to obtain the contant value to add as a parameter.</span>
</span><span class='line'>            <span class="kt">var</span> <span class="n">constant</span> <span class="p">=</span> <span class="n">Expression</span><span class="p">.</span><span class="n">Lambda</span><span class="p">(</span><span class="n">assignment</span><span class="p">.</span><span class="n">Expression</span><span class="p">,</span> <span class="k">null</span><span class="p">).</span><span class="n">Compile</span><span class="p">().</span><span class="n">DynamicInvoke</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Add the </span>
</span><span class='line'>            <span class="n">propertyValueStore</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">KeyValuePair</span><span class="p">&lt;</span><span class="n">XPMemberInfo</span><span class="p">,</span> <span class="n">Object</span><span class="p">&gt;(</span><span class="n">memberInfo</span><span class="p">,</span> <span class="n">constant</span><span class="p">));</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">propertyValueStore</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="n">ModificationResult</span> <span class="n">Update</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="k">this</span> <span class="n">Session</span> <span class="n">session</span><span class="p">,</span> <span class="n">Expression</span><span class="p">&lt;</span><span class="n">Func</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;&gt;</span> <span class="n">evaluator</span><span class="p">,</span> <span class="n">CriteriaOperator</span> <span class="n">criteria</span><span class="p">)</span> <span class="k">where</span> <span class="n">T</span> <span class="p">:</span> <span class="n">IXPObject</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">ReferenceEquals</span><span class="p">(</span><span class="n">criteria</span><span class="p">,</span> <span class="k">null</span><span class="p">))</span>
</span><span class='line'>            <span class="n">criteria</span> <span class="p">=</span> <span class="n">CriteriaOperator</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="s">&quot;True&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">XPClassInfo</span> <span class="n">classInfo</span> <span class="p">=</span> <span class="n">session</span><span class="p">.</span><span class="n">GetClassInfo</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">T</span><span class="p">));</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">batchWideData</span> <span class="p">=</span> <span class="k">new</span> <span class="n">BatchWideDataHolder4Modification</span><span class="p">(</span><span class="n">session</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">recordsAffected</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">session</span><span class="p">.</span><span class="n">Evaluate</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">CriteriaOperator</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="s">&quot;Count()&quot;</span><span class="p">),</span> <span class="n">criteria</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">/// Parse the Expression.</span>
</span><span class='line'>        <span class="c1">/// Expect to find a single MemberInitExpression.</span>
</span><span class='line'>        <span class="n">PropertyValueStore</span> <span class="n">propertyValueStore</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">memberInitCount</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">evaluator</span><span class="p">.</span><span class="n">Visit</span><span class="p">&lt;</span><span class="n">MemberInitExpression</span><span class="p">&gt;(</span><span class="n">expression</span> <span class="p">=&gt;</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">memberInitCount</span> <span class="p">&gt;</span> <span class="m">1</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="k">throw</span> <span class="k">new</span> <span class="nf">NotImplementedException</span><span class="p">(</span><span class="s">&quot;Only a single MemberInitExpression is allowed for the evaluator parameter.&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="n">memberInitCount</span><span class="p">++;</span>
</span><span class='line'>                <span class="n">propertyValueStore</span> <span class="p">=</span> <span class="n">CreatePropertyValueStore</span><span class="p">(</span><span class="n">classInfo</span><span class="p">,</span> <span class="n">expression</span><span class="p">);</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">expression</span><span class="p">;</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">MemberInfoCollection</span> <span class="n">properties</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MemberInfoCollection</span><span class="p">(</span><span class="n">classInfo</span><span class="p">,</span> <span class="n">propertyValueStore</span><span class="p">.</span><span class="n">Select</span><span class="p">(</span><span class="n">x</span> <span class="p">=&gt;</span> <span class="n">x</span><span class="p">.</span><span class="n">Key</span><span class="p">).</span><span class="n">ToArray</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">List</span><span class="p">&lt;</span><span class="n">ModificationStatement</span><span class="p">&gt;</span> <span class="n">collection</span> <span class="p">=</span> <span class="n">UpdateQueryGenerator</span><span class="p">.</span><span class="n">GenerateUpdate</span><span class="p">(</span><span class="n">classInfo</span><span class="p">,</span> <span class="n">properties</span><span class="p">,</span> <span class="n">criteria</span><span class="p">,</span> <span class="n">batchWideData</span><span class="p">);</span>
</span><span class='line'>        <span class="k">foreach</span> <span class="p">(</span><span class="n">UpdateStatement</span> <span class="n">updateStatement</span> <span class="k">in</span> <span class="n">collection</span><span class="p">.</span><span class="n">OfType</span><span class="p">&lt;</span><span class="n">UpdateStatement</span><span class="p">&gt;())</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">updateStatement</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">Object</span> <span class="k">value</span> <span class="p">=</span> <span class="n">propertyValueStore</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Value</span><span class="p">;</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="k">value</span> <span class="k">is</span> <span class="n">IXPObject</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">updateStatement</span><span class="p">.</span><span class="n">Parameters</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Value</span> <span class="p">=</span> <span class="p">((</span><span class="n">IXPObject</span><span class="p">)(</span><span class="k">value</span><span class="p">)).</span><span class="n">ClassInfo</span><span class="p">.</span><span class="n">GetId</span><span class="p">(</span><span class="k">value</span><span class="p">);</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'>                    <span class="n">updateStatement</span><span class="p">.</span><span class="n">Parameters</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Value</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">updateStatement</span><span class="p">.</span><span class="n">RecordsAffected</span> <span class="p">=</span> <span class="n">recordsAffected</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">session</span><span class="p">.</span><span class="n">DataLayer</span><span class="p">.</span><span class="n">ModifyData</span><span class="p">(</span><span class="n">collection</span><span class="p">.</span><span class="n">ToArray</span><span class="p">&lt;</span><span class="n">ModificationStatement</span><span class="p">&gt;());</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Limitations</h4>

<p>There is currently no way to refer to another field within the assignment expressions - you can only set the value to an <code>OperandValue</code>.  So you cannot do</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'>   <span class="n">uow</span><span class="p">.</span><span class="n">Update</span><span class="p">&lt;</span><span class="n">MyObject</span><span class="p">&gt;(</span>
</span><span class='line'>        <span class="n">o</span> <span class="p">=&gt;</span> <span class="k">new</span> <span class="n">MyObject</span><span class="p">(</span><span class="n">uow</span><span class="p">)</span>
</span><span class='line'>                  <span class="p">{</span>
</span><span class='line'>                     <span class="c1">// Does not Compile !!!</span>
</span><span class='line'>                     <span class="n">Property1</span> <span class="p">=</span> <span class="n">o</span><span class="p">.</span><span class="n">Property2</span><span class="p">,</span>
</span><span class='line'>                     <span class="c1">// Neither does this !!!</span>
</span><span class='line'>                     <span class="n">Property3</span> <span class="p">=</span> <span class="n">o</span><span class="p">.</span><span class="n">Property3</span> <span class="p">+</span> <span class="m">1</span>
</span><span class='line'>                  <span class="p">},</span>
</span><span class='line'>        <span class="k">null</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>In order to fix this, the <code>evaluator</code> has to be of type <code>Expression&lt;Func&lt;T, T&gt;&gt;</code> instead of <code>Expression&lt;Func&lt;T&gt;&gt;</code>, and then you can use expression trees to get an assignment expression. But then there is no way to pass it to a DevExpress <code>UpdateStatement.Parameter</code> as an <code>OperandValue</code>.</p>

<p><strong>Update:</strong> The <a href="https://github.com/ZeroSharp/XpoBatch">source code is now available on GitHub</a>.</p>

<h4>References</h4>

<p>The code was inspired by <a href="http://www.aneyfamily.com/terryandann/post/2008/04/Batch-Updates-and-Deletes-with-LINQ-to-SQL.aspx">an old blog post Terry Aney</a> in which he describes a similar approach for LINQ to SQL.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fast batch deletions with DevExpress XPO]]></title>
    <link href="http://blog.zerosharp.com/fast-batch-deletions-with-devexpress-xpo/"/>
    <updated>2012-07-12T17:00:00+01:00</updated>
    <id>http://blog.zerosharp.com/fast-batch-deletions-with-devexpress-xpo</id>
    <content type="html"><![CDATA[<p>When deleting a collection of objects, DevExpress recommends using <a href="http://documentation.devexpress.com/#XPO/DevExpressXpoSession_Deletetopic116"><code>Session.Delete(ICollection objects)</code></a>. This has the same effect as calling the <code>Delete()</code> method for every object in the collection so that the business logic is applied correctly. The business logic in this context refers to code such as that in the <code>OnDeleting()</code>, <code>OnDeleted()</code> methods, but it also includes the clearing of references to the object by other objects. This approach is slow, but ensures the integrity of the data.</p>

<p>If you know that your objects do not require any of this processing, you can use use direct SQL <a href="http://documentation.devexpress.com/#XPO/CustomDocument8914">as described in the XPO documentation</a>. This however requires knowledge of the underlying database table and is not very versatile, (although the <code>DevExpress.Data.Filtering.CriteriaToWhereClauseHelper()</code> can help if you choose this route).</p>

<p>An alternative is to use the extension method below:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">static</span> <span class="k">class</span> <span class="nc">SessionExtensions</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="n">ModificationResult</span> <span class="n">Delete</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="k">this</span> <span class="n">Session</span> <span class="n">session</span><span class="p">,</span> <span class="n">CriteriaOperator</span> <span class="n">criteria</span> <span class="p">=</span> <span class="k">null</span><span class="p">)</span> <span class="k">where</span> <span class="n">T</span> <span class="p">:</span> <span class="n">IXPObject</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">ReferenceEquals</span><span class="p">(</span><span class="n">criteria</span><span class="p">,</span> <span class="k">null</span><span class="p">))</span>
</span><span class='line'>            <span class="n">criteria</span> <span class="p">=</span> <span class="n">CriteriaOperator</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="s">&quot;True&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">XPClassInfo</span> <span class="n">classInfo</span> <span class="p">=</span> <span class="n">session</span><span class="p">.</span><span class="n">GetClassInfo</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">T</span><span class="p">));</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">batchWideData</span> <span class="p">=</span> <span class="k">new</span> <span class="n">BatchWideDataHolder4Modification</span><span class="p">(</span><span class="n">session</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">recordsAffected</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">session</span><span class="p">.</span><span class="n">Evaluate</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">CriteriaOperator</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="s">&quot;Count()&quot;</span><span class="p">),</span> <span class="n">criteria</span><span class="p">);</span>
</span><span class='line'>        <span class="n">List</span><span class="p">&lt;</span><span class="n">ModificationStatement</span><span class="p">&gt;</span> <span class="n">collection</span> <span class="p">=</span> <span class="n">DeleteQueryGenerator</span><span class="p">.</span><span class="n">GenerateDelete</span><span class="p">(</span><span class="n">classInfo</span><span class="p">,</span> <span class="n">criteria</span><span class="p">,</span> <span class="n">batchWideData</span><span class="p">);</span>
</span><span class='line'>        <span class="k">foreach</span> <span class="p">(</span><span class="n">ModificationStatement</span> <span class="n">item</span> <span class="k">in</span> <span class="n">collection</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">item</span><span class="p">.</span><span class="n">RecordsAffected</span> <span class="p">=</span> <span class="n">recordsAffected</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ModificationStatement</span><span class="p">[]</span> <span class="n">collectionToArray</span> <span class="p">=</span> <span class="n">collection</span><span class="p">.</span><span class="n">ToArray</span><span class="p">&lt;</span><span class="n">ModificationStatement</span><span class="p">&gt;();</span>
</span><span class='line'>        <span class="n">ModificationResult</span> <span class="n">result</span> <span class="p">=</span> <span class="n">session</span><span class="p">.</span><span class="n">DataLayer</span><span class="p">.</span><span class="n">ModifyData</span><span class="p">(</span><span class="n">collectionToArray</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here is an example of how to call the method:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">using</span> <span class="p">(</span><span class="n">UnitOfWork</span> <span class="n">uow</span> <span class="p">=</span> <span class="k">new</span> <span class="n">UnitOfWork</span><span class="p">())</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">uow</span><span class="p">.</span><span class="n">Delete</span><span class="p">&lt;</span><span class="n">MyObject</span><span class="p">&gt;(</span><span class="n">CriteriaOperator</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="s">&quot;City != &#39;Chicago&#39;&quot;</span><span class="p">));</span>
</span><span class='line'>    <span class="n">uow</span><span class="p">.</span><span class="n">CommitChanges</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This achieves the same as result and similar performance to direct SQL, but with cleaner syntax and support for criteria.  Also, since it uses a <code>ModificationStatement[]</code>, it works with a remote <code>IDataStore</code>.</p>

<p>See the next post for <a href="http://blog.zerosharp.com/fast-batch-modifications-with-devexpress-xpo/">a similar approach for fast batch modifications</a>.</p>

<p><strong>Update:</strong> The <a href="https://github.com/ZeroSharp/XpoBatch">source code is now available on GitHub</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trying out a new keyboard with no labels on the keys]]></title>
    <link href="http://blog.zerosharp.com/trying-out-a-new-keyboard-with-no-labels-on-the-keys/"/>
    <updated>2012-07-02T09:35:00+01:00</updated>
    <id>http://blog.zerosharp.com/trying-out-a-new-keyboard-with-no-labels-on-the-keys</id>
    <content type="html"><![CDATA[<p> <a href="http://www.daskeyboard.com/model-s-ultimate/"><img class="right" src="http://blog.zerosharp.com/images/blog/trying-out-a-new-keyboard-001.jpg" title="Das Keyboard Model S Ultimate" ></a></p>

<p> My new <del>keyboarf</del> keyboard <a href="http://www.daskeyboard.com/model-s-ultimate/">has no labels on the keys</a>!</p>

<p> On a normal keyboard, I can type at about 60 wpm, but I only use three or four fingers and I have to periodically glance down at the keyboard.  I hope my new keyboard forces me to learn to touch type properly.  Various coders have written on the subject - Jeff Atwood says <a href="http://www.codinghorror.com/blog/2008/11/we-are-typists-first-programmers-second.html">we are typists first</a>; Phil Haack <a href="http://haacked.com/archive/2007/06/05/dvorak-keyboard-layout-of-champions.aspx">opts for Dvorak</a>.</p>

<p> The <a href="http://www.daskeyboard.com/model-s-ultimate/"><em>Das Keyboard</em></a> is beautiful.  It&#8217;s certainly heavier and noisier than other computer keyboards but with such nicely-weighted quality keys that it is a pleasure to type on.  At the moment I am struggling, especially when it comes to brackets () [] {} and punctuation symbols.  Looking down is of no use whatsoever.  Having your hands positioned correctly (with forefingers on the tiny bumps on the <strong>f</strong> and <strong>j</strong> keys) helps a lot, although my ring finger and pinkie are not used to any action whatsoever.</p>

<p> I&#8217;ve been trying <a href="http://play.typeracer.com/">some</a> <a href="http://www.freetypinggame.net/default.asp">typing</a> <a href="http://playwithyourmind.com/online-brain-games/typing-games/typo-ii/">games</a> too.  Suggestions welcome.  My typing speed is currently about 20 wpm with the new keyboard, so I have some catching up to do&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An afternoon with two Fields Medallists]]></title>
    <link href="http://blog.zerosharp.com/an-afternoon-with-two-fields-medallists/"/>
    <updated>2012-06-05T08:30:00+01:00</updated>
    <id>http://blog.zerosharp.com/an-afternoon-with-two-fields-medallists</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://blog.zerosharp.com/images/blog/an-afternoon-with-two-fields-medallists-001.jpg"></p>

<p>On Saturday I attended an excellent discussion at the Tate modern which was part of <a href="http://www.tate.org.uk/whats-on/tate-modern/eventseries/topology">a series of lectures on Topology</a>.  The first part was a screening of <em>Au Bonheur des Maths</em>, a film by Raymond Depardon and Claudine Nougaret which is a collection of portraits of famous mathematicians describing beauty in mathematics.  The second part was a discussion on the same topic between Sir Michael Atiyah and Cédric Villani, both winners of the <a href="http://en.wikipedia.org/wiki/Fields_Medal">Fields Medal</a>.  You can read a review of the event at <a href="http://tonysmaths.blogspot.co.uk/2012/06/atiyah-and-villani-at-tate-modern-value.html">Tony Mann&#8217;s maths blog</a>.</p>

<p>I particularly enjoyed witnessing world-class mathematicians in the flesh and learning a little about their day-to-day work.  <a href="http://en.wikipedia.org/wiki/Michael_Atiyah">Sir Michael Atiyah</a> is a jovial fellow in his 80s who speaks extremely quickly as if his mouth is trying to keep up with his thoughts.  His passion for mathematics is infectious.</p>

<p><img class="left" src="http://blog.zerosharp.com/images/blog/an-afternoon-with-two-fields-medallists-002.jpg"></p>

<p>In stark comparison <a href="http://en.wikipedia.org/wiki/C%C3%A9dric_Villani">Cédric Villani</a> is a flamboyant Frenchman who was dressed in a three-piece suit and a cravat.  He looks more like a musketeer than a mathematician.  He was wearing an ornate and sparkly jewel in the shape of a spider on his lapel (and apparently always does).  He speaks very good English but with quite a thick French accent.  He has a mischevous sense of humour and an endless enthusiasm.  Check out his great <a href="http://www.youtube.com/watch?v=U3kKjGKp9rA#!">TEDx talk</a>.</p>

<p>Altogether the atmosphere was one of relaxed, humorous, intellectual entertainment.  Both mathematicians drew on anecdotes from the history of mathematics.  It was clear that both of them derive considerable pleasure from sharing their knowledge and experiences.</p>

<p>There were many aspects of their work that I felt I could relate to as a software developer: looking for answers sometimes feels like you are exploring a valley and sometimes like you are fighting a battle.  Often the strict constraints of the system force you to be more creative to break away from them and towards new discovery.  Being stuck is a common and natural occurrence.</p>

<p>One of the interesting digressions was regarding a famous question in topology - how to turn a sphere inside-out (which is known as <a href="http://mathworld.wolfram.com/SphereEversion.html"><em>eversion</em></a>).  Apparently, when Arnold Shapiro described his work on the problem to <a href="http://en.wikipedia.org/wiki/Bernard_Morin">Bernard Morin</a> who is blind, Morin was able to visualise the transformation, but Shapiro had the distinct impression that he was not taking any particular point of view.  Perhaps this is similar to the when you think of holding a sphere in your hands rather than looking at it.</p>

<p>If you have a few minutes, you can learn how to turn a sphere inside-out in the following amazing video.</p>

<iframe width="640" height="390" src="http://www.youtube.com/embed/wO61D9x6lNY " frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>


<p>Sir Michael closed the discussion with the following quotation:</p>

<blockquote><p>My work always tried to unite the truth with the beautiful, but when I had to choose one or the other, I usually chose the beautiful.</p><footer><strong>Hermann Weyl</strong></footer></blockquote>


<h5>References</h5>

<ul>
<li>Photo credits: <a href="http://www.magnumphotos.com/C.aspx?VP3=ViewBox_VPage&amp;VBID=2K1HZOF8CB106">Raymond Depardon/Magnum Photos</a></li>
<li>Video credit: <a href="http://www.geom.uiuc.edu/docs/outreach/oi/">Outside In</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The only robot on any other planet]]></title>
    <link href="http://blog.zerosharp.com/the-only-robot-on-any-other-planet/"/>
    <updated>2012-05-30T08:44:00+01:00</updated>
    <id>http://blog.zerosharp.com/the-only-robot-on-any-other-planet</id>
    <content type="html"><![CDATA[<p>This post is part of an ongoing series about robots, past and present.  See <a href="http://blog.zerosharp.com/musical-interlude/">Musical Interlude</a>.</p>

<h3>The Mars <em>Opportunity</em> Rover</h3>

<p><em>Opportunity</em> landed on Mars in January 2004.  It is currently the only active robot on any planet other than Earth (until the scheduled arrival of <a href="http://www.youtube.com/watch?v=P4boyXQuUIw"><em>Curiosity</em></a> in August 2012).  The mission was originally supposed to last 90 days.</p>

<p>The rover contains pieces of the fallen World Trade Center which were turned into shields to protect cabling.</p>

<p>This photo of the Endeavour Crater on Mars was taken by the <em>Opportunity</em> rover on March 9, 2012.</p>

<p><img src="http://blog.zerosharp.com/images/blog/the-only-other-robot-001.jpg"></p>

<h4>Hardware - if it ain&#8217;t broke, don&#8217;t fix it</h4>

<p>NASA prefers hardware that has been used successfully on previous missions, even if it means compromising on performance.</p>

<p>The computer on board is a <a href="http://en.wikipedia.org/wiki/IBM_RAD6000">RAD6000</a>. It is single board computer designed for the US Air Force by BAE Systems with a 32-bit processor based on the IBM RISC single chip CPU.  It has 128 MB of RAM.It is radiation hardened so that it can withstand the harsh environment of space. The RAD6000 is reported to cost between USD 200,000 and USD 300,000.</p>

<blockquote><p>It&#8217;s a venerable board. We&#8217;ve used it ever since the Mars Pathfinder Mission what — about 12 years ago, 14 years ago?</p><footer><strong>Peter Gluck,</strong> <cite><a href='http://news.oreilly.com/2008/07/the-software-behind-the-mars-p.html'>The Software Behind the Mars Phoenix</a></cite></footer></blockquote>


<h4>Lifecycle</h4>

<p><a href="http://en.wikipedia.org/wiki/File:Opportunity_-_Cratera_Eagle.jpg"><img class="right" src="http://blog.zerosharp.com/images/blog/the-only-other-robot-002.jpg" title="Eagle Crater landing site" ></a></p>

<p>The software on a Mars lander is expected take 3-4 years development.
It&#8217;s designed according to a <a href="http://en.wikipedia.org/wiki/Waterfall_model">Waterfall</a> model split roughly as follows:</p>

<ul>
<li>9 months requirements definition</li>
<li>12-18 months in design phase</li>
<li>12-18 months test phase</li>
<li>Launch!</li>
</ul>


<h4>Software</h4>

<blockquote><p>One of the things about the software, one of the unique aspects about working software on a spacecraft is it&#8217;s the only part of the system that you can change after launch.</p><footer><strong>left</strong></footer></blockquote>


<p>The operating system is <a href="http://en.wikipedia.org/wiki/VxWorks">VxWorks</a>.  The software on board the spacecraft is entirely in <em>C</em>.  The software on the rover is about 650,000 lines of <em>C</em>.</p>

<pre><code>#include void main() { printf("Hello Mars\n"); }
</code></pre>

<p>No GitHub.  Most space technology software is considered arms technology, so it cannot be made open source.</p>

<h4>References</h4>

<ul>
<li><a href="http://www.universetoday.com/95358/opportunity-gets-a-view-from-the-edge/">Universe Today blog</a></li>
<li><a href="http://news.oreilly.com/2008/07/the-software-behind-the-mars-p.html">The Software Behind the Mars Phoenix</a> Audio interview with Peter Gluck</li>
<li>Image credits NASA/JPL-Caltech</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet 1.8 Installation Problem]]></title>
    <link href="http://blog.zerosharp.com/nuget-1-dot-8-installation-problem/"/>
    <updated>2012-05-25T00:26:00+01:00</updated>
    <id>http://blog.zerosharp.com/nuget-1-dot-8-installation-problem</id>
    <content type="html"><![CDATA[<p>The NuGet team just released NuGet 1.8.  Unfortunately there is an issue when upgrading it via the NuGet package manager.  The following message appears and the installation fails.</p>

<pre>
VSIXInstaller.SignatureMismatchException: The installed version of 'NuGet Package Manager' 
is signed, but the update version has an invalid signature. Therefore, Extension Manager 
cannot install the update. 

  at VSIXInstaller.Common.VerifyMatchingExtensionSignatures(IInstalledExtension installedExtension, 
    IInstallableExtension updateExtension) 
  at VSIXInstaller.InstallProgressPage.BeginInstallVSIX(SupportedVSSKU targetAppID)
</pre>


<p></p>

<p>As explained in the <a href="http://docs.nuget.org/docs/release-notes/nuget-1.8">NuGet release notes</a>, one solution is to uninstall NuGet from the VS Extension Gallery before reinstalling.  Note: If Visual Studio won&#8217;t allow you to uninstall the extension (the Uninstall button is disabled), then you likely need to restart Visual Studio using &#8220;Run as Administrator.&#8221;</p>

<p>Another alternative (courtesy of <a href="http://jeffhandley.com/">Jeff Handley</a>) is to install <a href="http://connect.microsoft.com/VisualStudio/Downloads/DownloadDetails.aspx?DownloadID=38654">this Visual Studio hotfix</a> and the next time you start Visual Studio, updating via the package manager will work.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Testing the property signatures of DevExpress validation rules using NUnit and LINQ]]></title>
    <link href="http://blog.zerosharp.com/testing-the-property-signatures-of-devexpress-validation-rules-using-nunit-and-linq/"/>
    <updated>2012-05-24T16:39:00+01:00</updated>
    <id>http://blog.zerosharp.com/testing-the-property-signatures-of-devexpress-validation-rules-using-nunit-and-linq</id>
    <content type="html"><![CDATA[<p>One of the projects I work on uses the validation module of the <a href="http://devexpress.com/Products/NET/Application_Framework/">eXpressApp Framework (XAF)</a>.  Since the business logic is complex, there are many validation rules defined using the <code>[RuleFromBoolProperty]</code>.</p>

<p>One of the recurring problems occurs when the signature of the associated property is incorrect.  Consider the following:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="na">[RuleFromBoolProperty(&quot;Invoice_IsAmountGreaterThanZero&quot;, </span>
</span><span class='line'><span class="na">  DefaultContexts.Save, </span>
</span><span class='line'><span class="na">  &quot;Invoice amount must be greater than zero.&quot;, </span>
</span><span class='line'><span class="na">  UsedProperties = &quot;Amount&quot;)]</span>
</span><span class='line'><span class="k">public</span> <span class="kt">bool</span> <span class="n">IsAmountGreaterThanZero</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">get</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">Amount</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Notice that the rule is declared <code>public</code>.  This causes the getter to be executed when it is not required (see the <a href="http://documentation.devexpress.com/#Xaf/clsDevExpressPersistentValidationRuleFromBoolPropertyAttributetopic">note</a> in the documentation).  However another problem is that the default behaviour for public properties of XPObjects is to persist them to the datastore which means the application will attempt to create a new column called <code>IsAmountGreaterThanZero</code>.</p>

<p>Instead, either property should be declared <code>protected</code> or the property should also have the <code>[NonPersistent]</code> and <code>[MemberDesignTimeVisibility(false)]</code> attributes as well.</p>

<p>Consequently, I wrote the following unit test which will detect any properties which have the <code>[RuleFromBoolProperty]</code> attribute.  This is not really a unit test, rather a sort of meta-test</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="na">[TestFixture]</span>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">ValidationRuleDeclarationMetaTests</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="na"> [Test]</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">void</span> <span class="nf">Test_RuleFromBoolPropertyDeclarations_ShouldBeProtectedVisibility</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="kt">var</span> <span class="n">assemblies</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Assembly</span><span class="p">[]</span> <span class="p">{</span> <span class="k">typeof</span><span class="p">(</span><span class="n">MyObjectAssembly</span><span class="p">).</span><span class="n">Assembly</span> <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>      <span class="kt">var</span> <span class="n">invalidProperties</span> <span class="p">=</span> <span class="n">assemblies</span><span class="p">.</span><span class="n">SelectMany</span><span class="p">(</span><span class="n">a</span> <span class="p">=&gt;</span> <span class="n">a</span><span class="p">.</span><span class="n">GetTypes</span><span class="p">())</span>
</span><span class='line'>                                        <span class="p">.</span><span class="n">SelectMany</span><span class="p">(</span><span class="n">t</span> <span class="p">=&gt;</span> <span class="n">t</span><span class="p">.</span><span class="n">GetProperties</span><span class="p">(</span><span class="n">BindingFlags</span><span class="p">.</span><span class="n">Public</span> <span class="p">|</span> <span class="n">BindingFlags</span><span class="p">.</span><span class="n">Instance</span><span class="p">))</span>
</span><span class='line'>                                        <span class="p">.</span><span class="n">Where</span><span class="p">(</span><span class="n">p</span> <span class="p">=&gt;</span> <span class="n">p</span><span class="p">.</span><span class="n">GetCustomAttributes</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">RuleFromBoolPropertyAttribute</span><span class="p">),</span> <span class="k">true</span><span class="p">)</span>
</span><span class='line'>                                                     <span class="p">.</span><span class="n">Any</span><span class="p">())</span>
</span><span class='line'>                                        <span class="p">.</span><span class="n">Select</span><span class="p">(</span><span class="n">p</span> <span class="p">=&gt;</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{0}.{1}&quot;</span><span class="p">,</span> <span class="n">p</span><span class="p">.</span><span class="n">DeclaringType</span><span class="p">,</span> <span class="n">p</span><span class="p">.</span><span class="n">Name</span><span class="p">))</span>
</span><span class='line'>                                        <span class="p">.</span><span class="n">Distinct</span><span class="p">();</span>
</span><span class='line'>  
</span><span class='line'>      <span class="n">Assert</span><span class="p">.</span><span class="n">IsFalse</span><span class="p">(</span><span class="n">invalidProperties</span><span class="p">.</span><span class="n">Any</span><span class="p">(),</span>
</span><span class='line'>                     <span class="s">&quot;There are &#39;public&#39; properties with the [RuleFromBoolProperty] attribute. &quot;</span> <span class="p">+</span>
</span><span class='line'>                     <span class="s">&quot;These should be &#39;protected&#39; instead. &quot;</span> <span class="p">+</span>
</span><span class='line'>                     <span class="s">&quot;The invalid properties are: &quot;</span> <span class="p">+</span> <span class="n">String</span><span class="p">.</span><span class="n">Join</span><span class="p">(</span><span class="s">&quot;, &quot;</span><span class="p">,</span> <span class="n">invalidProperties</span><span class="p">));</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>  
</span></code></pre></td></tr></table></div></figure>


<p>Now the build will fail whenever a validation property signature is incorrect.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Musical Interlude]]></title>
    <link href="http://blog.zerosharp.com/musical-interlude/"/>
    <updated>2012-05-15T11:10:00+01:00</updated>
    <id>http://blog.zerosharp.com/musical-interlude</id>
    <content type="html"><![CDATA[<p>This post is part of an ongoing series about robots, past and present.  See <a href="http://blog.zerosharp.com/robot-egyptologists/">Robot Egyptologists</a>.</p>

<p>Robot quadcopters playing the James Bond theme tune.</p>

<iframe width="640" height="390" src="http://www.youtube.com/embed/_sUeGC-8dyk " frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>


<p>There is no human controlling the robots. Each one has been assigned a series of points in space that it must reach at specific times.  The robots are aware of each other and avoid collisions.</p>

<h4>References</h4>

<ul>
<li><a href="http://kumar.grasp.upenn.edu/">Vijay Kumar</a> at the University of Pennsylvania</li>
<li><a href="http://www.newscientist.com/blogs/nstv/2012/03/swarm-of-robot-helicopters-performs-james-bond-tune.html">New Scientist</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Robot Egyptologists]]></title>
    <link href="http://blog.zerosharp.com/robot-egyptologists/"/>
    <updated>2012-05-01T11:52:00+01:00</updated>
    <id>http://blog.zerosharp.com/robot-egyptologists</id>
    <content type="html"><![CDATA[<p>This post is part of an ongoing series about robots, past and present.  See <a href="http://blog.zerosharp.com/skiing-on-mars/">Skiing on Mars</a>.</p>

<h3>Mysterious Shafts in the Great Pyramid of Giza</h3>

<p>Various robots have been used to explore secret tunnels in the Great Pyramid of Giza.</p>

<p><a href="http://http://en.wikipedia.org/wiki/File:Great_Pyramid_Diagram.svg"><img class="right" src="http://blog.zerosharp.com/images/blog/robot-egyptologists-001.png"></a></p>

<p>The tunnels were discovered in 1872 by Waynman Dixon, a British engineer who was helping with a project to undertake accurate measurements of the pyramid.  He noticed a crack in the southern wall of the Queen&#8217;s Chamber and <strong>discovered a shaft hidden behind the masonry</strong>, as well as a similar shaft in the northern wall.  The shafts are very narrow (20x14cm) and so there was no feasible method of exploring them until recently.  The shafts in question are <strong>shown in red on the diagram above</strong>.  There are two similar shafts in the King&#8217;s Chamber above it, but these have exits on the outside of the pyramid.</p>

<h3>Enter the Robots</h3>

<p><img class="right" src="http://blog.zerosharp.com/images/blog/robot-egyptologists-003.jpg" title="Upuaut-2 (image credit Michael Studt)" >
<img class="left" src="http://blog.zerosharp.com/images/blog/robot-egyptologists-002.gif" title="The slab at the end of the southern shaft" >
In 1992-3, a series of robots were sent into the shafts to explore them.  The most advanced of these was <strong>Upuhaut-2</strong>, built by a German engineer Rudolf Gantenbrink.  It was able to <strong>crawl up the southern shaft 63 metres</strong> to reveal a stone slab blocking the shaft.  The slab has two copper clasps and looks like some sort of door.</p>

<p>In 2002, another robot, the <strong>Pyramid Rover</strong> designed by iRobot of Boston (the people behind the Roomba vacuum cleaning robot) in collaboration with the National Geographic Society took the exploration further by drilling a hole through the slab and inserting a miniature fibre-optic camera.  They discovered a space of a few inches followed by &#8230; <strong>another door!</strong>.  The same robot was also able to explore the northern shaft which twists and turns more preventing earlier robots from getting very far.  It too ends up with a door approximately 63 metres from the entrance.</p>

<p>The <strong><a href="http://en.wikipedia.org/wiki/Djedi_Project">Djedi Project</a></strong> is a team of International and Egyptian experts currently dedicated to the further robot exploration of the tunnels via robots.  In 2011, it managed to drill a similar hole in the door at the end of the northern shaft.  The robot was also equipped with a miniature snake camera which was able to view the small chamber beyond the door and, in particular, <strong>some reddish hieroglyphs</strong>.  Here&#8217;s a video from one of the sponsors of the project.</p>

<iframe width="640" height="390" src="http://www.youtube.com/embed/CyUoF9977o0 " frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>


<h4>References</h4>

<ul>
<li>Keith Payne&#8217;s blog <a href="http://emhotep.net/2012/03/07/locations/lower-egypt/giza-plateau-lower-egypt/the-djedi-project-the-next-generation-in-robotic-archaeology/">Em Hotep</a></li>
<li><a href="http://www.drhawass.com/events/mystery-hidden-doors-inside-great-pyramid-0">Dr. Zahi Hawass blog</a></li>
<li><a href="http://www.newscientist.com/article/mg21028144.500-first-images-from-great-pyramids-chamber-of-secrets.html">New Scientist</a></li>
<li><a href="http://www.cheops.org/startpage/thefuture/future.htm">Rudolf Gantenbrink&#8217;s site</a></li>
<li>Images via Wikipedia, <a href="http://www.flickr.com/photos/mickythepixel/3903073791/">Michael Studt</a> via <a href="http://heritage-key.com/egypt/gizas-robot-explorers">Heritage Key</a>,</li>
</ul>

]]></content>
  </entry>
  
</feed>
